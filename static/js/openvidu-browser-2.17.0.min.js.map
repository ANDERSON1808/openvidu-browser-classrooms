{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","../node_modules/events/events.js","../node_modules/freeice/index.js","../node_modules/freeice/stun.json","../node_modules/freeice/turn.json","../node_modules/hark/hark.js","../node_modules/inherits/inherits_browser.js","../node_modules/normalice/index.js","../node_modules/platform/platform.js","../node_modules/uuid/dist/index.js","../node_modules/uuid/dist/md5-browser.js","../node_modules/uuid/dist/nil.js","../node_modules/uuid/dist/parse.js","../node_modules/uuid/dist/regex.js","../node_modules/uuid/dist/rng-browser.js","../node_modules/uuid/dist/sha1-browser.js","../node_modules/uuid/dist/stringify.js","../node_modules/uuid/dist/v1.js","../node_modules/uuid/dist/v3.js","../node_modules/uuid/dist/v35.js","../node_modules/uuid/dist/v4.js","../node_modules/uuid/dist/v5.js","../node_modules/uuid/dist/validate.js","../node_modules/uuid/dist/version.js","../node_modules/wildemitter/wildemitter.js","../node_modules/wolfy87-eventemitter/EventEmitter.js","../package.json","Main.ts","OpenVidu/Connection.ts","OpenVidu/EventDispatcher.ts","OpenVidu/Filter.ts","OpenVidu/LocalRecorder.ts","OpenVidu/OpenVidu.ts","OpenVidu/Publisher.ts","OpenVidu/Session.ts","OpenVidu/Stream.ts","OpenVidu/StreamManager.ts","OpenVidu/Subscriber.ts","OpenViduInternal/Enums/LocalRecorderState.ts","OpenViduInternal/Enums/OpenViduError.ts","OpenViduInternal/Enums/VideoInsertMode.ts","OpenViduInternal/Events/ConnectionEvent.ts","OpenViduInternal/Events/ConnectionPropertyChangedEvent.ts","OpenViduInternal/Events/Event.ts","OpenViduInternal/Events/FilterEvent.ts","OpenViduInternal/Events/NetworkQualityLevelChangedEvent.ts","OpenViduInternal/Events/PublisherSpeakingEvent.ts","OpenViduInternal/Events/RecordingEvent.ts","OpenViduInternal/Events/SessionDisconnectedEvent.ts","OpenViduInternal/Events/SignalEvent.ts","OpenViduInternal/Events/StreamEvent.ts","OpenViduInternal/Events/StreamManagerEvent.ts","OpenViduInternal/Events/StreamPropertyChangedEvent.ts","OpenViduInternal/Events/VideoElementEvent.ts","OpenViduInternal/KurentoUtils/kurento-jsonrpc/Mapper.js","OpenViduInternal/KurentoUtils/kurento-jsonrpc/clients/index.js","OpenViduInternal/KurentoUtils/kurento-jsonrpc/clients/jsonrpcclient.js","OpenViduInternal/KurentoUtils/kurento-jsonrpc/clients/transports/index.js","OpenViduInternal/KurentoUtils/kurento-jsonrpc/clients/transports/webSocketWithReconnection.js","OpenViduInternal/KurentoUtils/kurento-jsonrpc/index.js","OpenViduInternal/KurentoUtils/kurento-jsonrpc/packers/JsonRPC.js","OpenViduInternal/KurentoUtils/kurento-jsonrpc/packers/XmlRPC.js","OpenViduInternal/KurentoUtils/kurento-jsonrpc/packers/index.js","OpenViduInternal/Logger/OpenViduLogger.ts","OpenViduInternal/ScreenSharing/Screen-Capturing-Auto.js","OpenViduInternal/ScreenSharing/Screen-Capturing.js","OpenViduInternal/Utils/Platform.ts","OpenViduInternal/WebRtcPeer/WebRtcPeer.ts","OpenViduInternal/WebRtcStats/WebRtcStats.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","ReflectOwnKeys","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","ProcessEmitWarning","warning","console","warn","NumberIsNaN","Number","isNaN","value","EventEmitter","init","this","once","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","defineProperty","enumerable","get","set","arg","RangeError","getPrototypeOf","create","setMaxListeners","_getMaxListeners","that","getMaxListeners","emit","type","arguments","push","doError","events","error","er","err","message","context","handler","len","listeners","arrayClone","_addListener","prepend","m","existing","newListener","unshift","warned","w","String","name","emitter","count","addListener","on","prependListener","onceWrapper","fired","removeListener","wrapFn","_onceWrap","state","wrapped","bind","prependOnceListener","list","position","originalListener","shift","spliceOne","off","removeAllListeners","keys","key","_listeners","unwrap","evlistener","unwrapListeners","rawListeners","listenerCount","eventNames","arr","copy","Array","index","pop","ret","Promise","resolve","reject","errorListener","resolver","slice","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","flags","addEventListener","wrapListener","removeEventListener","normalice","freeice","opts","servers","stun","turn","stunCount","turnCount","selected","getServers","out","input","idx","Math","random","splice","map","url","WildEmitter","getMaxVolume","analyser","fftBins","maxVolume","Infinity","getFloatFrequencyData","ii","audioContextType","window","AudioContext","webkitAudioContext","audioContext","stream","options","harker","smoothing","interval","threshold","play","history","running","sourceNode","createAnalyser","fftSize","smoothingTimeConstant","Float32Array","frequencyBinCount","jquery","HTMLAudioElement","HTMLVideoElement","createMediaElementSource","createMediaStreamSource","connect","destination","speaking","suspend","resume","onstatechange","setThreshold","setInterval","stop","disconnect","speakingHistory","looper","setTimeout","currentVolume","inherits","ctor","superCtor","super_","constructor","writable","configurable","TempCtor","protocols","protocol","parts","output","trim","indexOf","split","username","credential","urls","objectTypes","function","object","root","oldRoot","freeExports","freeModule","nodeType","freeGlobal","global","self","maxSafeInteger","pow","reOpera","thisBinding","objectProto","hasOwnProperty","toString","capitalize","string","charAt","toUpperCase","cleanupOS","os","pattern","label","data","10.0","6.4","6.3","6.2","6.1","6.0","5.2","5.1","5.01","5.0","4.0","4.90","test","exec","replace","RegExp","format","each","callback","forOwn","getClassOf","isHostType","property","qualify","reduce","array","accumulator","parse","ua","isCustomContext","nav","navigator","userAgent","isModuleScope","likeChrome","objectClass","airRuntimeClass","enviroClass","javaClass","java","phantomClass","rhino","environment","alpha","beta","doc","document","opera","operamini","operaClass","arch","description","prerelease","useFeatures","version","isSpecialCasedOS","layout","getLayout","getName","product","getProduct","manufacturer","getManufacturer","Apple","iPad","iPhone","iPod","Alcatel","Archos","Amazon","Kindle","Kindle Fire","Asus","Transformer","Barnes & Noble","Nook","BlackBerry","PlayBook","Google","Google TV","Nexus","HP","TouchPad","HTC","Huawei","Lenovo","LG","Microsoft","Xbox","Xbox One","Motorola","Xoom","Nintendo","Wii U","Wii","Nokia","Lumia","Oppo","Samsung","Galaxy S","Galaxy S2","Galaxy S3","Galaxy S4","Sony","PlayStation","PlayStation Vita","Xiaomi","Mi","Redmi","getOS","guesses","result","guess","getVersion","patterns","toStringPlatform","parseFloat","lang","System","getProperty","join","system","process","browser","versions","electron","node","nw","platform","runtime","flash","Capabilities","phantom","major","minor","patch","documentMode","toFixed","appMinorVersion","external","parseInt","architecture","family","cpuClass","define","amd","_v","default","_v2","_v3","_v4","_nil","_version","_validate","_stringify","_parse","_interopRequireDefault","obj","__esModule","md5","bytes","msg","unescape","encodeURIComponent","Uint8Array","charCodeAt","md5ToHexEncodedArray","wordsToMd5","bytesToWords","length32","hexTab","x","hex","getOutputLength","inputLength8","b","d","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","Uint32Array","y","lsw","msw","bitRotateLeft","num","cnt","md5cmn","q","s","_default","uuid","v","rng","getRandomValues","crypto","msCrypto","rnds8","z","ROTL","sha1","K","H","isArray","l","N","ceil","M","j","floor","W","T","byteToHex","substr","stringify","offset","toLowerCase","_rng","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","buf","clockseq","seedBytes","msecs","Date","now","nsecs","dt","tl","tmh","_md","v3","URL","DNS","stringToBytes","str","hashfunc","generateUUID","namespace","v4","rnds","_sha","v5","_regex","validate","mixin","isWildEmitter","event","groupName","fn","callbacks","hasGroup","group","func","_groupName","releaseGroup","item","handlers","specialCallbacks","getWildcardCallbacks","eventName","proto","originalGlobalValue","indexOfListener","alias","aliasClosure","getListeners","evt","_getEvents","response","flattenListeners","flatListeners","getListenersAsObject","isValidListener","listenerIsWrapped","addOnceListener","defineEvent","defineEvents","evts","addListeners","manipulateListeners","removeListeners","remove","single","multiple","removeEvent","emitEvent","listenersMap","_getOnceReturnValue","trigger","setOnceReturnValue","_onceReturnValue","noConflict","author","dependencies","hark","wolfy87-eventemitter","devDependencies","@types/node","@types/platform","browserify","grunt","grunt-cli","grunt-contrib-copy","grunt-contrib-sass","grunt-contrib-uglify","grunt-contrib-watch","grunt-postcss","grunt-string-replace","grunt-ts","terser","tsify","tslint","typedoc","typescript","license","main","repository","scripts","browserify-prod","build","docs","types","OpenVidu_1","OpenVidu","Stream_1","OpenViduLogger_1","logger","OpenViduLogger","getInstance","Connection","session","connectionOptions","disposed","role","localOptions","connectionId","id","creationTime","createdAt","metadata","rpcSessionId","sessionId","record","remoteOptions","streams","initRemoteStreams","info","sendIceCandidate","candidate","debug","outboundStreamOpts","openvidu","sendRequest","endpointName","sdpMid","sdpMLineIndex","JSON","_this","forEach","streamOptions","connection","hasAudio","hasVideo","audioActive","videoActive","typeOfVideo","frameRate","videoDimensions","filter","Stream","addStream","inboundStreamOpts","removeStream","streamId","dispose","EventDispatcher","userHandlerArrowHandler","WeakMap","ee","arrowHandler","delete","onAux","onceAux","StreamPropertyChangedEvent_1","OpenViduError_1","Filter","Map","execMethod","method","params","stringParams","errorMsg","OpenViduError","OpenViduErrorName","OPENVIDU_PERMISSION_DENIED","oldValue","assign","lastExecMethod","StreamPropertyChangedEvent","streamManager","eventType","LocalRecorderState_1","Platform_1","LocalRecorder","chunks","PlatformUtils","LocalRecorderState","READY","mimeType","MediaRecorder","log","isTypeSupported","mediaRecorder","getMediaStream","start","ondataavailable","onerror","onstart","onstop","onStopDefault","onpause","onresume","onwarning","RECORDING","FINISHED","pause","PAUSED","preview","parentElement","videoPreview","createElement","autoplay","isSafariBrowser","setAttribute","parentElementDom","getElementById","appendChild","src","videoPreviewSrc","clean","blob","then","catch","download","style","display","body","createObjectURL","href","click","revokeObjectURL","removeChild","getBlob","uploadAsBinary","endpoint","headers","http_1","XMLHttpRequest","open","_i","_a","setRequestHeader","onreadystatechange","readyState","status","responseText","send","uploadAsMultipartfile","http_2","sendable","FormData","append","Blob","LocalRecorder_1","Publisher_1","Session_1","SessionDisconnectedEvent_1","VideoInsertMode_1","screenSharingAuto","screenSharing","RpcBuilder","packageJson","publishers","secret","recorder","advancedConfiguration","webrtcStatsInterval","libraryVersion","isMobileDevice","publisher","isLocalStreamPublished","videos","attempts_1","oldWidth_1","width","oldHeight_1","height","getNewVideoDimensions_1","isIonicIos","newWidth","video","videoWidth","newHeight","videoHeight","firefoxSettings","getVideoTracks","getSettings","isFirefoxBrowser","isFirefoxMobileBrowser","videoReference","repeatUntilChange_1","newDimensions","sendStreamPropertyChangedEvent_1","oldWidth","oldHeight","clearTimeout","newValue","reason","sendVideoData","initSession","Session","initPublisher","targetElement","param2","param3","properties","audioSource","MediaStreamTrack","videoSource","insertMode","VideoInsertMode","APPEND","mirror","publishAudio","publishVideo","resolution","Publisher","completionHandler","initialize","initPublisherAsync","initLocalRecorder","checkSystemRequirements","isIPhoneOrIPad","isIOSWithSafari","isChromeBrowser","isChromeMobileBrowser","isOperaBrowser","isOperaMobileBrowser","isEdgeBrowser","isEdgeMobileBrowser","isAndroidBrowser","isElectron","isSamsungBrowser","checkScreenSharingCapabilities","canScreenShare","getDevices","mediaDevices","enumerateDevices","deviceInfos","devices","isIonicAndroid","cordova","plugins","EnumerateDevicesPlugin","getEnumerateDevices","pluginDevices","pluginAudioDevices","videoDevices","audioDevices","device","kind","deviceInfo","deviceId","defaultMatch","includes","wiredMatch","wirelessMatch","getUserMedia","askForAudioStreamOnly","previousMediaStream","constraints","definedAudioConstraint","audio","constraintsAux","audioOnlyStream","addTrack","getAudioTracks","track","generateAudioDeviceError","generateMediaConstraints","myConstraints","videoTrack","audioTrack","_b","addAlreadyProvidedTracks","MediaStream","mustAskForAudioTrackLater_1","startsWith","mediaStream","errorName","SCREEN_CAPTURE_DENIED","errorMessage","DEVICE_ACCESS_DENIED","enableProdMode","setAdvancedConfiguration","configuration","publisherProperties","NO_INPUT_SOURCE_SET","ideal","widthAndHeight","idealWidth","idealHeight","configureDeviceIdOrScreensharing","startWs","onConnectSucces","config","heartbeat","ws","uri","wsUri","onconnected","ondisconnect","disconnectCallback","onreconnecting","reconnectingCallback","onreconnected","reconnectedCallback","rpc","requestTimeout","participantJoined","onParticipantJoined","participantPublished","onParticipantPublished","participantUnpublished","onParticipantUnpublished","participantLeft","onParticipantLeft","participantEvicted","onParticipantEvicted","recordingStarted","onRecordingStarted","recordingStopped","onRecordingStopped","sendMessage","onNewMessage","streamPropertyChanged","onStreamPropertyChanged","connectionPropertyChanged","onConnectionPropertyChanged","networkQualityLevelChanged","onNetworkQualityLevelChangedChanged","filterEventDispatched","onFilterEventDispatched","iceCandidate","recvIceCandidate","mediaError","onMediaError","jsonRpcClient","clients","JsonRpcClient","closeWs","close","getWsUri","getSecret","getRecorder","INPUT_AUDIO_DEVICE_NOT_FOUND","constraint","exact","PUBLISHER_PROPERTIES_ERROR","DEVICE_ALREADY_IN_USE","INPUT_AUDIO_DEVICE_GENERIC_ERROR","isScreenShare","setVideoSource","SCREEN_SHARING_NOT_SUPPORTED","prefix","videoSourceString","electronScreenId","mandatory","chromeMediaSource","chromeMediaSourceId","screenShareChromeExtension","getScreenConstraints","screenConstraints","error_1","extensionId","getChromeExtensionStatus","error_2","SCREEN_EXTENSION_DISABLED","error_3","SCREEN_EXTENSION_NOT_INSTALLED","firefoxString","getScreenId","sourceId","extensionUrl","GENERIC_ERROR","isRoomAvailable","onLostConnection","alert","resetPing","onRecoveredConnection","sessionDisconnectEvent","SessionDisconnectedEvent","callDefaultBehavior","StreamManager_1","StreamEvent_1","VideoElementEvent_1","_super","__extends","targEl","mediaConstraints","accessAllowed","isSubscribedToRemote","accessDenied","streamEvent","StreamEvent","affectedMediaStream","displayMyRemote","localMediaStreamWhenSubscribedToRemote","enabled","subscribeToRemote","subscribeToMyRemote","currentTime","paused","ended","VideoElementEvent","replaceTrack","replaceMediaStreamTrack","removedTrack","removeTrack","senders","getRTCPeerConnection","getSenders","sender","find","timeForDialogEvent","startTime","errorCallback","openViduError","successCallback","initializeVideoReference","updateMediaStreamInVideos","firstVideoElement","isSendVideo","isSendScreen","videoDimensionsSet_1","isLocalStreamReadyToPublish","interval_1","clearInterval","getVideoDimensions","innerHeight","innerWidth","screenShareResizeInterval","oldValue_1","getMediaSuccess","clearPermissionDialogTimer","isSendAudio","setPermissionDialogTimer","getMediaError","INPUT_VIDEO_DEVICE_NOT_FOUND","outboundStreamOptions","setOutboundStreamOptions","reestablishStreamPlayingEvent","addPlayEventToFirstVideo","setMediaStream","createVideoElement","srcObject","waitTime","permissionDialogTimeout","StreamManager","Connection_1","Filter_1","Subscriber_1","EventDispatcher_1","ConnectionEvent_1","FilterEvent_1","RecordingEvent_1","SignalEvent_1","ConnectionPropertyChangedEvent_1","NetworkQualityLevelChangedEvent_1","streamManagers","remoteStreamsCreated","isFirstIonicIosSubscriber","countDownForIonicIosSubscribersActive","remoteConnections","startSpeakingEventsEnabled","startSpeakingEventsEnabledOnce","stopSpeakingEventsEnabled","stopSpeakingEventsEnabledOnce","token","processToken","participantId","stringClientMetadata","connectAux","BROWSER_NOT_SUPPORTED","getFamily","leave","subscribe","param4","subscribeToAudio","subscribeToVideo","subscriber","Subscriber","subscribeAsync","unsubscribe","disposeWebRtcPeer","disposeMediaStream","removeAllVideos","publish","publishedOnce","unpublish","forceDisconnect","forceUnpublish","signal","signalMessage","to","connectionIds_1","typeAux","substring","remoteConnection","enableStartSpeakingEvent","enableStopSpeakingEvent","enableOnceStartSpeakingEvent","enableOnceStopSpeakingEvent","remainingStartSpeakingListeners","disableStartSpeakingEvent","remainingStopSpeakingListeners","disableStopSpeakingEvent","getConnection","ConnectionEvent","size","getRemoteConnection","afterConnectionFound","con","stopPublisherStream","strippedType","from","SignalEvent","ConnectionPropertyChangedEvent","NetworkQualityLevelChangedEvent","component","foundation","port","priority","relatedAddress","relatedPort","tcpType","usernameFragment","toJSON","senderConnectionId","getWebRtcPeer","addIceCandidate","onSessionClosed","reconnectBrokenStreams","RecordingEvent","FilterEvent","someReconnection","streamIceConnectionStateBroken","initWebRtcPeerSend","initWebRtcPeerReceive","eventArray","forced","stopVideoDataIntervals","initializeParams","joinParams","getDescription","intervalSeconds","doInterval","maxLoops","obtainAndSendVideo_1","__awaiter","pc","connectionState","getStats","statsMap","sent","arr_1","stats","frameHeight","frameWidth","loops_1","videoDataInterval","videoDataTimeout","isReactNative","processJoinRoomResponse","events_1","connections","existingParticipants","remoteConnectionOptions","match","host","hostname","pathname","search","hash","queryParams","decodeURI","param","values","httpUri","coturnIp","turnUsername","turnCredential","stunUrl","turnUrl1","turnUrl2","iceServers","capabilities","WebRtcPeer_1","WebRtcStats_1","PublisherSpeakingEvent_1","StreamManagerEvent_1","isSubscribeToRemote","publisherStartSpeakingEventEnabled","publisherStartSpeakingEventEnabledOnce","publisherStopSpeakingEventEnabled","publisherStopSpeakingEventEnabledOnce","volumeChangeEventEnabled","volumeChangeEventEnabledOnce","updateMediaStream","applyFilter","removeFilter","webRtcPeer","stopWebRtcStats","speechEvent","screen","setSpeechEventIfNotExists","PublisherSpeakingEvent","disabledByOnce","enableVolumeChangeEvent","force","harkEvent","oldVolumeValue","StreamManagerEvent","enableOnceVolumeChangeEvent","disableVolumeChangeEvent","isLocal","getSelectedIceCandidate","webRtcStats","getSelectedIceCandidateInfo","report","getRemoteIceCandidateList","remoteCandidatesQueue","getLocalIceCandidateList","localCandidatesQueue","forceMediaReconnectionAfterNetworkDrop","iceConnectionState","harkOptions","publisherSpeakingEventsOptions","reconnect","initHarkEvents","userMediaConstraints","onicecandidate","getIceServersConf","simulcast","sdpOfferParam","doLoopback","processAnswer","sdpAnswer","remotePeerSuccessfullyEstablished","initWebRtcStats","WebRtcPeerSendrecv","WebRtcPeerSendonly","addIceConnectionStateChangeListener","generateOffer","sdpOffer","offerConstraints","needsTimeoutOnProcessAnswer","WebRtcPeerRecvonly","getReceivers","remote","WebRtcStats","isEnabled","returnValue","gatherStatsForPeer","isReportWanted","finalReport","timestamp","ssrc","firCount","pliCount","nackCount","qpSum","mediaType","framesEncoded","packetsSent","bytesSent","totalRoundTripTime","availableOutgoingBitrate","currentRoundTripTime","responsesReceived","framesDecoded","packetsReceived","packetsLost","jitter","bytesReceived","availableIncomingBitrate","nominated","lazyLaunchVideoElementCreatedEvent","HTMLElement","canplayListenerAdded","element","canPlayListener","remainingVolumeEventListeners","addVideoElement","initializeVideoProperties","returnNumber","_c","disassociateVideo","pushNewStreamManagerVideo","createVideo","insMode","AFTER","parentNode","insertBefore","nextSibling","BEFORE","PREPEND","childNodes","REPLACE","replaceChild","updatePublisherSpeakingEventsOptions","currentHarkOptions","newInterval","newThreshold","controls","muted","transform","removeMirrorVideo","mirrorVideo","streamManagerVideo","removeSrcObject","disassociated","vParent","newVideo","webkitTransform","Event_1","cancelable","Event","changedProperty","hasBeenPrevented","isDefaultPrevented","preventDefault","_d","_e","_g","_f","_h","openviduPublishers","streamOptionsServer","Mapper","sources","source","key2","ids","WebSocketWithReconnection","PING_INTERVAL","RECONNECTING","CONNECTED","DISCONNECTED","Logger","wsConfig","notReconnectIfNumLessThan","pingNextNum","enabledPings","pingPongStarted","pingInterval","pull","request","reply","stopPing","updateNotReconnectIfLessThan","usePing","rpcBuilderOptions","request_timeout","ping_request_timeout","heartbeatRequestTimeout","packers","JsonRPC","requestTime","encode","sendPing","pingNum","reconnectWs","cancel","forceClose","millis","MAX_RETRIES","RETRY_TIME_MS","CONNECTING","OPEN","CLOSING","CLOSED","closing","registerMessageHandler","reconnecting","WebSocket","onopen","reconnectionOnClose","onclose","maxRetries","numRetries","reconnectAux","defineProperty_IE8","oThis","aArgs","fToBind","fNOP","fBound","BASE_TIMEOUT","unifyResponseMethods","responseMethods","unifyTransport","transport","postMessage","write","onmessage","SyntaxError","RpcNotification","packer","onRequest","pack","unpack","peerID","max_retries","transportMessage","decode","getTransport","setTransport","response_timeout","duplicates_timeout","requestID","requests","responses","processedResponses","message2Key","storeResponse","dest","timeout","storeProcessedResponse","ack","RpcRequest","duplicated","Boolean","responseMethod","retried","dispatchCallback","encode_transport","rt","retry","notification","processRequest","idAck","processResponse","duplicatedResponse","processed","transports","jsonrpc","result_defined","error_defined","XmlRPC","LOG_FNS","isProdMode","instance","custom_parameter","msSaveOrOpenBlob","msSaveBlob","mozGetUserMedia","mozMediaSource","mediaSource","onIFrameCallback","canRequestAudioTrack","chromeExtensionStatus","postGetSourceIdMessage","screen_constraints","maxWidth","maxHeight","optional","iframe","loadIFrame","isLoaded","contentWindow","captureSourceId","captureCustomSourceId","captureSourceIdWithAudio","loadCallback","onload","documentElement","postGetChromeExtensionStatusMessage","screenCallback","isFirefox","InstallTrigger","isOpera","isChrome","chrome","origin","location","onMessageCallback","isChromeExtensionAvailable","getSourceId","getCustomSourceId","get-custom-sourceId","getSourceIdWithAudio","extensionid","image","getScreenConstraintsWithAudio","firefoxScreenConstraints","isTouchable","isIPad","isIPhone","vendor","WebRtcPeer","iceCandidateList","candidategatheringdone","RTCPeerConnection","generateUniqueId","onsignalingstatechange","signalingState","getTracks","offerAudio","offerVideo","offerToReceiveAudio","mode","offerToReceiveVideo","addTransceiver","direction","createOffer","offer","setLocalDescription","localDescription","sdp","answer","setRemoteDescription","RTCSessionDescription","remoteDescription","otherId","oniceconnectionstatechange","STATS_ITEM_NAME","webRtcStatsEnabled","statsInterval","webrtcObj","localStorage","getItem","webrtcStatsConfig","POST_URL","httpEndpoint","webRtcStatsIntervalId","sendStatsToHttpEndpoint","localCandidateId","remoteCandidateId","googCandidatePair","localCandidates","remoteCandidates","stat","googActiveConnection","finalLocalCandidate_1","candList","cand","ipAddress","portNumber","raw","finalRemoteCandidate_1","localCandidate","remoteCandidate","sendStats","Content-type","fetch","webrtcStats","generateJSONStatsResponse","statsReport","initWebRtcStatsResponse","valueNames","names","isAudio","isVideo","isIndoundRtp","isOutboundRtp","inbound","outbound","response_1","@timestamp","toISOString","participant_id","session_id","platform_description","webrtc_stats"],"mappings":"CAAA,WAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,SAAA,SAAAd,GAAA,IAAAE,EAAAD,EAAAI,GAAA,GAAAL,GAAA,OAAAI,EAAAF,GAAAF,KAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,OAAAJ,GAAA,EAAA,CAAA,CAAAiB,EAAA,CAAA,SAAAT,QAAAU,OAAAJ,SCqBA,aAEA,IAAAK,SAAAC,UAAA,SAAAA,QAAA,KACA,IAAAC,aAAAF,UAAAA,EAAAG,QAAA,WACAH,EAAAG,MACA,SAAAD,aAAAE,OAAAC,SAAAC,MACA,OAAAC,SAAAC,UAAAL,MAAAP,KAAAQ,OAAAC,SAAAC,OAGA,IAAAG,eACA,GAAAT,UAAAA,EAAAU,UAAA,WAAA,CACAD,eAAAT,EAAAU,aACA,GAAAC,OAAAC,sBAAA,CACAH,eAAA,SAAAA,eAAAL,QACA,OAAAO,OAAAE,oBAAAT,QACAU,OAAAH,OAAAC,sBAAAR,cAEA,CACAK,eAAA,SAAAA,eAAAL,QACA,OAAAO,OAAAE,oBAAAT,SAIA,SAAAW,mBAAAC,SACA,GAAAC,SAAAA,QAAAC,KAAAD,QAAAC,KAAAF,SAGA,IAAAG,YAAAC,OAAAC,OAAA,SAAAF,YAAAG,OACA,OAAAA,QAAAA,OAGA,SAAAC,eACAA,aAAAC,KAAA5B,KAAA6B,MAEA1B,OAAAJ,QAAA4B,aACAxB,OAAAJ,QAAA+B,KAAAA,KAGAH,aAAAA,aAAAA,aAEAA,aAAAf,UAAAmB,QAAAC,UACAL,aAAAf,UAAAqB,aAAA,EACAN,aAAAf,UAAAsB,cAAAF,UAIA,IAAAG,oBAAA,GAEA,SAAAC,cAAAC,UACA,UAAAA,WAAA,WAAA,CACA,MAAA,IAAAC,UAAA,0EAAAD,WAIAtB,OAAAwB,eAAAZ,aAAA,sBAAA,CACAa,WAAA,KACAC,IAAA,WACA,OAAAN,qBAEAO,IAAA,SAAAC,KACA,UAAAA,MAAA,UAAAA,IAAA,GAAApB,YAAAoB,KAAA,CACA,MAAA,IAAAC,WAAA,kGAAAD,IAAA,KAEAR,oBAAAQ,OAIAhB,aAAAC,KAAA,WAEA,GAAAC,KAAAE,UAAAC,WACAH,KAAAE,UAAAhB,OAAA8B,eAAAhB,MAAAE,QAAA,CACAF,KAAAE,QAAAhB,OAAA+B,OAAA,MACAjB,KAAAI,aAAA,EAGAJ,KAAAK,cAAAL,KAAAK,eAAAF,WAKAL,aAAAf,UAAAmC,gBAAA,SAAAA,gBAAA5D,GACA,UAAAA,IAAA,UAAAA,EAAA,GAAAoC,YAAApC,GAAA,CACA,MAAA,IAAAyD,WAAA,gFAAAzD,EAAA,KAEA0C,KAAAK,cAAA/C,EACA,OAAA0C,MAGA,SAAAmB,iBAAAC,MACA,GAAAA,KAAAf,gBAAAF,UACA,OAAAL,aAAAQ,oBACA,OAAAc,KAAAf,cAGAP,aAAAf,UAAAsC,gBAAA,SAAAA,kBACA,OAAAF,iBAAAnB,OAGAF,aAAAf,UAAAuC,KAAA,SAAAA,KAAAC,MACA,IAAA1C,KAAA,GACA,IAAA,IAAApB,EAAA,EAAAA,EAAA+D,UAAApD,OAAAX,IAAAoB,KAAA4C,KAAAD,UAAA/D,IACA,IAAAiE,QAAAH,OAAA,QAEA,IAAAI,OAAA3B,KAAAE,QACA,GAAAyB,SAAAxB,UACAuB,QAAAA,SAAAC,OAAAC,QAAAzB,eACA,IAAAuB,QACA,OAAA,MAGA,GAAAA,QAAA,CACA,IAAAG,GACA,GAAAhD,KAAAT,OAAA,EACAyD,GAAAhD,KAAA,GACA,GAAAgD,cAAA9D,MAAA,CAGA,MAAA8D,GAGA,IAAAC,IAAA,IAAA/D,MAAA,oBAAA8D,GAAA,KAAAA,GAAAE,QAAA,IAAA,KACAD,IAAAE,QAAAH,GACA,MAAAC,IAGA,IAAAG,QAAAN,OAAAJ,MAEA,GAAAU,UAAA9B,UACA,OAAA,MAEA,UAAA8B,UAAA,WAAA,CACAxD,aAAAwD,QAAAjC,KAAAnB,UACA,CACA,IAAAqD,IAAAD,QAAA7D,OACA,IAAA+D,UAAAC,WAAAH,QAAAC,KACA,IAAA,IAAAzE,EAAA,EAAAA,EAAAyE,MAAAzE,EACAgB,aAAA0D,UAAA1E,GAAAuC,KAAAnB,MAGA,OAAA,MAGA,SAAAwD,aAAA1D,OAAA4C,KAAAf,SAAA8B,SACA,IAAAC,EACA,IAAAZ,OACA,IAAAa,SAEAjC,cAAAC,UAEAmB,OAAAhD,OAAAuB,QACA,GAAAyB,SAAAxB,UAAA,CACAwB,OAAAhD,OAAAuB,QAAAhB,OAAA+B,OAAA,MACAtC,OAAAyB,aAAA,MACA,CAGA,GAAAuB,OAAAc,cAAAtC,UAAA,CACAxB,OAAA2C,KAAA,cAAAC,KACAf,SAAAA,SAAAA,SAAAA,SAAAA,UAIAmB,OAAAhD,OAAAuB,QAEAsC,SAAAb,OAAAJ,MAGA,GAAAiB,WAAArC,UAAA,CAEAqC,SAAAb,OAAAJ,MAAAf,WACA7B,OAAAyB,iBACA,CACA,UAAAoC,WAAA,WAAA,CAEAA,SAAAb,OAAAJ,MACAe,QAAA,CAAA9B,SAAAgC,UAAA,CAAAA,SAAAhC,eAEA,GAAA8B,QAAA,CACAE,SAAAE,QAAAlC,cACA,CACAgC,SAAAf,KAAAjB,UAIA+B,EAAApB,iBAAAxC,QACA,GAAA4D,EAAA,GAAAC,SAAApE,OAAAmE,IAAAC,SAAAG,OAAA,CACAH,SAAAG,OAAA,KAGA,IAAAC,EAAA,IAAA7E,MAAA,+CACAyE,SAAApE,OAAA,IAAAyE,OAAAtB,MAAA,cACA,2CACA,kBACAqB,EAAAE,KAAA,8BACAF,EAAAG,QAAApE,OACAiE,EAAArB,KAAAA,KACAqB,EAAAI,MAAAR,SAAApE,OACAkB,mBAAAsD,IAIA,OAAAjE,OAGAmB,aAAAf,UAAAkE,YAAA,SAAAA,YAAA1B,KAAAf,UACA,OAAA6B,aAAArC,KAAAuB,KAAAf,SAAA,QAGAV,aAAAf,UAAAmE,GAAApD,aAAAf,UAAAkE,YAEAnD,aAAAf,UAAAoE,gBACA,SAAAA,gBAAA5B,KAAAf,UACA,OAAA6B,aAAArC,KAAAuB,KAAAf,SAAA,OAGA,SAAA4C,cACA,IAAApD,KAAAqD,MAAA,CACArD,KAAArB,OAAA2E,eAAAtD,KAAAuB,KAAAvB,KAAAuD,QACAvD,KAAAqD,MAAA,KACA,GAAA7B,UAAApD,SAAA,EACA,OAAA4B,KAAAQ,SAAArC,KAAA6B,KAAArB,QACA,OAAAqB,KAAAQ,SAAA9B,MAAAsB,KAAArB,OAAA6C,YAIA,SAAAgC,UAAA7E,OAAA4C,KAAAf,UACA,IAAAiD,MAAA,CAAAJ,MAAA,MAAAE,OAAApD,UAAAxB,OAAAA,OAAA4C,KAAAA,KAAAf,SAAAA,UACA,IAAAkD,QAAAN,YAAAO,KAAAF,OACAC,QAAAlD,SAAAA,SACAiD,MAAAF,OAAAG,QACA,OAAAA,QAGA5D,aAAAf,UAAAkB,KAAA,SAAAA,KAAAsB,KAAAf,UACAD,cAAAC,UACAR,KAAAkD,GAAA3B,KAAAiC,UAAAxD,KAAAuB,KAAAf,WACA,OAAAR,MAGAF,aAAAf,UAAA6E,oBACA,SAAAA,oBAAArC,KAAAf,UACAD,cAAAC,UACAR,KAAAmD,gBAAA5B,KAAAiC,UAAAxD,KAAAuB,KAAAf,WACA,OAAAR,MAIAF,aAAAf,UAAAuE,eACA,SAAAA,eAAA/B,KAAAf,UACA,IAAAqD,KAAAlC,OAAAmC,SAAArG,EAAAsG,iBAEAxD,cAAAC,UAEAmB,OAAA3B,KAAAE,QACA,GAAAyB,SAAAxB,UACA,OAAAH,KAEA6D,KAAAlC,OAAAJ,MACA,GAAAsC,OAAA1D,UACA,OAAAH,KAEA,GAAA6D,OAAArD,UAAAqD,KAAArD,WAAAA,SAAA,CACA,KAAAR,KAAAI,eAAA,EACAJ,KAAAE,QAAAhB,OAAA+B,OAAA,UACA,QACAU,OAAAJ,MACA,GAAAI,OAAA2B,eACAtD,KAAAsB,KAAA,iBAAAC,KAAAsC,KAAArD,UAAAA,gBAEA,UAAAqD,OAAA,WAAA,CACAC,UAAA,EAEA,IAAArG,EAAAoG,KAAAzF,OAAA,EAAAX,GAAA,EAAAA,IAAA,CACA,GAAAoG,KAAApG,KAAA+C,UAAAqD,KAAApG,GAAA+C,WAAAA,SAAA,CACAuD,iBAAAF,KAAApG,GAAA+C,SACAsD,SAAArG,EACA,OAIA,GAAAqG,SAAA,EACA,OAAA9D,KAEA,GAAA8D,WAAA,EACAD,KAAAG,YACA,CACAC,UAAAJ,KAAAC,UAGA,GAAAD,KAAAzF,SAAA,EACAuD,OAAAJ,MAAAsC,KAAA,GAEA,GAAAlC,OAAA2B,iBAAAnD,UACAH,KAAAsB,KAAA,iBAAAC,KAAAwC,kBAAAvD,UAGA,OAAAR,MAGAF,aAAAf,UAAAmF,IAAApE,aAAAf,UAAAuE,eAEAxD,aAAAf,UAAAoF,mBACA,SAAAA,mBAAA5C,MACA,IAAAY,UAAAR,OAAAlE,EAEAkE,OAAA3B,KAAAE,QACA,GAAAyB,SAAAxB,UACA,OAAAH,KAGA,GAAA2B,OAAA2B,iBAAAnD,UAAA,CACA,GAAAqB,UAAApD,SAAA,EAAA,CACA4B,KAAAE,QAAAhB,OAAA+B,OAAA,MACAjB,KAAAI,aAAA,OACA,GAAAuB,OAAAJ,QAAApB,UAAA,CACA,KAAAH,KAAAI,eAAA,EACAJ,KAAAE,QAAAhB,OAAA+B,OAAA,kBAEAU,OAAAJ,MAEA,OAAAvB,KAIA,GAAAwB,UAAApD,SAAA,EAAA,CACA,IAAAgG,KAAAlF,OAAAkF,KAAAzC,QACA,IAAA0C,IACA,IAAA5G,EAAA,EAAAA,EAAA2G,KAAAhG,SAAAX,EAAA,CACA4G,IAAAD,KAAA3G,GACA,GAAA4G,MAAA,iBAAA,SACArE,KAAAmE,mBAAAE,KAEArE,KAAAmE,mBAAA,kBACAnE,KAAAE,QAAAhB,OAAA+B,OAAA,MACAjB,KAAAI,aAAA,EACA,OAAAJ,KAGAmC,UAAAR,OAAAJ,MAEA,UAAAY,YAAA,WAAA,CACAnC,KAAAsD,eAAA/B,KAAAY,gBACA,GAAAA,YAAAhC,UAAA,CAEA,IAAA1C,EAAA0E,UAAA/D,OAAA,EAAAX,GAAA,EAAAA,IAAA,CACAuC,KAAAsD,eAAA/B,KAAAY,UAAA1E,KAIA,OAAAuC,MAGA,SAAAsE,WAAA3F,OAAA4C,KAAAgD,QACA,IAAA5C,OAAAhD,OAAAuB,QAEA,GAAAyB,SAAAxB,UACA,MAAA,GAEA,IAAAqE,WAAA7C,OAAAJ,MACA,GAAAiD,aAAArE,UACA,MAAA,GAEA,UAAAqE,aAAA,WACA,OAAAD,OAAA,CAAAC,WAAAhE,UAAAgE,YAAA,CAAAA,YAEA,OAAAD,OACAE,gBAAAD,YAAApC,WAAAoC,WAAAA,WAAApG,QAGA0B,aAAAf,UAAAoD,UAAA,SAAAA,UAAAZ,MACA,OAAA+C,WAAAtE,KAAAuB,KAAA,OAGAzB,aAAAf,UAAA2F,aAAA,SAAAA,aAAAnD,MACA,OAAA+C,WAAAtE,KAAAuB,KAAA,QAGAzB,aAAA6E,cAAA,SAAA5B,QAAAxB,MACA,UAAAwB,QAAA4B,gBAAA,WAAA,CACA,OAAA5B,QAAA4B,cAAApD,UACA,CACA,OAAAoD,cAAAxG,KAAA4E,QAAAxB,QAIAzB,aAAAf,UAAA4F,cAAAA,cACA,SAAAA,cAAApD,MACA,IAAAI,OAAA3B,KAAAE,QAEA,GAAAyB,SAAAxB,UAAA,CACA,IAAAqE,WAAA7C,OAAAJ,MAEA,UAAAiD,aAAA,WAAA,CACA,OAAA,OACA,GAAAA,aAAArE,UAAA,CACA,OAAAqE,WAAApG,QAIA,OAAA,EAGA0B,aAAAf,UAAA6F,WAAA,SAAAA,aACA,OAAA5E,KAAAI,aAAA,EAAApB,eAAAgB,KAAAE,SAAA,IAGA,SAAAkC,WAAAyC,IAAAvH,GACA,IAAAwH,KAAA,IAAAC,MAAAzH,GACA,IAAA,IAAAG,EAAA,EAAAA,EAAAH,IAAAG,EACAqH,KAAArH,GAAAoH,IAAApH,GACA,OAAAqH,KAGA,SAAAb,UAAAJ,KAAAmB,OACA,KAAAA,MAAA,EAAAnB,KAAAzF,OAAA4G,QACAnB,KAAAmB,OAAAnB,KAAAmB,MAAA,GACAnB,KAAAoB,MAGA,SAAAR,gBAAAI,KACA,IAAAK,IAAA,IAAAH,MAAAF,IAAAzG,QACA,IAAA,IAAAX,EAAA,EAAAA,EAAAyH,IAAA9G,SAAAX,EAAA,CACAyH,IAAAzH,GAAAoH,IAAApH,GAAA+C,UAAAqE,IAAApH,GAEA,OAAAyH,IAGA,SAAAjF,KAAA8C,QAAAD,MACA,OAAA,IAAAqC,SAAA,SAAAC,QAAAC,QACA,SAAAC,cAAAxD,KACAiB,QAAAO,eAAAR,KAAAyC,UACAF,OAAAvD,KAGA,SAAAyD,WACA,UAAAxC,QAAAO,iBAAA,WAAA,CACAP,QAAAO,eAAA,QAAAgC,eAEAF,QAAA,GAAAI,MAAArH,KAAAqD,YAGAiE,+BAAA1C,QAAAD,KAAAyC,SAAA,CAAAtF,KAAA,OACA,GAAA6C,OAAA,QAAA,CACA4C,8BAAA3C,QAAAuC,cAAA,CAAArF,KAAA,WAKA,SAAAyF,8BAAA3C,QAAAd,QAAA0D,OACA,UAAA5C,QAAAG,KAAA,WAAA,CACAuC,+BAAA1C,QAAA,QAAAd,QAAA0D,QAIA,SAAAF,+BAAA1C,QAAAD,KAAAtC,SAAAmF,OACA,UAAA5C,QAAAG,KAAA,WAAA,CACA,GAAAyC,MAAA1F,KAAA,CACA8C,QAAA9C,KAAA6C,KAAAtC,cACA,CACAuC,QAAAG,GAAAJ,KAAAtC,gBAEA,UAAAuC,QAAA6C,mBAAA,WAAA,CAGA7C,QAAA6C,iBAAA9C,MAAA,SAAA+C,aAAA/E,KAGA,GAAA6E,MAAA1F,KAAA,CACA8C,QAAA+C,oBAAAhD,KAAA+C,cAEArF,SAAAM,YAEA,CACA,MAAA,IAAAL,UAAA,6EAAAsC,oDC7eA,aAEA,IAAAgD,UAAAnI,QAAA,aA8DA,IAAAoI,QAAA,SAAAC,MAEA,IAAAC,QAAA,CACAC,MAAAF,MAAA,IAAAE,MAAAvI,QAAA,eACAwI,MAAAH,MAAA,IAAAG,MAAAxI,QAAA,gBAGA,IAAAyI,WAAAJ,MAAA,IAAAI,WAAA,EACA,IAAAC,WAAAL,MAAA,IAAAK,WAAA,EACA,IAAAC,SAEA,SAAAC,WAAAjF,KAAAyB,OACA,IAAAyD,IAAA,GACA,IAAAC,MAAA,GAAArH,OAAA6G,QAAA3E,OACA,IAAAoF,IAEA,MAAAD,MAAAtI,QAAAqI,IAAArI,OAAA4E,MAAA,CACA2D,IAAAC,KAAAC,SAAAH,MAAAtI,OAAA,EACAqI,IAAAA,IAAApH,OAAAqH,MAAAI,OAAAH,IAAA,IAGA,OAAAF,IAAAM,KAAA,SAAAC,KAEA,UAAAA,MAAA,YAAAA,eAAAnE,QAAA,CACA,OAAAmE,QACA,CACA,OAAAjB,UAAAxE,KAAA,IAAAyF,SAMAT,SAAA,GAAAlH,OAAAmH,WAAA,OAAAH,YAEA,GAAAC,UAAA,CACAC,SAAAA,SAAAlH,OAAAmH,WAAA,OAAAF,YAGA,OAAAC,UAGAjI,OAAAJ,QAAA8H,4FC1GA1H,OAAAJ,QAAA,CACA,0BACA,2BACA,2BACA,2BACA,2BACA,iBACA,mBACA,kBACA,6BACA,sBACA,sBACA,qBACA,+DCbAI,OAAAJ,QAAA,4CCAA,IAAA+I,YAAArJ,QAAA,eAEA,SAAAsJ,aAAAC,SAAAC,SACA,IAAAC,WAAAC,SACAH,SAAAI,sBAAAH,SAEA,IAAA,IAAA3J,EAAA,EAAA+J,GAAAJ,QAAAhJ,OAAAX,EAAA+J,GAAA/J,IAAA,CACA,GAAA2J,QAAA3J,GAAA4J,WAAAD,QAAA3J,GAAA,EAAA,CACA4J,UAAAD,QAAA3J,IAIA,OAAA4J,UAIA,IAAAI,iBACA,UAAAC,SAAA,YAAA,CACAD,iBAAAC,OAAAC,cAAAD,OAAAE,mBAGA,IAAAC,aAAA,KACAvJ,OAAAJ,QAAA,SAAA4J,OAAAC,SACA,IAAAC,OAAA,IAAAf,YAGA,IAAAQ,iBAAA,OAAAO,OAGA,IAAAD,QAAAA,SAAA,GACAE,UAAAF,QAAAE,WAAA,GACAC,SAAAH,QAAAG,UAAA,GACAC,UAAAJ,QAAAI,UACAC,KAAAL,QAAAK,KACAC,QAAAN,QAAAM,SAAA,GACAC,QAAA,KAGAT,aAAAE,QAAAF,cAAAA,cAAA,IAAAJ,iBAEA,IAAAc,WAAAnB,QAAAD,SAEAA,SAAAU,aAAAW,iBACArB,SAAAsB,QAAA,IACAtB,SAAAuB,sBAAAT,UACAb,QAAA,IAAAuB,aAAAxB,SAAAyB,mBAEA,GAAAd,OAAAe,OAAAf,OAAAA,OAAA,GACA,GAAAA,kBAAAgB,kBAAAhB,kBAAAiB,iBAAA,CAEAR,WAAAV,aAAAmB,yBAAAlB,QACA,UAAAM,OAAA,YAAAA,KAAA,KACAD,UAAAA,YAAA,OACA,CAEAI,WAAAV,aAAAoB,wBAAAnB,QACAK,UAAAA,YAAA,GAGAI,WAAAW,QAAA/B,UACA,GAAAiB,KAAAjB,SAAA+B,QAAArB,aAAAsB,aAEAnB,OAAAoB,SAAA,MAEApB,OAAAqB,QAAA,WACA,OAAAxB,aAAAwB,WAEArB,OAAAsB,OAAA,WACA,OAAAzB,aAAAyB,UAEApK,OAAAwB,eAAAsH,OAAA,QAAA,CAAApH,IAAA,WACA,OAAAiH,aAAApE,SAEAoE,aAAA0B,cAAA,WACAvB,OAAA1G,KAAA,eAAAuG,aAAApE,QAGAuE,OAAAwB,aAAA,SAAAjM,GACA4K,UAAA5K,GAGAyK,OAAAyB,YAAA,SAAAhM,GACAyK,SAAAzK,GAGAuK,OAAA0B,KAAA,WACApB,QAAA,MACAN,OAAA1G,KAAA,iBAAA,IAAA6G,WACA,GAAAH,OAAAoB,SAAA,CACApB,OAAAoB,SAAA,MACApB,OAAA1G,KAAA,oBAEA6F,SAAAwC,aACApB,WAAAoB,cAEA3B,OAAA4B,gBAAA,GACA,IAAA,IAAAnM,EAAA,EAAAA,EAAA4K,QAAA5K,IAAA,CACAuK,OAAA4B,gBAAAnI,KAAA,GAKA,IAAAoI,OAAA,WACAC,YAAA,WAGA,IAAAxB,QAAA,CACA,OAGA,IAAAyB,cAAA7C,aAAAC,SAAAC,SAEAY,OAAA1G,KAAA,gBAAAyI,cAAA5B,WAEA,IAAAE,QAAA,EACA,GAAA0B,cAAA5B,YAAAH,OAAAoB,SAAA,CAEA,IAAA,IAAA3L,EAAAuK,OAAA4B,gBAAAxL,OAAA,EAAAX,EAAAuK,OAAA4B,gBAAAxL,OAAAX,IAAA,CACA4K,SAAAL,OAAA4B,gBAAAnM,GAEA,GAAA4K,SAAA,EAAA,CACAL,OAAAoB,SAAA,KACApB,OAAA1G,KAAA,kBAEA,GAAAyI,cAAA5B,WAAAH,OAAAoB,SAAA,CACA,IAAA,IAAA3L,EAAA,EAAAA,EAAAuK,OAAA4B,gBAAAxL,OAAAX,IAAA,CACA4K,SAAAL,OAAA4B,gBAAAnM,GAEA,GAAA4K,SAAA,EAAA,CACAL,OAAAoB,SAAA,MACApB,OAAA1G,KAAA,qBAGA0G,OAAA4B,gBAAA5F,QACAgE,OAAA4B,gBAAAnI,KAAA,GAAAsI,cAAA5B,YAEA0B,WACA3B,WAEA2B,SAEA,OAAA7B,+DC7IA,UAAA9I,OAAA+B,SAAA,WAAA,CAEA3C,OAAAJ,QAAA,SAAA8L,SAAAC,KAAAC,WACA,GAAAA,UAAA,CACAD,KAAAE,OAAAD,UACAD,KAAAlL,UAAAG,OAAA+B,OAAAiJ,UAAAnL,UAAA,CACAqL,YAAA,CACAvK,MAAAoK,KACAtJ,WAAA,MACA0J,SAAA,KACAC,aAAA,cAKA,CAEAhM,OAAAJ,QAAA,SAAA8L,SAAAC,KAAAC,WACA,GAAAA,UAAA,CACAD,KAAAE,OAAAD,UACA,IAAAK,SAAA,aACAA,SAAAxL,UAAAmL,UAAAnL,UACAkL,KAAAlL,UAAA,IAAAwL,SACAN,KAAAlL,UAAAqL,YAAAH,iDCTA,IAAAO,UAAA,CACA,QACA,SAGAlM,OAAAJ,QAAA,SAAAwI,OACA,IAAAM,KAAAN,OAAA,IAAAM,KAAAN,MACA,IAAA+D,SACA,IAAAC,MACA,IAAAC,OAAA,GAGA,UAAA3D,KAAA,YAAAA,eAAAnE,QAAA,CACA,OAAA6D,MAIAM,IAAAA,IAAA4D,OAGAH,SAAAD,UAAAA,UAAAK,QAAA7D,IAAAxB,MAAA,EAAA,KACA,IAAAiF,SAAA,CACA,OAAA/D,MAIAM,IAAAA,IAAAxB,MAAA,GACAkF,MAAA1D,IAAA8D,MAAA,KAEAH,OAAAI,SAAArE,MAAAqE,SACAJ,OAAAK,WAAAtE,MAAAsE,WAEA,GAAAN,MAAAtM,OAAA,EAAA,CACA4I,IAAA0D,MAAA,GACAA,MAAAA,MAAA,GAAAI,MAAA,KAGAH,OAAAI,SAAAL,MAAA,GACAC,OAAAK,YAAAtE,OAAA,IAAAsE,YAAAN,MAAA,IAAA,GAGAC,OAAA3D,IAAAyD,SAAAzD,IACA2D,OAAAM,KAAA,CAAAN,OAAA3D,KAEA,OAAA2D,gFCpDA,WACA,aAGA,IAAAO,YAAA,CACAC,SAAA,KACAC,OAAA,MAIA,IAAAC,KAAAH,mBAAAxD,SAAAA,QAAA1H,KAGA,IAAAsL,QAAAD,KAGA,IAAAE,YAAAL,mBAAAhN,UAAAA,QAGA,IAAAsN,WAAAN,mBAAA5M,SAAAA,SAAAA,OAAAmN,UAAAnN,OAGA,IAAAoN,WAAAH,aAAAC,mBAAAG,QAAA,UAAAA,OACA,GAAAD,aAAAA,WAAAC,SAAAD,YAAAA,WAAAhE,SAAAgE,YAAAA,WAAAE,OAAAF,YAAA,CACAL,KAAAK,WAQA,IAAAG,eAAAjF,KAAAkF,IAAA,EAAA,IAAA,EAGA,IAAAC,QAAA,UAGA,IAAAC,YAAAhM,KAGA,IAAAiM,YAAA/M,OAAAH,UAGA,IAAAmN,eAAAD,YAAAC,eAGA,IAAAC,SAAAF,YAAAE,SAWA,SAAAC,WAAAC,QACAA,OAAAxJ,OAAAwJ,QACA,OAAAA,OAAAC,OAAA,GAAAC,cAAAF,OAAA7G,MAAA,GAWA,SAAAgH,UAAAC,GAAAC,QAAAC,OAIA,IAAAC,KAAA,CACAC,OAAA,KACAC,IAAA,uBACAC,IAAA,MACAC,IAAA,IACAC,IAAA,qBACAC,MAAA,sBACAC,IAAA,0BACAC,IAAA,KACAC,KAAA,WACAC,MAAA,OACAC,MAAA,KACAC,OAAA,MAGA,GAAAd,SAAAC,OAAA,QAAAc,KAAAhB,MAAA,mBAAAgB,KAAAhB,MACAG,KAAAA,KAAA,UAAAc,KAAAjB,MAAA,CACAA,GAAA,WAAAG,KAGAH,GAAA5J,OAAA4J,IAEA,GAAAC,SAAAC,MAAA,CACAF,GAAAA,GAAAkB,QAAAC,OAAAlB,QAAA,KAAAC,OAGAF,GAAAoB,OACApB,GAAAkB,QAAA,QAAA,OACAA,QAAA,SAAA,OACAA,QAAA,gBAAA,UACAA,QAAA,cAAA,OACAA,QAAA,oBAAA,MACAA,QAAA,iBAAA,MACAA,QAAA,SAAA,OACAA,QAAA,KAAA,KACAA,QAAA,6BAAA,IACAA,QAAA,gBAAA,UACAA,QAAA,yBAAA,MACAA,QAAA,6BAAA,MACA7C,MAAA,QAAA,IAGA,OAAA2B,GAUA,SAAAqB,KAAA1C,OAAA2C,UACA,IAAA/I,OAAA,EACA5G,OAAAgN,OAAAA,OAAAhN,OAAA,EAEA,UAAAA,QAAA,UAAAA,QAAA,GAAAA,QAAAyN,eAAA,CACA,QAAA7G,MAAA5G,OAAA,CACA2P,SAAA3C,OAAApG,OAAAA,MAAAoG,aAEA,CACA4C,OAAA5C,OAAA2C,WAWA,SAAAF,OAAAxB,QACAA,OAAAzB,KAAAyB,QACA,MAAA,uBAAAoB,KAAApB,QACAA,OACAD,WAAAC,QAUA,SAAA2B,OAAA5C,OAAA2C,UACA,IAAA,IAAA1J,OAAA+G,OAAA,CACA,GAAAc,eAAA/N,KAAAiN,OAAA/G,KAAA,CACA0J,SAAA3C,OAAA/G,KAAAA,IAAA+G,UAYA,SAAA6C,WAAApO,OACA,OAAAA,OAAA,KACAuM,WAAAvM,OACAsM,SAAAhO,KAAA0B,OAAA2F,MAAA,GAAA,GAaA,SAAA0I,WAAA9C,OAAA+C,UACA,IAAA5M,KAAA6J,QAAA,YAAAA,OAAA+C,UAAA,SACA,OAAA,wCAAAV,KAAAlM,QACAA,MAAA,WAAA6J,OAAA+C,UAAA,MAUA,SAAAC,QAAA/B,QACA,OAAAxJ,OAAAwJ,QAAAsB,QAAA,eAAA,OAWA,SAAAU,OAAAC,MAAAP,UACA,IAAAQ,YAAA,KACAT,KAAAQ,OAAA,SAAAzO,MAAAmF,OACAuJ,YAAAR,SAAAQ,YAAA1O,MAAAmF,MAAAsJ,UAEA,OAAAC,YAUA,SAAA3D,KAAAyB,QACA,OAAAxJ,OAAAwJ,QAAAsB,QAAA,WAAA,IAaA,SAAAa,MAAAC,IAGA,IAAAzM,QAAAqJ,KAGA,IAAAqD,gBAAAD,WAAAA,IAAA,UAAAR,WAAAQ,KAAA,SAGA,GAAAC,gBAAA,CACA1M,QAAAyM,GACAA,GAAA,KAIA,IAAAE,IAAA3M,QAAA4M,WAAA,GAGA,IAAAC,UAAAF,IAAAE,WAAA,GAEAJ,KAAAA,GAAAI,WAGA,IAAAC,cAAAJ,iBAAA1C,aAAAV,QAGA,IAAAyD,WAAAL,kBACAC,IAAAI,WACA,aAAAtB,KAAAgB,MAAA,eAAAhB,KAAAtB,SAAAA,YAGA,IAAA6C,YAAA,SACAC,gBAAAP,gBAAAM,YAAA,4BACAE,YAAAR,gBAAAM,YAAA,cACAG,UAAAT,iBAAA1M,QAAAoN,KAAA,cAAAnB,WAAAjM,QAAAoN,MACAC,aAAAX,gBAAAM,YAAA,gBAGA,IAAAI,KAAA,SAAA3B,KAAA0B,YAAAnN,QAAAoN,KAGA,IAAAE,MAAAF,MAAAnB,WAAAjM,QAAAuN,cAAAL,YAGA,IAAAM,MAAAJ,KAAA,IAAA,IAGA,IAAAK,KAAAL,KAAA,IAAA,IAGA,IAAAM,IAAA1N,QAAA2N,UAAA,GAOA,IAAAC,MAAA5N,QAAA6N,WAAA7N,QAAA4N,MAGA,IAAAE,WAAA/D,QAAA0B,KAAAqC,WAAApB,iBAAAkB,MAAAA,MAAA,aAAA3B,WAAA2B,QACAE,WACAF,MAAA,KAKA,IAAAhD,KAGA,IAAAmD,KAAAtB,GAGA,IAAAuB,YAAA,GAGA,IAAAC,WAAA,KAGA,IAAAC,YAAAzB,IAAAI,UAGA,IAAAsB,QAAAD,aAAAN,cAAAA,MAAAO,SAAA,YAAAP,MAAAO,UAGA,IAAAC,iBAGA,IAAAC,OAAAC,UAAA,CACA,CAAA3D,MAAA,WAAAD,QAAA,QACA,UACA,CAAAC,MAAA,SAAAD,QAAA,eACA,OACA,SACA,WACA,SACA,QACA,UAIA,IAAA5J,KAAAyN,QAAA,CACA,YACA,QACA,gBACA,SACA,SACA,WACA,WACA,SACA,QACA,SACA,eACA,OACA,YACA,WACA,YACA,YACA,UACA,CAAA5D,MAAA,iBAAAD,QAAA,4BACA,SACA,eACA,WACA,YACA,QACA,SACA,WACA,CAAAC,MAAA,mBAAAD,QAAA,kBACA,YACA,CAAAC,MAAA,OAAAD,QAAA,+BACA,WACA,cACA,CAAAC,MAAA,cAAAD,QAAA,QACA,UACA,WACA,UACA,WACA,cACA,CAAAC,MAAA,iBAAAD,QAAA,aACA,CAAAC,MAAA,aAAAD,QAAA,aACA,aACA,CAAAC,MAAA,aAAAD,QAAA,SACA,QACA,CAAAC,MAAA,QAAAD,QAAA,OACA,WACA,SACA,CAAAC,MAAA,SAAAD,QAAA,sBACA,CAAAC,MAAA,gBAAAD,QAAA,kBACA,CAAAC,MAAA,UAAAD,QAAA,yBACA,CAAAC,MAAA,kBAAAD,QAAA,SACA,CAAAC,MAAA,KAAAD,QAAA,YACA,CAAAC,MAAA,KAAAD,QAAA,QACA,WAIA,IAAA8D,QAAAC,WAAA,CACA,CAAA9D,MAAA,aAAAD,QAAA,QACA,aACA,CAAAC,MAAA,WAAAD,QAAA,YACA,CAAAC,MAAA,YAAAD,QAAA,YACA,CAAAC,MAAA,YAAAD,QAAA,YACA,CAAAC,MAAA,YAAAD,QAAA,YACA,CAAAC,MAAA,YAAAD,QAAA,WACA,CAAAC,MAAA,YAAAD,QAAA,WACA,CAAAC,MAAA,iBAAAD,QAAA,WACA,CAAAC,MAAA,YAAAD,QAAA,WACA,CAAAC,MAAA,iBAAAD,QAAA,WACA,YACA,QACA,OACA,OACA,SACA,SACA,CAAAC,MAAA,cAAAD,QAAA,+BACA,QACA,OACA,WACA,mBACA,cACA,WACA,cACA,CAAAC,MAAA,QAAAD,QAAA,QACA,MACA,WACA,CAAAC,MAAA,WAAAD,QAAA,QACA,SAIA,IAAAgE,aAAAC,gBAAA,CACAC,MAAA,CAAAC,KAAA,EAAAC,OAAA,EAAAC,KAAA,GACAC,QAAA,GACAC,OAAA,GACAC,OAAA,CAAAC,OAAA,EAAAC,cAAA,GACAC,KAAA,CAAAC,YAAA,GACAC,iBAAA,CAAAC,KAAA,GACAC,WAAA,CAAAC,SAAA,GACAC,OAAA,CAAAC,YAAA,EAAAC,MAAA,GACAC,GAAA,CAAAC,SAAA,GACAC,IAAA,GACAC,OAAA,GACAC,OAAA,GACAC,GAAA,GACAC,UAAA,CAAAC,KAAA,EAAAC,WAAA,GACAC,SAAA,CAAAC,KAAA,GACAC,SAAA,CAAAC,QAAA,EAAAC,IAAA,GACAC,MAAA,CAAAC,MAAA,GACAC,KAAA,GACAC,QAAA,CAAAC,WAAA,EAAAC,YAAA,EAAAC,YAAA,EAAAC,YAAA,GACAC,KAAA,CAAAC,YAAA,EAAAC,mBAAA,GACAC,OAAA,CAAAC,GAAA,EAAAC,MAAA,KAIA,IAAAhH,GAAAiH,MAAA,CACA,gBACA,QACA,UACA,SACA,CAAA/G,MAAA,YAAAD,QAAA,QACA,SACA,CAAAC,MAAA,gBAAAD,QAAA,aACA,SACA,UACA,SACA,QACA,UACA,aACA,UACA,UACA,OACA,SACA,UACA,SACA,aACA,QACA,SACA,QACA,YACA,QACA,QACA,WACA,YACA,MACA,cACA,aAYA,SAAA4D,UAAAqD,SACA,OAAAtF,OAAAsF,SAAA,SAAAC,OAAAC,OACA,OAAAD,QAAAhG,OAAA,OACAiG,MAAAnH,SAAA0B,QAAAyF,QACA,MAAA,KAAAnG,KAAAe,MAAAoF,MAAAlH,OAAAkH,UAWA,SAAAlD,gBAAAgD,SACA,OAAAtF,OAAAsF,SAAA,SAAAC,OAAA/T,MAAAwE,KAEA,OAAAuP,SACA/T,MAAA2Q,UACA3Q,MAAA,0BAAA6N,KAAA8C,WACA5C,OAAA,MAAAQ,QAAA/J,KAAA,kBAAA,KAAAqJ,KAAAe,MACApK,OAWA,SAAAkM,QAAAoD,SACA,OAAAtF,OAAAsF,SAAA,SAAAC,OAAAC,OACA,OAAAD,QAAAhG,OAAA,OACAiG,MAAAnH,SAAA0B,QAAAyF,QACA,MAAA,KAAAnG,KAAAe,MAAAoF,MAAAlH,OAAAkH,UAWA,SAAAH,MAAAC,SACA,OAAAtF,OAAAsF,SAAA,SAAAC,OAAAC,OACA,IAAAnH,QAAAmH,MAAAnH,SAAA0B,QAAAyF,OACA,IAAAD,SAAAA,OACAhG,OAAA,MAAAlB,QAAA,wBAAA,KAAAgB,KAAAe,KACA,CACAmF,OAAApH,UAAAoH,OAAAlH,QAAAmH,MAAAlH,OAAAkH,OAEA,OAAAD,UAWA,SAAAnD,WAAAkD,SACA,OAAAtF,OAAAsF,SAAA,SAAAC,OAAAC,OACA,IAAAnH,QAAAmH,MAAAnH,SAAA0B,QAAAyF,OACA,IAAAD,SAAAA,OACAhG,OAAA,MAAAlB,QAAA,iBAAA,KAAAgB,KAAAe,KACAb,OAAA,MAAAlB,QAAA,gBAAA,KAAAgB,KAAAe,KACAb,OAAA,MAAAlB,QAAA,6CAAA,KAAAgB,KAAAe,KACA,CAEA,IAAAmF,OAAA/Q,OAAAgR,MAAAlH,QAAAiB,OAAAlB,QAAA,KAAAe,KAAAoG,MAAAlH,OAAAkH,MAAAlH,MAAAiH,QAAA9I,MAAA,MAAA,KAAA,SAAA2C,KAAAmG,OAAA,IAAA,CACAA,OAAA,IAAA,IAAAA,OAAA,GAGAC,MAAAA,MAAAlH,OAAAkH,MACAD,OAAA/F,OAAA+F,OAAA,GACAjG,QAAAC,OAAAlB,QAAA,KAAAmH,OACAlG,QAAAC,OAAA,SAAAiG,MAAA,SAAA,KAAA,KACAlG,QAAAC,OAAA,IAAAiG,MAAA,eAAA,KAAA,UAEA,OAAAD,UAWA,SAAAE,WAAAC,UACA,OAAA1F,OAAA0F,UAAA,SAAAH,OAAAlH,SACA,OAAAkH,SAAAhG,OAAAlB,QACA,2DAAA,KAAAgB,KAAAe,KAAA,GAAA,IAAA,QAWA,SAAAuF,mBACA,OAAAhU,KAAAgQ,aAAA,GAMAK,SAAAA,OAAA,CAAAA,SAQA,GAAA,cAAA5C,KAAAhB,MAAA+D,UACA5D,KAAA,kDAAAc,KAAAe,KAAA,CACA+B,QAAA5F,KAAAgC,KAAA,IAEAe,QAAA,0BAAA,KACA,KAGA,GAAA+C,eAAAF,QAAA,CACAA,QAAAC,WAAA,CAAAC,oBACA,GAAAA,cAAAF,QAAA,CACAA,QAAAA,QACA7C,QAAAC,OAAA,KAAAQ,QAAAsC,cAAA,YAAA,KAAAA,aAAA,KACA/C,QAAAC,OAAA,KAAAQ,QAAAsC,cAAA,eAAA,KAAAA,aAAA,OAGA,GAAA9D,KAAA,gBAAAc,KAAA8C,SAAA,CACAA,QAAA5D,KAAA,GAGA,GAAA,iBAAAa,KAAAgB,IAAA,CACA+B,SAAAA,QAAAA,QAAA,IAAA,IAAA,YAGA,GAAA1N,MAAA,cAAA,YAAA2K,KAAAgB,IAAA,CACAuB,YAAAvO,KAAA,sCAGA,GAAAqB,MAAA,MAAA,qBAAA2K,KAAAgB,IAAA,CACA7B,KAAA4B,MAAAC,GAAAd,QAAA,iBAAA,KACA+C,aAAA9D,KAAA8D,aACAF,QAAA5D,KAAA4D,aAGA,GAAA,MAAA/C,KAAA+C,SAAA,CACA1N,OAAAA,KAAA,UACA2J,GAAA,QAAAG,KAAA,gBAAAc,KAAAe,KACA,IAAA7B,KAAA,GAAAe,QAAA,KAAA,KACA,SAGA,GAAA7K,MAAA,aAAA,YAAA2K,KAAAhB,IAAA,CACAA,GAAA,eAGA,GAAAiE,cAAAA,cAAA,WACA,SAAAjD,KAAA3K,QAAA,qBAAA2K,KAAAgB,KAAA,WAAAhB,KAAA+C,WACA,cAAA/C,KAAAhB,KAAA,UAAAgB,KAAA3K,OAAA,eAAA2K,KAAAgB,IAAA,CACA3L,KAAA,kBACA2J,GAAA,cAAAgB,KAAAhB,IAAAA,GAAA,eAGA,GAAA3J,MAAA,OAAA,CACA,IAAA,UAAA2K,KAAAgB,IAAA,CACAhC,GAAA,UACAuD,YAAAtN,QAAA,gBAEA,GAAA,wBAAA+K,KAAAgB,IAAA,CACAuB,YAAAtN,QAAA,qBAIA,GAAAI,MAAA,cAAA,YAAA2K,KAAAgB,IAAA,CACAuB,YAAAvO,KAAA,mBAGA,GAAAqB,MAAA,aAAA8J,KAAA,wBAAAc,KAAAe,KAAA,CACAuB,YAAAvO,KAAA,0BAAAmL,KAAA,SAGA,GAAA9J,MAAA,YAAA8J,KAAA,0BAAAc,KAAAe,KAAA,CACAhC,KAAAA,GAAA,cACA+D,UAAAA,QAAA5D,KAAA,SAGA,IAAA9J,OAAA8J,MAAA,iBAAAa,KAAAgB,KAAA,yBAAAf,KAAA5K,OAAA,CAEA,GAAAA,OAAA0N,SAAA,kBAAA/C,KAAAgB,GAAAjJ,MAAAiJ,GAAA5D,QAAA+B,KAAA,KAAA,IAAA,CAEA9J,KAAA,KAGA,IAAA8J,KAAA4D,SAAAE,cAAAjE,MACA+D,SAAAE,cAAA,6CAAAjD,KAAAhB,KAAA,CACA3J,KAAA,mBAAA4K,KAAA,cAAAD,KAAAhB,IAAAA,GAAAG,MAAA,iBAIA,GAAA9J,MAAA,aAAA8J,MAAA,uBAAAc,KAAAe,KAAA,GAAA,IAAA,CACAuB,YAAAvO,KAAA,YAAAmL,MAGA,IAAAuD,QAAA,CACAA,QAAA2D,WAAA,CACA,iKACA,UACA1F,QAAAtL,MACA,mCAIA,GAAA8J,KACAyD,QAAA,QAAA4D,WAAA9D,SAAA,GAAA,UACA,YAAA1C,KAAA3K,QAAA,UAAA2K,KAAAgB,IAAA,QAAA,WACA,8BAAAhB,KAAAgB,MAAA,yBAAAhB,KAAA4C,SAAA,WACAA,QAAA,YAAA5C,KAAAgB,MAAAhC,IAAA,SAAA,SAAA,YACA4D,QAAA,UAAA,8BAAA5C,KAAA3K,OAAA,WACA,CACAuN,OAAA,CAAAzD,MAGA,GAAA9J,MAAA,OAAA8J,MAAA,4BAAAc,KAAAe,KAAA,GAAA,IAAA,CACA3L,MAAA,UACA2J,GAAA,kBAAA,MAAAgB,KAAAb,MAAAA,KAAAA,KAAA,MACAoD,YAAAtN,QAAA,qBAGA,GAAA,iBAAA+K,KAAAgB,IAAA,CACA3L,KAAA,YACA2J,GAAA,oBACAuD,YAAAtN,QAAA,gBACAyN,UAAAA,SAAA,gBAAAzC,KAAAe,KAAA,GAAA,SAGA,GAAA3L,MAAA,MAAAuN,QAAA,YAAAzD,KAAA,gBAAAc,KAAAe,KAAA,CACA,GAAA3L,KAAA,CACAkN,YAAAvO,KAAA,kBAAAqB,MAAAqN,QAAA,IAAAA,QAAA,KAEArN,KAAA,KACAqN,QAAAvD,KAAA,GAGA,GAAAsD,YAAA,CAGA,GAAAhC,WAAAlM,QAAA,UAAA,CACA,GAAAoN,KAAA,CACAxC,KAAAwC,KAAA8E,KAAAC,OACApE,KAAAnD,KAAAwH,YAAA,WACA3H,GAAAA,IAAAG,KAAAwH,YAAA,WAAA,IAAAxH,KAAAwH,YAAA,cAEA,GAAA9E,MAAA,CACA,IACAa,QAAAnO,QAAApE,QAAA,gBAAAuS,QAAAkE,KAAA,KACAvR,KAAA,UACA,MAAAzF,GACA,IAAAuP,KAAA5K,QAAAsS,SAAA1H,KAAAjB,OAAA2I,QAAAtS,QAAAsS,OAAA,CACAxR,KAAA,UACA2J,KAAAA,GAAAG,KAAA,GAAAH,IAAA,OAGA,IAAA3J,KAAA,CACAA,KAAA,cAGA,UACAd,QAAAuS,SAAA,WAAAvS,QAAAuS,QAAAC,UACA5H,KAAA5K,QAAAuS,SACA,CACA,UAAA3H,KAAA6H,UAAA,SAAA,CACA,UAAA7H,KAAA6H,SAAAC,UAAA,SAAA,CACA1E,YAAAvO,KAAA,QAAAmL,KAAA6H,SAAAE,MACA7R,KAAA,WACAqN,QAAAvD,KAAA6H,SAAAC,cACA,UAAA9H,KAAA6H,SAAAG,IAAA,SAAA,CACA5E,YAAAvO,KAAA,YAAA0O,QAAA,QAAAvD,KAAA6H,SAAAE,MACA7R,KAAA,QACAqN,QAAAvD,KAAA6H,SAAAG,IAGA,IAAA9R,KAAA,CACAA,KAAA,UACAiN,KAAAnD,KAAAmD,KACAtD,GAAAG,KAAAiI,SACA1E,QAAA,SAAAzC,KAAAd,KAAAuD,SACAA,QAAAA,QAAAA,QAAA,GAAA,YAKA,GAAAlC,WAAArB,KAAA5K,QAAA8S,UAAA7F,gBAAA,CACAnM,KAAA,YACA2J,GAAAG,KAAAmI,MAAAT,OAAAU,aAAAvI,QAGA,GAAAwB,WAAArB,KAAA5K,QAAAiT,UAAA5F,aAAA,CACAvM,KAAA,YACAqN,SAAAvD,KAAAA,KAAAuD,SAAA,OAAAvD,KAAAsI,MAAA,IAAAtI,KAAAuI,MAAA,IAAAvI,KAAAwI,WAGA,UAAA1F,IAAA2F,cAAA,WAAAzI,KAAA,oBAAAc,KAAAe,KAAA,CAGA0B,QAAA,CAAAA,QAAAT,IAAA2F,cACA,IAAAzI,MAAAA,KAAA,GAAA,IAAAuD,QAAA,GAAA,CACAH,YAAAvO,KAAA,MAAA0O,QAAA,GAAA,SACAE,SAAAA,OAAA,GAAA,IACAF,QAAA,GAAAvD,KAEAuD,QAAArN,MAAA,KAAAD,OAAAsN,QAAA,GAAAmF,QAAA,IAAAnF,QAAA,QAGA,UAAAT,IAAA2F,cAAA,UAAA,wBAAA5H,KAAA3K,MAAA,CACAkN,YAAAvO,KAAA,cAAAqB,KAAA,IAAAqN,SACArN,KAAA,KACAqN,QAAA,OACAE,OAAA,CAAA,WACA5D,GAAA,UAEAA,GAAAA,IAAAoB,OAAApB,IAGA,GAAA0D,UAAAvD,KACA,0CAAAc,KAAAyC,UACA,2BAAAzC,KAAAe,GAAA,KAAAyB,aAAAvB,IAAA4G,mBACA,iBAAA9H,KAAAgB,KAAA,KACA,CACAwB,WAAA,KAAAxC,KAAAb,MAAA,OAAA,QACAuD,QAAAA,QAAAxC,QAAAC,OAAAhB,KAAA,SAAA,KACAqD,YAAA,OAAAR,KAAAD,QAAA,SAAA9B,KAAAd,OAAA,IAGA,GAAA9J,MAAA,UAAAA,MAAA,WAAA,mCAAA2K,KAAAhB,IAAA,CACA3J,KAAA,sBAGA,GAAAA,MAAA,WAAAqN,QAAA,CACAA,QAAAA,QAAAxC,QAAA,WAAA,WAGA,GAAA,YAAAF,KAAA+C,SAAA,CACA,GAAAA,SAAA,WAAA,CACA/D,GAAA,KAEA,GAAA+D,SAAA,YAAA,eAAA/C,KAAAgB,IAAA,CACAuB,YAAAtN,QAAA,qBAIA,IAAA,wBAAA+K,KAAA3K,OAAAA,OAAA0N,UAAA,eAAA/C,KAAA3K,SACA2J,IAAA,cAAA,QAAAgB,KAAAgB,KAAA,CACA3L,MAAA,eAGA,GAAAA,MAAA,MAAAoN,YAAA,CACA,IACA,GAAAlO,QAAAwT,WAAA,KAAA,CACAxF,YAAAtN,QAAA,qBAEA,MAAArF,GACA2S,YAAAtN,QAAA,kBAKA,IAAA,iBAAA+K,KAAA+C,UAAA,WAAA/C,KAAAgB,OAAA7B,MACAgB,OAAA4C,QAAA7C,QAAA,MAAA,MAAA,aAAA,KAAAD,KAAAe,KAAA,GAAA,IACA0B,SACA,CACAvD,KAAA,CAAAA,KAAA,OAAAa,KAAAgB,KACAhC,IAAAG,KAAA,IAAA4D,QAAA,KAAAE,aAAA,cAAA,mBAAA,IAAA9D,KAAA,GACAuD,QAAA,UAIA,GAAAnQ,MAAAgO,QAAAwC,SAAA,QACAN,aAAAN,OACA,QAAAnC,KAAA3K,OAAA,wBAAA2K,KAAAgB,KACA3L,MAAA,WAAA,uBAAA2K,KAAAhB,KACA3J,MAAA,OACA2J,KAAA,OAAAgB,KAAAhB,KAAA0D,QAAA,KACA,iBAAA1C,KAAAhB,KAAA0D,QAAA,GACAA,SAAA,IAAA,cAAA1C,KAAAgB,QAEA1C,QAAA0B,KAAAb,KAAA4B,MAAArQ,KAAA6P,OAAAS,GAAAd,QAAA5B,QAAA,IAAA,OAAAa,KAAA9J,KAAA,CAEA8J,KAAA,UAAAA,KAAA9J,OAAA8J,KAAAA,KAAAuD,SAAA,IAAAvD,KAAA,IACA,GAAAb,QAAA0B,KAAA3K,MAAA,CACA,GAAA,SAAA2K,KAAAb,OAAAH,IAAA,SAAA,CACAA,GAAA,KAEAG,KAAA,WAAAA,SAGA,CACAA,KAAA,OAAAA,KACA,GAAAkD,WAAA,CACAhN,KAAA+K,OAAAiC,WAAAnC,QAAA,kBAAA,cACA,CACA7K,KAAA,QAEA,GAAA,SAAA2K,KAAAb,MAAA,CACAH,GAAA,KAEA,IAAAyD,YAAA,CACAC,QAAA,MAGAE,OAAA,CAAA,UACAL,YAAAvO,KAAAmL,MAGA,GAAAA,MAAA,8BAAAc,KAAAe,KAAA,GAAA,GAAA,CAGA7B,KAAA,CAAAqH,WAAArH,KAAAe,QAAA,UAAA,SAAAf,MAEA,GAAA9J,MAAA,UAAA8J,KAAA,GAAApH,OAAA,IAAA,IAAA,CACA1C,KAAA,iBACAmN,WAAA,QACAE,QAAAvD,KAAA,GAAApH,MAAA,GAAA,QAGA,GAAA2K,SAAAvD,KAAA,IACAuD,UAAAvD,KAAA,IAAA,yBAAAc,KAAAe,KAAA,GAAA,IAAA,CACA0B,QAAA,KAGAvD,KAAA,IAAA,mCAAAc,KAAAe,KAAA,GAAA,GAEA,GAAA7B,KAAA,IAAA,QAAAA,KAAA,IAAA,QAAAqH,WAAArH,KAAA,KAAA,IAAAyD,QAAA,SAAA,CACAA,OAAA,CAAA,SAIA,IAAAH,cAAAnB,aAAAnC,KAAA,GAAA,CACAyD,SAAAA,OAAA,GAAA,eACAzD,MAAAA,KAAAA,KAAA,GAAAA,KAAA,IAAA,EAAAA,KAAA,IAAA,EAAAA,KAAA,IAAA,EAAAA,KAAA,IAAA,EAAAA,KAAA,IAAA,KAAAA,KAAA,IAAA,EAAAA,KAAA,IAAA,EAAAA,KAAA,IAAA,EAAAA,KAAA,IAAA,EAAAA,KAAA,IAAA,EAAAA,KAAA,IAAA,GAAAA,KAAA,IAAA,GAAAA,KAAA,IAAA,GAAA,UACA,CACAyD,SAAAA,OAAA,GAAA,eACAzD,KAAAA,KAAA,KAAAA,KAAAA,KAAA,GAAAA,KAAA,IAAA,EAAAA,KAAA,IAAA,EAAAA,KAAA,OAAA,EAAAA,KAAA,IAAA,EAAAA,KAAA,OAAA,EAAAA,KAAA,OAAA,EAAAA,KAAA,MAAA,EAAAA,KAAA,OAAA,EAAAA,KAAA,OAAA,EAAAA,KAAA,OAAA,GAAAA,KAAA,MAAA,GAAAA,KAAA,OAAA,GAAAA,KAAA,OAAA,MAAAA,KAAA,OAAA,GAAAA,KAAA,OAAA,GAAAA,KAAA,OAAA,GAAAA,KAAA,OAAA,GAAAA,KAAA,MAAA,GAAAA,KAAA,OAAA,GAAAA,KAAA,OAAA,MAAAA,KAAA,OAAA,GAAAA,KAAA,OAAA,GAAAA,KAAA,OAAA,GAAAA,KAAA,OAAA,GAAAyD,QAAA,QAAA,KAAA,MAGAA,SAAAA,OAAA,IAAA,KAAAzD,aAAAA,MAAA,SAAA,KAAA,OAAAa,KAAAb,MAAA,GAAA,MAEA,GAAA9J,MAAA,YAAAqN,SAAAsF,SAAAtF,SAAA,IAAA,CACAA,QAAAvD,UACA,GAAA9J,MAAA,UAAA,oBAAA2K,KAAAgB,IAAA,CACAuB,YAAAtN,QAAA,aAIA,GAAAI,MAAA,UAAA8J,KAAA,eAAAc,KAAAjB,KAAA,CACA3J,MAAA,IACAkN,YAAAtN,QAAA,gBACA,GAAAkK,MAAA,OAAA,CACA9J,MAAA,OACAqN,QAAA,SACA,CACArN,MAAA,SAEA2J,GAAAA,GAAAkB,QAAAC,OAAA,KAAAhB,KAAA,KAAA,SAGA,GAAA9J,MAAA,UAAA,aAAA4K,KAAA2C,QAAAA,OAAA,IAAA,CACAL,YAAAtN,QAAA,gBACAI,KAAA,gBACAqN,QAAA,KAEA,GAAA,WAAA1C,KAAAhB,IAAA,CACAiE,aAAA,QACAjE,GAAA,eACA,CACAA,GAAA,WAIA,GAAA,kBAAAgB,KAAA3K,QAAAqN,QAAA,CACAA,QAAA2D,WAAA,UAGA,GAAA3D,SAAAA,QAAAtF,QAAA+B,KAAA,UAAAc,KAAAjB,MAAA,GACAgC,GAAA5D,QAAA,IAAA+B,KAAA,MAAA,EAAA,CACAH,GAAA7B,KAAA6B,GAAAkB,QAAAf,KAAA,KAGA,GAAAH,IAAAA,GAAA5B,QAAA/H,QAAA,IAAA8K,OAAA9K,KAAA,OAAA2K,KAAAhB,IAAA,CACAA,GAAAA,GAAAkB,QAAAC,OAAA,KAAAQ,QAAAtL,MAAA,MAAA,IAGA,GAAAuN,SAAA,qBAAA5C,KAAA3K,QACA,4BAAA2K,KAAA3K,OACAA,MAAA,UAAA,OAAA2K,KAAAhB,KAAA,aAAAgB,KAAA4C,OAAA,KACA,6GAAA5C,KAAA3K,OAAAuN,OAAA,IAAA,EAEAzD,KAAAyD,OAAAA,OAAAjS,OAAA,KAAA4R,YAAAvO,KAAAmL,MAGA,GAAAoD,YAAA5R,OAAA,CACA4R,YAAA,CAAA,IAAAA,YAAAqE,KAAA,MAAA,KAGA,GAAA3D,cAAAF,SAAAA,QAAA3F,QAAA6F,cAAA,EAAA,CACAV,YAAAvO,KAAA,MAAAiP,cAGA,GAAAF,QAAA,CACAR,YAAAvO,MAAA,OAAAgM,KAAAuC,YAAAA,YAAA5R,OAAA,IAAA,GAAA,OAAAoS,SAGA,GAAA/D,GAAA,CACAG,KAAA,cAAAc,KAAAjB,IACA2D,iBAAAxD,MAAAH,GAAAH,OAAAG,GAAArO,OAAAwO,KAAA,GAAAxO,OAAA,IAAA,IACAqO,GAAA,CACAiJ,aAAA,GACAC,OAAA/I,OAAAwD,iBAAA3D,GAAAkB,QAAAf,KAAA,GAAA,IAAAH,GACA0D,QAAAvD,KAAAA,KAAA,GAAA,KACAT,SAAA,WACA,IAAAgE,QAAAnQ,KAAAmQ,QACA,OAAAnQ,KAAA2V,QAAAxF,UAAAC,iBAAA,IAAAD,QAAA,KAAAnQ,KAAA0V,cAAA,GAAA,UAAA,MAKA,IAAA9I,KAAA,mCAAAc,KAAAqC,SAAA,YAAAtC,KAAAsC,MAAA,CACA,GAAAtD,GAAA,CACAA,GAAAiJ,aAAA,GACAjJ,GAAAkJ,OAAAlJ,GAAAkJ,OAAAhI,QAAAC,OAAA,KAAAhB,MAAA,IAEA,GACA9J,OAAA,aAAA2K,KAAAgB,KACAyB,aAAA,eAAAzC,KAAAkB,IAAAiH,UAAAjH,IAAAkG,YAAA,kBAAApH,KAAAgB,KACA,CACAuB,YAAAtN,QAAA,gBAIA,GACA+J,IAAA,QAAAgB,KAAAhB,GAAAkJ,SACA7S,MAAA,UAAAmR,WAAA9D,UAAA,GACA,CACA1D,GAAAiJ,aAAA,GAGAjH,KAAAA,GAAA,MAUA,IAAAoG,SAAA,GAQAA,SAAA7E,YAAAvB,GAWAoG,SAAAxE,OAAAA,QAAAA,OAAA,GAaAwE,SAAAnE,aAAAA,aAgBAmE,SAAA/R,KAAAA,KAQA+R,SAAA5E,WAAAA,WAaA4E,SAAArE,QAAAA,QAQAqE,SAAApG,GAAAA,GAQAoG,SAAA1E,QAAArN,MAAAqN,QAQA0E,SAAApI,GAAAA,IAAA,CAQAiJ,aAAA,KAaAC,OAAA,KAQAxF,QAAA,KAQAhE,SAAA,WAAA,MAAA,SAGA0I,SAAArG,MAAAA,MACAqG,SAAA1I,SAAA6H,iBAEA,GAAAa,SAAA1E,QAAA,CACAH,YAAAtN,QAAAyN,SAEA,GAAA0E,SAAA/R,KAAA,CACAkN,YAAAtN,QAAAI,MAEA,GAAA2J,IAAA3J,QAAA2J,IAAA5J,OAAA4J,IAAA3B,MAAA,KAAA,KAAA2B,IAAA3J,KAAAgI,MAAA,KAAA,IAAA0F,UAAA,CACAR,YAAAvO,KAAA+O,QAAA,IAAA/D,GAAA,IAAA,MAAAA,IAEA,GAAAuD,YAAA5R,OAAA,CACAyW,SAAA7E,YAAAA,YAAAqE,KAAA,KAEA,OAAAQ,SAMA,IAAAA,SAAArG,QAGA,UAAAqH,QAAA,mBAAAA,OAAAC,KAAA,UAAAD,OAAAC,IAAA,CAIAzK,KAAAwJ,SAAAA,SAGAgB,QAAA,WACA,OAAAhB,iBAIA,GAAAtJ,aAAAC,WAAA,CAEAwC,OAAA6G,UAAA,SAAAhV,MAAAwE,KACAkH,YAAAlH,KAAAxE,aAGA,CAEAwL,KAAAwJ,SAAAA,YAEA1W,KAAA6B,iLC3uCA,aAEAd,OAAAwB,eAAAxC,QAAA,aAAA,CACA2B,MAAA,OAEAX,OAAAwB,eAAAxC,QAAA,KAAA,CACAyC,WAAA,KACAC,IAAA,WACA,OAAAmV,GAAAC,WAGA9W,OAAAwB,eAAAxC,QAAA,KAAA,CACAyC,WAAA,KACAC,IAAA,WACA,OAAAqV,IAAAD,WAGA9W,OAAAwB,eAAAxC,QAAA,KAAA,CACAyC,WAAA,KACAC,IAAA,WACA,OAAAsV,IAAAF,WAGA9W,OAAAwB,eAAAxC,QAAA,KAAA,CACAyC,WAAA,KACAC,IAAA,WACA,OAAAuV,IAAAH,WAGA9W,OAAAwB,eAAAxC,QAAA,MAAA,CACAyC,WAAA,KACAC,IAAA,WACA,OAAAwV,KAAAJ,WAGA9W,OAAAwB,eAAAxC,QAAA,UAAA,CACAyC,WAAA,KACAC,IAAA,WACA,OAAAyV,SAAAL,WAGA9W,OAAAwB,eAAAxC,QAAA,WAAA,CACAyC,WAAA,KACAC,IAAA,WACA,OAAA0V,UAAAN,WAGA9W,OAAAwB,eAAAxC,QAAA,YAAA,CACAyC,WAAA,KACAC,IAAA,WACA,OAAA2V,WAAAP,WAGA9W,OAAAwB,eAAAxC,QAAA,QAAA,CACAyC,WAAA,KACAC,IAAA,WACA,OAAA4V,OAAAR,WAIA,IAAAD,GAAAU,uBAAA7Y,QAAA,YAEA,IAAAqY,IAAAQ,uBAAA7Y,QAAA,YAEA,IAAAsY,IAAAO,uBAAA7Y,QAAA,YAEA,IAAAuY,IAAAM,uBAAA7Y,QAAA,YAEA,IAAAwY,KAAAK,uBAAA7Y,QAAA,aAEA,IAAAyY,SAAAI,uBAAA7Y,QAAA,iBAEA,IAAA0Y,UAAAG,uBAAA7Y,QAAA,kBAEA,IAAA2Y,WAAAE,uBAAA7Y,QAAA,mBAEA,IAAA4Y,OAAAC,uBAAA7Y,QAAA,eAEA,SAAA6Y,uBAAAC,KAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAA,CAAAV,QAAAU,0LC9EA,aAEAxX,OAAAwB,eAAAxC,QAAA,aAAA,CACA2B,MAAA,OAEA3B,QAAA8X,aAAA,EAsBA,SAAAY,IAAAC,OACA,UAAAA,QAAA,SAAA,CACA,MAAAC,IAAAC,SAAAC,mBAAAH,QAEAA,MAAA,IAAAI,WAAAH,IAAA1Y,QAEA,IAAA,IAAAX,EAAA,EAAAA,EAAAqZ,IAAA1Y,SAAAX,EAAA,CACAoZ,MAAApZ,GAAAqZ,IAAAI,WAAAzZ,IAIA,OAAA0Z,qBAAAC,WAAAC,aAAAR,OAAAA,MAAAzY,OAAA,IAOA,SAAA+Y,qBAAAzQ,OACA,MAAAiE,OAAA,GACA,MAAA2M,SAAA5Q,MAAAtI,OAAA,GACA,MAAAmZ,OAAA,mBAEA,IAAA,IAAA9Z,EAAA,EAAAA,EAAA6Z,SAAA7Z,GAAA,EAAA,CACA,MAAA+Z,EAAA9Q,MAAAjJ,GAAA,KAAAA,EAAA,GAAA,IACA,MAAAga,IAAAhC,SAAA8B,OAAAjL,OAAAkL,IAAA,EAAA,IAAAD,OAAAjL,OAAAkL,EAAA,IAAA,IACA7M,OAAAlJ,KAAAgW,KAGA,OAAA9M,OAOA,SAAA+M,gBAAAC,cACA,OAAAA,aAAA,KAAA,GAAA,GAAA,GAAA,EAOA,SAAAP,WAAAI,EAAAtV,KAEAsV,EAAAtV,KAAA,IAAA,KAAAA,IAAA,GACAsV,EAAAE,gBAAAxV,KAAA,GAAAA,IACA,IAAApE,EAAA,WACA,IAAA8Z,GAAA,UACA,IAAAja,GAAA,WACA,IAAAka,EAAA,UAEA,IAAA,IAAApa,EAAA,EAAAA,EAAA+Z,EAAApZ,OAAAX,GAAA,GAAA,CACA,MAAAqa,KAAAha,EACA,MAAAia,KAAAH,EACA,MAAAI,KAAAra,EACA,MAAAsa,KAAAJ,EACA/Z,EAAAoa,MAAApa,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAA/Z,GAAA,GAAA,WACAoa,EAAAK,MAAAL,EAAA/Z,EAAA8Z,EAAAja,EAAA6Z,EAAA/Z,EAAA,GAAA,IAAA,WACAE,EAAAua,MAAAva,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAA/Z,EAAA,GAAA,GAAA,WACAma,EAAAM,MAAAN,EAAAja,EAAAka,EAAA/Z,EAAA0Z,EAAA/Z,EAAA,GAAA,IAAA,YACAK,EAAAoa,MAAApa,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAA/Z,EAAA,GAAA,GAAA,WACAoa,EAAAK,MAAAL,EAAA/Z,EAAA8Z,EAAAja,EAAA6Z,EAAA/Z,EAAA,GAAA,GAAA,YACAE,EAAAua,MAAAva,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAA/Z,EAAA,GAAA,IAAA,YACAma,EAAAM,MAAAN,EAAAja,EAAAka,EAAA/Z,EAAA0Z,EAAA/Z,EAAA,GAAA,IAAA,UACAK,EAAAoa,MAAApa,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAA/Z,EAAA,GAAA,EAAA,YACAoa,EAAAK,MAAAL,EAAA/Z,EAAA8Z,EAAAja,EAAA6Z,EAAA/Z,EAAA,GAAA,IAAA,YACAE,EAAAua,MAAAva,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAA/Z,EAAA,IAAA,IAAA,OACAma,EAAAM,MAAAN,EAAAja,EAAAka,EAAA/Z,EAAA0Z,EAAA/Z,EAAA,IAAA,IAAA,YACAK,EAAAoa,MAAApa,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAA/Z,EAAA,IAAA,EAAA,YACAoa,EAAAK,MAAAL,EAAA/Z,EAAA8Z,EAAAja,EAAA6Z,EAAA/Z,EAAA,IAAA,IAAA,UACAE,EAAAua,MAAAva,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAA/Z,EAAA,IAAA,IAAA,YACAma,EAAAM,MAAAN,EAAAja,EAAAka,EAAA/Z,EAAA0Z,EAAA/Z,EAAA,IAAA,GAAA,YACAK,EAAAqa,MAAAra,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAA/Z,EAAA,GAAA,GAAA,WACAoa,EAAAM,MAAAN,EAAA/Z,EAAA8Z,EAAAja,EAAA6Z,EAAA/Z,EAAA,GAAA,GAAA,YACAE,EAAAwa,MAAAxa,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAA/Z,EAAA,IAAA,GAAA,WACAma,EAAAO,MAAAP,EAAAja,EAAAka,EAAA/Z,EAAA0Z,EAAA/Z,GAAA,IAAA,WACAK,EAAAqa,MAAAra,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAA/Z,EAAA,GAAA,GAAA,WACAoa,EAAAM,MAAAN,EAAA/Z,EAAA8Z,EAAAja,EAAA6Z,EAAA/Z,EAAA,IAAA,EAAA,UACAE,EAAAwa,MAAAxa,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAA/Z,EAAA,IAAA,IAAA,WACAma,EAAAO,MAAAP,EAAAja,EAAAka,EAAA/Z,EAAA0Z,EAAA/Z,EAAA,GAAA,IAAA,WACAK,EAAAqa,MAAAra,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAA/Z,EAAA,GAAA,EAAA,WACAoa,EAAAM,MAAAN,EAAA/Z,EAAA8Z,EAAAja,EAAA6Z,EAAA/Z,EAAA,IAAA,GAAA,YACAE,EAAAwa,MAAAxa,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAA/Z,EAAA,GAAA,IAAA,WACAma,EAAAO,MAAAP,EAAAja,EAAAka,EAAA/Z,EAAA0Z,EAAA/Z,EAAA,GAAA,GAAA,YACAK,EAAAqa,MAAAra,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAA/Z,EAAA,IAAA,GAAA,YACAoa,EAAAM,MAAAN,EAAA/Z,EAAA8Z,EAAAja,EAAA6Z,EAAA/Z,EAAA,GAAA,GAAA,UACAE,EAAAwa,MAAAxa,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAA/Z,EAAA,GAAA,GAAA,YACAma,EAAAO,MAAAP,EAAAja,EAAAka,EAAA/Z,EAAA0Z,EAAA/Z,EAAA,IAAA,IAAA,YACAK,EAAAsa,MAAAta,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAA/Z,EAAA,GAAA,GAAA,QACAoa,EAAAO,MAAAP,EAAA/Z,EAAA8Z,EAAAja,EAAA6Z,EAAA/Z,EAAA,GAAA,IAAA,YACAE,EAAAya,MAAAza,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAA/Z,EAAA,IAAA,GAAA,YACAma,EAAAQ,MAAAR,EAAAja,EAAAka,EAAA/Z,EAAA0Z,EAAA/Z,EAAA,IAAA,IAAA,UACAK,EAAAsa,MAAAta,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAA/Z,EAAA,GAAA,GAAA,YACAoa,EAAAO,MAAAP,EAAA/Z,EAAA8Z,EAAAja,EAAA6Z,EAAA/Z,EAAA,GAAA,GAAA,YACAE,EAAAya,MAAAza,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAA/Z,EAAA,GAAA,IAAA,WACAma,EAAAQ,MAAAR,EAAAja,EAAAka,EAAA/Z,EAAA0Z,EAAA/Z,EAAA,IAAA,IAAA,YACAK,EAAAsa,MAAAta,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAA/Z,EAAA,IAAA,EAAA,WACAoa,EAAAO,MAAAP,EAAA/Z,EAAA8Z,EAAAja,EAAA6Z,EAAA/Z,GAAA,IAAA,WACAE,EAAAya,MAAAza,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAA/Z,EAAA,GAAA,IAAA,WACAma,EAAAQ,MAAAR,EAAAja,EAAAka,EAAA/Z,EAAA0Z,EAAA/Z,EAAA,GAAA,GAAA,UACAK,EAAAsa,MAAAta,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAA/Z,EAAA,GAAA,GAAA,WACAoa,EAAAO,MAAAP,EAAA/Z,EAAA8Z,EAAAja,EAAA6Z,EAAA/Z,EAAA,IAAA,IAAA,WACAE,EAAAya,MAAAza,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAA/Z,EAAA,IAAA,GAAA,WACAma,EAAAQ,MAAAR,EAAAja,EAAAka,EAAA/Z,EAAA0Z,EAAA/Z,EAAA,GAAA,IAAA,WACAK,EAAAua,MAAAva,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAA/Z,GAAA,GAAA,WACAoa,EAAAQ,MAAAR,EAAA/Z,EAAA8Z,EAAAja,EAAA6Z,EAAA/Z,EAAA,GAAA,GAAA,YACAE,EAAA0a,MAAA1a,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAA/Z,EAAA,IAAA,IAAA,YACAma,EAAAS,MAAAT,EAAAja,EAAAka,EAAA/Z,EAAA0Z,EAAA/Z,EAAA,GAAA,IAAA,UACAK,EAAAua,MAAAva,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAA/Z,EAAA,IAAA,EAAA,YACAoa,EAAAQ,MAAAR,EAAA/Z,EAAA8Z,EAAAja,EAAA6Z,EAAA/Z,EAAA,GAAA,IAAA,YACAE,EAAA0a,MAAA1a,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAA/Z,EAAA,IAAA,IAAA,SACAma,EAAAS,MAAAT,EAAAja,EAAAka,EAAA/Z,EAAA0Z,EAAA/Z,EAAA,GAAA,IAAA,YACAK,EAAAua,MAAAva,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAA/Z,EAAA,GAAA,EAAA,YACAoa,EAAAQ,MAAAR,EAAA/Z,EAAA8Z,EAAAja,EAAA6Z,EAAA/Z,EAAA,IAAA,IAAA,UACAE,EAAA0a,MAAA1a,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAA/Z,EAAA,GAAA,IAAA,YACAma,EAAAS,MAAAT,EAAAja,EAAAka,EAAA/Z,EAAA0Z,EAAA/Z,EAAA,IAAA,GAAA,YACAK,EAAAua,MAAAva,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAA/Z,EAAA,GAAA,GAAA,WACAoa,EAAAQ,MAAAR,EAAA/Z,EAAA8Z,EAAAja,EAAA6Z,EAAA/Z,EAAA,IAAA,IAAA,YACAE,EAAA0a,MAAA1a,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAA/Z,EAAA,GAAA,GAAA,WACAma,EAAAS,MAAAT,EAAAja,EAAAka,EAAA/Z,EAAA0Z,EAAA/Z,EAAA,GAAA,IAAA,WACAK,EAAAwa,QAAAxa,EAAAga,MACAF,EAAAU,QAAAV,EAAAG,MACApa,EAAA2a,QAAA3a,EAAAqa,MACAH,EAAAS,QAAAT,EAAAI,MAGA,MAAA,CAAAna,EAAA8Z,EAAAja,EAAAka,GAQA,SAAAR,aAAA3Q,OACA,GAAAA,MAAAtI,SAAA,EAAA,CACA,MAAA,GAGA,MAAAma,QAAA7R,MAAAtI,OAAA,EACA,MAAAuM,OAAA,IAAA6N,YAAAd,gBAAAa,UAEA,IAAA,IAAA9a,EAAA,EAAAA,EAAA8a,QAAA9a,GAAA,EAAA,CACAkN,OAAAlN,GAAA,KAAAiJ,MAAAjJ,EAAA,GAAA,MAAAA,EAAA,GAGA,OAAAkN,OAQA,SAAA2N,QAAAd,EAAAiB,GACA,MAAAC,KAAAlB,EAAA,QAAAiB,EAAA,OACA,MAAAE,KAAAnB,GAAA,KAAAiB,GAAA,KAAAC,KAAA,IACA,OAAAC,KAAA,GAAAD,IAAA,MAOA,SAAAE,cAAAC,IAAAC,KACA,OAAAD,KAAAC,IAAAD,MAAA,GAAAC,IAOA,SAAAC,OAAAC,EAAAlb,EAAA8Z,EAAAJ,EAAAyB,EAAA1b,GACA,OAAA+a,QAAAM,cAAAN,QAAAA,QAAAxa,EAAAkb,GAAAV,QAAAd,EAAAja,IAAA0b,GAAArB,GAGA,SAAAM,MAAApa,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAAyB,EAAA1b,GACA,OAAAwb,OAAAnB,EAAAja,GAAAia,EAAAC,EAAA/Z,EAAA8Z,EAAAJ,EAAAyB,EAAA1b,GAGA,SAAA4a,MAAAra,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAAyB,EAAA1b,GACA,OAAAwb,OAAAnB,EAAAC,EAAAla,GAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAAyB,EAAA1b,GAGA,SAAA6a,MAAAta,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAAyB,EAAA1b,GACA,OAAAwb,OAAAnB,EAAAja,EAAAka,EAAA/Z,EAAA8Z,EAAAJ,EAAAyB,EAAA1b,GAGA,SAAA8a,MAAAva,EAAA8Z,EAAAja,EAAAka,EAAAL,EAAAyB,EAAA1b,GACA,OAAAwb,OAAApb,GAAAia,GAAAC,GAAA/Z,EAAA8Z,EAAAJ,EAAAyB,EAAA1b,GAGA,IAAA2b,SAAAtC,IACA1Y,QAAA8X,QAAAkD,mDC9NA,aAEAha,OAAAwB,eAAAxC,QAAA,aAAA,CACA2B,MAAA,OAEA3B,QAAA8X,aAAA,EACA,IAAAkD,SAAA,uCACAhb,QAAA8X,QAAAkD,mDCPA,aAEAha,OAAAwB,eAAAxC,QAAA,aAAA,CACA2B,MAAA,OAEA3B,QAAA8X,aAAA,EAEA,IAAAM,UAAAG,uBAAA7Y,QAAA,kBAEA,SAAA6Y,uBAAAC,KAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAA,CAAAV,QAAAU,KAEA,SAAAlI,MAAA2K,MACA,KAAA,EAAA7C,UAAAN,SAAAmD,MAAA,CACA,MAAA1Y,UAAA,gBAGA,IAAA2Y,EACA,MAAAvU,IAAA,IAAAoS,WAAA,IAEApS,IAAA,IAAAuU,EAAA3D,SAAA0D,KAAA3T,MAAA,EAAA,GAAA,OAAA,GACAX,IAAA,GAAAuU,IAAA,GAAA,IACAvU,IAAA,GAAAuU,IAAA,EAAA,IACAvU,IAAA,GAAAuU,EAAA,IAEAvU,IAAA,IAAAuU,EAAA3D,SAAA0D,KAAA3T,MAAA,EAAA,IAAA,OAAA,EACAX,IAAA,GAAAuU,EAAA,IAEAvU,IAAA,IAAAuU,EAAA3D,SAAA0D,KAAA3T,MAAA,GAAA,IAAA,OAAA,EACAX,IAAA,GAAAuU,EAAA,IAEAvU,IAAA,IAAAuU,EAAA3D,SAAA0D,KAAA3T,MAAA,GAAA,IAAA,OAAA,EACAX,IAAA,GAAAuU,EAAA,IAGAvU,IAAA,KAAAuU,EAAA3D,SAAA0D,KAAA3T,MAAA,GAAA,IAAA,KAAA,cAAA,IACAX,IAAA,IAAAuU,EAAA,WAAA,IACAvU,IAAA,IAAAuU,IAAA,GAAA,IACAvU,IAAA,IAAAuU,IAAA,GAAA,IACAvU,IAAA,IAAAuU,IAAA,EAAA,IACAvU,IAAA,IAAAuU,EAAA,IACA,OAAAvU,IAGA,IAAAqU,SAAA1K,MACAtQ,QAAA8X,QAAAkD,qEC5CA,aAEAha,OAAAwB,eAAAxC,QAAA,aAAA,CACA2B,MAAA,OAEA3B,QAAA8X,aAAA,EACA,IAAAkD,SAAA,sHACAhb,QAAA8X,QAAAkD,mDCPA,aAEAha,OAAAwB,eAAAxC,QAAA,aAAA,CACA2B,MAAA,OAEA3B,QAAA8X,QAAAqD,IAMA,MAAAC,uBAAAC,SAAA,aAAAA,OAAAD,iBAAAC,OAAAD,gBAAA3V,KAAA4V,gBAAAC,WAAA,oBAAAA,SAAAF,kBAAA,YAAAE,SAAAF,gBAAA3V,KAAA6V,UACA,MAAAC,MAAA,IAAAxC,WAAA,IAEA,SAAAoC,MACA,IAAAC,gBAAA,CACA,MAAA,IAAAvb,MAAA,4GAGA,OAAAub,gBAAAG,kDCnBA,aAEAva,OAAAwB,eAAAxC,QAAA,aAAA,CACA2B,MAAA,OAEA3B,QAAA8X,aAAA,EAIA,SAAAtY,EAAAub,EAAAzB,EAAAiB,EAAAiB,GACA,OAAAT,GACA,KAAA,EACA,OAAAzB,EAAAiB,GAAAjB,EAAAkC,EAEA,KAAA,EACA,OAAAlC,EAAAiB,EAAAiB,EAEA,KAAA,EACA,OAAAlC,EAAAiB,EAAAjB,EAAAkC,EAAAjB,EAAAiB,EAEA,KAAA,EACA,OAAAlC,EAAAiB,EAAAiB,GAIA,SAAAC,KAAAnC,EAAAla,GACA,OAAAka,GAAAla,EAAAka,IAAA,GAAAla,EAGA,SAAAsc,KAAA/C,OACA,MAAAgD,EAAA,CAAA,WAAA,WAAA,WAAA,YACA,MAAAC,EAAA,CAAA,WAAA,WAAA,WAAA,UAAA,YAEA,UAAAjD,QAAA,SAAA,CACA,MAAAC,IAAAC,SAAAC,mBAAAH,QAEAA,MAAA,GAEA,IAAA,IAAApZ,EAAA,EAAAA,EAAAqZ,IAAA1Y,SAAAX,EAAA,CACAoZ,MAAApV,KAAAqV,IAAAI,WAAAzZ,UAEA,IAAAsH,MAAAgV,QAAAlD,OAAA,CAEAA,MAAA9R,MAAAhG,UAAAyG,MAAArH,KAAA0Y,OAGAA,MAAApV,KAAA,KACA,MAAAuY,EAAAnD,MAAAzY,OAAA,EAAA,EACA,MAAA6b,EAAArT,KAAAsT,KAAAF,EAAA,IACA,MAAAG,EAAA,IAAApV,MAAAkV,GAEA,IAAA,IAAAxc,EAAA,EAAAA,EAAAwc,IAAAxc,EAAA,CACA,MAAAoH,IAAA,IAAA2T,YAAA,IAEA,IAAA,IAAA4B,EAAA,EAAAA,EAAA,KAAAA,EAAA,CACAvV,IAAAuV,GAAAvD,MAAApZ,EAAA,GAAA2c,EAAA,IAAA,GAAAvD,MAAApZ,EAAA,GAAA2c,EAAA,EAAA,IAAA,GAAAvD,MAAApZ,EAAA,GAAA2c,EAAA,EAAA,IAAA,EAAAvD,MAAApZ,EAAA,GAAA2c,EAAA,EAAA,GAGAD,EAAA1c,GAAAoH,IAGAsV,EAAAF,EAAA,GAAA,KAAApD,MAAAzY,OAAA,GAAA,EAAAwI,KAAAkF,IAAA,EAAA,IACAqO,EAAAF,EAAA,GAAA,IAAArT,KAAAyT,MAAAF,EAAAF,EAAA,GAAA,KACAE,EAAAF,EAAA,GAAA,KAAApD,MAAAzY,OAAA,GAAA,EAAA,WAEA,IAAA,IAAAX,EAAA,EAAAA,EAAAwc,IAAAxc,EAAA,CACA,MAAA6c,EAAA,IAAA9B,YAAA,IAEA,IAAA,IAAAjb,EAAA,EAAAA,EAAA,KAAAA,EAAA,CACA+c,EAAA/c,GAAA4c,EAAA1c,GAAAF,GAGA,IAAA,IAAAA,EAAA,GAAAA,EAAA,KAAAA,EAAA,CACA+c,EAAA/c,GAAAoc,KAAAW,EAAA/c,EAAA,GAAA+c,EAAA/c,EAAA,GAAA+c,EAAA/c,EAAA,IAAA+c,EAAA/c,EAAA,IAAA,GAGA,IAAAO,EAAAgc,EAAA,GACA,IAAAlC,EAAAkC,EAAA,GACA,IAAAnc,EAAAmc,EAAA,GACA,IAAAjC,EAAAiC,EAAA,GACA,IAAAzc,EAAAyc,EAAA,GAEA,IAAA,IAAAvc,EAAA,EAAAA,EAAA,KAAAA,EAAA,CACA,MAAA0b,EAAArS,KAAAyT,MAAA9c,EAAA,IACA,MAAAgd,EAAAZ,KAAA7b,EAAA,GAAAJ,EAAAub,EAAArB,EAAAja,EAAAka,GAAAxa,EAAAwc,EAAAZ,GAAAqB,EAAA/c,KAAA,EACAF,EAAAwa,EACAA,EAAAla,EACAA,EAAAgc,KAAA/B,EAAA,MAAA,EACAA,EAAA9Z,EACAA,EAAAyc,EAGAT,EAAA,GAAAA,EAAA,GAAAhc,IAAA,EACAgc,EAAA,GAAAA,EAAA,GAAAlC,IAAA,EACAkC,EAAA,GAAAA,EAAA,GAAAnc,IAAA,EACAmc,EAAA,GAAAA,EAAA,GAAAjC,IAAA,EACAiC,EAAA,GAAAA,EAAA,GAAAzc,IAAA,EAGA,MAAA,CAAAyc,EAAA,IAAA,GAAA,IAAAA,EAAA,IAAA,GAAA,IAAAA,EAAA,IAAA,EAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA,GAAA,IAAAA,EAAA,IAAA,GAAA,IAAAA,EAAA,IAAA,EAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA,GAAA,IAAAA,EAAA,IAAA,GAAA,IAAAA,EAAA,IAAA,EAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA,GAAA,IAAAA,EAAA,IAAA,GAAA,IAAAA,EAAA,IAAA,EAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA,GAAA,IAAAA,EAAA,IAAA,GAAA,IAAAA,EAAA,IAAA,EAAA,IAAAA,EAAA,GAAA,KAGA,IAAAZ,SAAAU,KACA1b,QAAA8X,QAAAkD,mDCvGA,aAEAha,OAAAwB,eAAAxC,QAAA,aAAA,CACA2B,MAAA,OAEA3B,QAAA8X,aAAA,EAEA,IAAAM,UAAAG,uBAAA7Y,QAAA,kBAEA,SAAA6Y,uBAAAC,KAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAA,CAAAV,QAAAU,KAMA,MAAA8D,UAAA,GAEA,IAAA,IAAA/c,EAAA,EAAAA,EAAA,MAAAA,EAAA,CACA+c,UAAA/Y,MAAAhE,EAAA,KAAA0O,SAAA,IAAAsO,OAAA,IAGA,SAAAC,UAAA7V,IAAA8V,OAAA,GAGA,MAAAxB,MAAAqB,UAAA3V,IAAA8V,OAAA,IAAAH,UAAA3V,IAAA8V,OAAA,IAAAH,UAAA3V,IAAA8V,OAAA,IAAAH,UAAA3V,IAAA8V,OAAA,IAAA,IAAAH,UAAA3V,IAAA8V,OAAA,IAAAH,UAAA3V,IAAA8V,OAAA,IAAA,IAAAH,UAAA3V,IAAA8V,OAAA,IAAAH,UAAA3V,IAAA8V,OAAA,IAAA,IAAAH,UAAA3V,IAAA8V,OAAA,IAAAH,UAAA3V,IAAA8V,OAAA,IAAA,IAAAH,UAAA3V,IAAA8V,OAAA,KAAAH,UAAA3V,IAAA8V,OAAA,KAAAH,UAAA3V,IAAA8V,OAAA,KAAAH,UAAA3V,IAAA8V,OAAA,KAAAH,UAAA3V,IAAA8V,OAAA,KAAAH,UAAA3V,IAAA8V,OAAA,MAAAC,cAMA,KAAA,EAAAtE,UAAAN,SAAAmD,MAAA,CACA,MAAA1Y,UAAA,+BAGA,OAAA0Y,KAGA,IAAAD,SAAAwB,UACAxc,QAAA8X,QAAAkD,qECtCA,aAEAha,OAAAwB,eAAAxC,QAAA,aAAA,CACA2B,MAAA,OAEA3B,QAAA8X,aAAA,EAEA,IAAA6E,KAAApE,uBAAA7Y,QAAA,aAEA,IAAA2Y,WAAAE,uBAAA7Y,QAAA,mBAEA,SAAA6Y,uBAAAC,KAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAA,CAAAV,QAAAU,KAMA,IAAAoE,QAEA,IAAAC,UAGA,IAAAC,WAAA,EACA,IAAAC,WAAA,EAEA,SAAAC,GAAAnT,QAAAoT,IAAAR,QACA,IAAAld,EAAA0d,KAAAR,QAAA,EACA,MAAA/C,EAAAuD,KAAA,IAAApW,MAAA,IACAgD,QAAAA,SAAA,GACA,IAAA4M,KAAA5M,QAAA4M,MAAAmG,QACA,IAAAM,SAAArT,QAAAqT,WAAAjb,UAAA4H,QAAAqT,SAAAL,UAIA,GAAApG,MAAA,MAAAyG,UAAA,KAAA,CACA,MAAAC,UAAAtT,QAAAlB,SAAAkB,QAAAsR,KAAAwB,KAAA7E,WAEA,GAAArB,MAAA,KAAA,CAEAA,KAAAmG,QAAA,CAAAO,UAAA,GAAA,EAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,IAGA,GAAAD,UAAA,KAAA,CAEAA,SAAAL,WAAAM,UAAA,IAAA,EAAAA,UAAA,IAAA,OAQA,IAAAC,MAAAvT,QAAAuT,QAAAnb,UAAA4H,QAAAuT,MAAAC,KAAAC,MAGA,IAAAC,MAAA1T,QAAA0T,QAAAtb,UAAA4H,QAAA0T,MAAAR,WAAA,EAEA,MAAAS,GAAAJ,MAAAN,YAAAS,MAAAR,YAAA,IAEA,GAAAS,GAAA,GAAA3T,QAAAqT,WAAAjb,UAAA,CACAib,SAAAA,SAAA,EAAA,MAKA,IAAAM,GAAA,GAAAJ,MAAAN,aAAAjT,QAAA0T,QAAAtb,UAAA,CACAsb,MAAA,EAIA,GAAAA,OAAA,IAAA,CACA,MAAA,IAAA1d,MAAA,mDAGAid,WAAAM,MACAL,WAAAQ,MACAV,UAAAK,SAEAE,OAAA,YAEA,MAAAK,KAAAL,MAAA,WAAA,IAAAG,OAAA,WACA7D,EAAAna,KAAAke,KAAA,GAAA,IACA/D,EAAAna,KAAAke,KAAA,GAAA,IACA/D,EAAAna,KAAAke,KAAA,EAAA,IACA/D,EAAAna,KAAAke,GAAA,IAEA,MAAAC,IAAAN,MAAA,WAAA,IAAA,UACA1D,EAAAna,KAAAme,MAAA,EAAA,IACAhE,EAAAna,KAAAme,IAAA,IAEAhE,EAAAna,KAAAme,MAAA,GAAA,GAAA,GAEAhE,EAAAna,KAAAme,MAAA,GAAA,IAEAhE,EAAAna,KAAA2d,WAAA,EAAA,IAEAxD,EAAAna,KAAA2d,SAAA,IAEA,IAAA,IAAA9d,EAAA,EAAAA,EAAA,IAAAA,EAAA,CACAsa,EAAAna,EAAAH,GAAAqX,KAAArX,GAGA,OAAA6d,MAAA,EAAA5E,WAAAP,SAAA4B,GAGA,IAAAsB,SAAAgC,GACAhd,QAAA8X,QAAAkD,oFC1GA,aAEAha,OAAAwB,eAAAxC,QAAA,aAAA,CACA2B,MAAA,OAEA3B,QAAA8X,aAAA,EAEA,IAAAD,GAAAU,uBAAA7Y,QAAA,aAEA,IAAAie,IAAApF,uBAAA7Y,QAAA,aAEA,SAAA6Y,uBAAAC,KAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAA,CAAAV,QAAAU,KAEA,MAAAoF,IAAA,EAAA/F,GAAAC,SAAA,KAAA,GAAA6F,IAAA7F,SACA,IAAAkD,SAAA4C,GACA5d,QAAA8X,QAAAkD,8ECfA,aAEAha,OAAAwB,eAAAxC,QAAA,aAAA,CACA2B,MAAA,OAEA3B,QAAA8X,QAAAkD,SACAhb,QAAA6d,IAAA7d,QAAA8d,SAAA,EAEA,IAAAzF,WAAAE,uBAAA7Y,QAAA,mBAEA,IAAA4Y,OAAAC,uBAAA7Y,QAAA,eAEA,SAAA6Y,uBAAAC,KAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAA,CAAAV,QAAAU,KAEA,SAAAuF,cAAAC,KACAA,IAAAnF,SAAAC,mBAAAkF,MAEA,MAAArF,MAAA,GAEA,IAAA,IAAApZ,EAAA,EAAAA,EAAAye,IAAA9d,SAAAX,EAAA,CACAoZ,MAAApV,KAAAya,IAAAhF,WAAAzZ,IAGA,OAAAoZ,MAGA,MAAAmF,IAAA,uCACA9d,QAAA8d,IAAAA,IACA,MAAAD,IAAA,uCACA7d,QAAA6d,IAAAA,IAEA,SAAA7C,SAAApW,KAAAqN,QAAAgM,UACA,SAAAC,aAAAvc,MAAAwc,UAAAlB,IAAAR,QACA,UAAA9a,QAAA,SAAA,CACAA,MAAAoc,cAAApc,OAGA,UAAAwc,YAAA,SAAA,CACAA,WAAA,EAAA7F,OAAAR,SAAAqG,WAGA,GAAAA,UAAAje,SAAA,GAAA,CACA,MAAAqC,UAAA,oEAMA,IAAAoW,MAAA,IAAAI,WAAA,GAAApX,MAAAzB,QACAyY,MAAAhW,IAAAwb,WACAxF,MAAAhW,IAAAhB,MAAAwc,UAAAje,QACAyY,MAAAsF,SAAAtF,OACAA,MAAA,GAAAA,MAAA,GAAA,GAAA1G,QACA0G,MAAA,GAAAA,MAAA,GAAA,GAAA,IAEA,GAAAsE,IAAA,CACAR,OAAAA,QAAA,EAEA,IAAA,IAAAld,EAAA,EAAAA,EAAA,KAAAA,EAAA,CACA0d,IAAAR,OAAAld,GAAAoZ,MAAApZ,GAGA,OAAA0d,IAGA,OAAA,EAAA5E,WAAAP,SAAAa,OAIA,IACAuF,aAAAtZ,KAAAA,KACA,MAAAhB,MAGAsa,aAAAJ,IAAAA,IACAI,aAAAL,IAAAA,IACA,OAAAK,2FC5EA,aAEAld,OAAAwB,eAAAxC,QAAA,aAAA,CACA2B,MAAA,OAEA3B,QAAA8X,aAAA,EAEA,IAAA6E,KAAApE,uBAAA7Y,QAAA,aAEA,IAAA2Y,WAAAE,uBAAA7Y,QAAA,mBAEA,SAAA6Y,uBAAAC,KAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAA,CAAAV,QAAAU,KAEA,SAAA4F,GAAAvU,QAAAoT,IAAAR,QACA5S,QAAAA,SAAA,GAEA,MAAAwU,KAAAxU,QAAAlB,SAAAkB,QAAAsR,KAAAwB,KAAA7E,WAGAuG,KAAA,GAAAA,KAAA,GAAA,GAAA,GACAA,KAAA,GAAAA,KAAA,GAAA,GAAA,IAEA,GAAApB,IAAA,CACAR,OAAAA,QAAA,EAEA,IAAA,IAAAld,EAAA,EAAAA,EAAA,KAAAA,EAAA,CACA0d,IAAAR,OAAAld,GAAA8e,KAAA9e,GAGA,OAAA0d,IAGA,OAAA,EAAA5E,WAAAP,SAAAuG,MAGA,IAAArD,SAAAoD,GACApe,QAAA8X,QAAAkD,oFCpCA,aAEAha,OAAAwB,eAAAxC,QAAA,aAAA,CACA2B,MAAA,OAEA3B,QAAA8X,aAAA,EAEA,IAAAD,GAAAU,uBAAA7Y,QAAA,aAEA,IAAA4e,KAAA/F,uBAAA7Y,QAAA,cAEA,SAAA6Y,uBAAAC,KAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAA,CAAAV,QAAAU,KAEA,MAAA+F,IAAA,EAAA1G,GAAAC,SAAA,KAAA,GAAAwG,KAAAxG,SACA,IAAAkD,SAAAuD,GACAve,QAAA8X,QAAAkD,+ECfA,aAEAha,OAAAwB,eAAAxC,QAAA,aAAA,CACA2B,MAAA,OAEA3B,QAAA8X,aAAA,EAEA,IAAA0G,OAAAjG,uBAAA7Y,QAAA,eAEA,SAAA6Y,uBAAAC,KAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAA,CAAAV,QAAAU,KAEA,SAAAiG,SAAAxD,MACA,cAAAA,OAAA,UAAAuD,OAAA1G,QAAAvI,KAAA0L,MAGA,IAAAD,SAAAyD,SACAze,QAAA8X,QAAAkD,kEChBA,aAEAha,OAAAwB,eAAAxC,QAAA,aAAA,CACA2B,MAAA,OAEA3B,QAAA8X,aAAA,EAEA,IAAAM,UAAAG,uBAAA7Y,QAAA,kBAEA,SAAA6Y,uBAAAC,KAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAA,CAAAV,QAAAU,KAEA,SAAAvG,QAAAgJ,MACA,KAAA,EAAA7C,UAAAN,SAAAmD,MAAA,CACA,MAAA1Y,UAAA,gBAGA,OAAAgV,SAAA0D,KAAAsB,OAAA,GAAA,GAAA,IAGA,IAAAvB,SAAA/I,QACAjS,QAAA8X,QAAAkD,qECAA5a,OAAAJ,QAAA+I,YAEA,SAAAA,eAEAA,YAAA2V,MAAA,SAAAxS,aACA,IAAArL,UAAAqL,YAAArL,WAAAqL,YAEArL,UAAA8d,cAAA,KAGA9d,UAAAmE,GAAA,SAAA4Z,MAAAC,UAAAC,IACAhd,KAAAid,UAAAjd,KAAAid,WAAA,GACA,IAAAC,SAAA1b,UAAApD,SAAA,EACA+e,MAAAD,SAAA1b,UAAA,GAAArB,UACAid,KAAAF,SAAA1b,UAAA,GAAAA,UAAA,GACA4b,KAAAC,WAAAF,OACAnd,KAAAid,UAAAH,OAAA9c,KAAAid,UAAAH,QAAA,IAAArb,KAAA2b,MACA,OAAApd,MAKAjB,UAAAkB,KAAA,SAAA6c,MAAAC,UAAAC,IACA,IAAApR,KAAA5L,KACAkd,SAAA1b,UAAApD,SAAA,EACA+e,MAAAD,SAAA1b,UAAA,GAAArB,UACAid,KAAAF,SAAA1b,UAAA,GAAAA,UAAA,GACA,SAAA0B,KACA0I,KAAA1H,IAAA4Y,MAAA5Z,IACAka,KAAA1e,MAAAsB,KAAAwB,WAEAxB,KAAAkD,GAAA4Z,MAAAK,MAAAja,IACA,OAAAlD,MAIAjB,UAAAue,aAAA,SAAAP,WACA/c,KAAAid,UAAAjd,KAAAid,WAAA,GACA,IAAAM,KAAA9f,EAAAyE,IAAAsb,SACA,IAAAD,QAAAvd,KAAAid,UAAA,CACAO,SAAAxd,KAAAid,UAAAM,MACA,IAAA9f,EAAA,EAAAyE,IAAAsb,SAAApf,OAAAX,EAAAyE,IAAAzE,IAAA,CACA,GAAA+f,SAAA/f,GAAA4f,aAAAN,UAAA,CAGAS,SAAA1W,OAAArJ,EAAA,GACAA,IACAyE,QAIA,OAAAlC,MAKAjB,UAAAmF,IAAA,SAAA4Y,MAAAE,IACAhd,KAAAid,UAAAjd,KAAAid,WAAA,GACA,IAAAA,UAAAjd,KAAAid,UAAAH,OACArf,EAEA,IAAAwf,UAAA,OAAAjd,KAGA,GAAAwB,UAAApD,SAAA,EAAA,QACA4B,KAAAid,UAAAH,OACA,OAAA9c,KAIAvC,EAAAwf,UAAApS,QAAAmS,IACA,GAAAvf,KAAA,EAAA,CACAwf,UAAAnW,OAAArJ,EAAA,GACA,GAAAwf,UAAA7e,SAAA,EAAA,QACA4B,KAAAid,UAAAH,QAGA,OAAA9c,MAKAjB,UAAAuC,KAAA,SAAAwb,OACA9c,KAAAid,UAAAjd,KAAAid,WAAA,GACA,IAAApe,KAAA,GAAA2G,MAAArH,KAAAqD,UAAA,GACAyb,UAAAjd,KAAAid,UAAAH,OACAW,iBAAAzd,KAAA0d,qBAAAZ,OACArf,EACAyE,IACAqb,KACApb,UAEA,GAAA8a,UAAA,CACA9a,UAAA8a,UAAAzX,QACA,IAAA/H,EAAA,EAAAyE,IAAAC,UAAA/D,OAAAX,EAAAyE,MAAAzE,EAAA,CACA,IAAA0E,UAAA1E,GAAA,CACA,MAEA0E,UAAA1E,GAAAiB,MAAAsB,KAAAnB,OAIA,GAAA4e,iBAAA,CACAvb,IAAAub,iBAAArf,OACA+D,UAAAsb,iBAAAjY,QACA,IAAA/H,EAAA,EAAAyE,IAAAC,UAAA/D,OAAAX,EAAAyE,MAAAzE,EAAA,CACA,IAAA0E,UAAA1E,GAAA,CACA,MAEA0E,UAAA1E,GAAAiB,MAAAsB,KAAA,CAAA8c,OAAAzd,OAAAR,QAIA,OAAAmB,MAIAjB,UAAA2e,qBAAA,SAAAC,WACA3d,KAAAid,UAAAjd,KAAAid,WAAA,GACA,IAAAM,KACAzS,MACA8I,OAAA,GAEA,IAAA2J,QAAAvd,KAAAid,UAAA,CACAnS,MAAAyS,KAAAzS,MAAA,KACA,GAAAyS,OAAA,KAAAzS,MAAA1M,SAAA,GAAAuf,UAAAnY,MAAA,EAAAsF,MAAA,GAAA1M,UAAA0M,MAAA,GAAA,CACA8I,OAAAA,OAAAvU,OAAAW,KAAAid,UAAAM,QAGA,OAAA3J,SAKA3M,YAAA2V,MAAA3V,wDCnJA,SAAA/I,SACA,aAQA,SAAA4B,gBAGA,IAAA8d,MAAA9d,aAAAf,UACA,IAAA8e,oBAAA3f,QAAA4B,aAUA,SAAAge,gBAAA3b,UAAA3B,UACA,IAAA/C,EAAA0E,UAAA/D,OACA,MAAAX,IAAA,CACA,GAAA0E,UAAA1E,GAAA+C,WAAAA,SAAA,CACA,OAAA/C,GAIA,OAAA,EAUA,SAAAsgB,MAAAjb,MACA,OAAA,SAAAkb,eACA,OAAAhe,KAAA8C,MAAApE,MAAAsB,KAAAwB,YAaAoc,MAAAK,aAAA,SAAAA,aAAAC,KACA,IAAAvc,OAAA3B,KAAAme,aACA,IAAAC,SACA,IAAA/Z,IAIA,GAAA6Z,eAAAtQ,OAAA,CACAwQ,SAAA,GACA,IAAA/Z,OAAA1C,OAAA,CACA,GAAAA,OAAAuK,eAAA7H,MAAA6Z,IAAAzQ,KAAApJ,KAAA,CACA+Z,SAAA/Z,KAAA1C,OAAA0C,WAIA,CACA+Z,SAAAzc,OAAAuc,OAAAvc,OAAAuc,KAAA,IAGA,OAAAE,UASAR,MAAAS,iBAAA,SAAAA,iBAAAlc,WACA,IAAAmc,cAAA,GACA,IAAA7gB,EAEA,IAAAA,EAAA,EAAAA,EAAA0E,UAAA/D,OAAAX,GAAA,EAAA,CACA6gB,cAAA7c,KAAAU,UAAA1E,GAAA+C,UAGA,OAAA8d,eASAV,MAAAW,qBAAA,SAAAA,qBAAAL,KACA,IAAA/b,UAAAnC,KAAAie,aAAAC,KACA,IAAAE,SAEA,GAAAjc,qBAAA4C,MAAA,CACAqZ,SAAA,GACAA,SAAAF,KAAA/b,UAGA,OAAAic,UAAAjc,WAGA,SAAAqc,gBAAAhe,UACA,UAAAA,WAAA,YAAAA,oBAAAoN,OAAA,CACA,OAAA,UACA,GAAApN,iBAAAA,WAAA,SAAA,CACA,OAAAge,gBAAAhe,SAAAA,cACA,CACA,OAAA,OAcAod,MAAA3a,YAAA,SAAAA,YAAAib,IAAA1d,UACA,IAAAge,gBAAAhe,UAAA,CACA,MAAA,IAAAC,UAAA,+BAGA,IAAA0B,UAAAnC,KAAAue,qBAAAL,KACA,IAAAO,yBAAAje,WAAA,SACA,IAAA6D,IAEA,IAAAA,OAAAlC,UAAA,CACA,GAAAA,UAAA+J,eAAA7H,MAAAyZ,gBAAA3b,UAAAkC,KAAA7D,aAAA,EAAA,CACA2B,UAAAkC,KAAA5C,KAAAgd,kBAAAje,SAAA,CACAA,SAAAA,SACAP,KAAA,SAKA,OAAAD,MAMA4d,MAAA1a,GAAA6a,MAAA,eAUAH,MAAAc,gBAAA,SAAAA,gBAAAR,IAAA1d,UACA,OAAAR,KAAAiD,YAAAib,IAAA,CACA1d,SAAAA,SACAP,KAAA,QAOA2d,MAAA3d,KAAA8d,MAAA,mBASAH,MAAAe,YAAA,SAAAA,YAAAT,KACAle,KAAAie,aAAAC,KACA,OAAAle,MASA4d,MAAAgB,aAAA,SAAAA,aAAAC,MACA,IAAA,IAAAphB,EAAA,EAAAA,EAAAohB,KAAAzgB,OAAAX,GAAA,EAAA,CACAuC,KAAA2e,YAAAE,KAAAphB,IAEA,OAAAuC,MAWA4d,MAAAta,eAAA,SAAAA,eAAA4a,IAAA1d,UACA,IAAA2B,UAAAnC,KAAAue,qBAAAL,KACA,IAAAlZ,MACA,IAAAX,IAEA,IAAAA,OAAAlC,UAAA,CACA,GAAAA,UAAA+J,eAAA7H,KAAA,CACAW,MAAA8Y,gBAAA3b,UAAAkC,KAAA7D,UAEA,GAAAwE,SAAA,EAAA,CACA7C,UAAAkC,KAAAyC,OAAA9B,MAAA,KAKA,OAAAhF,MAMA4d,MAAA1Z,IAAA6Z,MAAA,kBAYAH,MAAAkB,aAAA,SAAAA,aAAAZ,IAAA/b,WAEA,OAAAnC,KAAA+e,oBAAA,MAAAb,IAAA/b,YAaAyb,MAAAoB,gBAAA,SAAAA,gBAAAd,IAAA/b,WAEA,OAAAnC,KAAA+e,oBAAA,KAAAb,IAAA/b,YAeAyb,MAAAmB,oBAAA,SAAAA,oBAAAE,OAAAf,IAAA/b,WACA,IAAA1E,EACA,IAAAoC,MACA,IAAAqf,OAAAD,OAAAjf,KAAAsD,eAAAtD,KAAAiD,YACA,IAAAkc,SAAAF,OAAAjf,KAAAgf,gBAAAhf,KAAA8e,aAGA,UAAAZ,MAAA,YAAAA,eAAAtQ,QAAA,CACA,IAAAnQ,KAAAygB,IAAA,CACA,GAAAA,IAAAhS,eAAAzO,KAAAoC,MAAAqe,IAAAzgB,IAAA,CAEA,UAAAoC,QAAA,WAAA,CACAqf,OAAA/gB,KAAA6B,KAAAvC,EAAAoC,WAEA,CAEAsf,SAAAhhB,KAAA6B,KAAAvC,EAAAoC,cAKA,CAIApC,EAAA0E,UAAA/D,OACA,MAAAX,IAAA,CACAyhB,OAAA/gB,KAAA6B,KAAAke,IAAA/b,UAAA1E,KAIA,OAAAuC,MAYA4d,MAAAwB,YAAA,SAAAA,YAAAlB,KACA,IAAA3c,YAAA2c,IACA,IAAAvc,OAAA3B,KAAAme,aACA,IAAA9Z,IAGA,GAAA9C,OAAA,SAAA,QAEAI,OAAAuc,UAEA,GAAAA,eAAAtQ,OAAA,CAEA,IAAAvJ,OAAA1C,OAAA,CACA,GAAAA,OAAAuK,eAAA7H,MAAA6Z,IAAAzQ,KAAApJ,KAAA,QACA1C,OAAA0C,WAIA,QAEArE,KAAAE,QAGA,OAAAF,MAQA4d,MAAAzZ,mBAAA4Z,MAAA,eAcAH,MAAAyB,UAAA,SAAAA,UAAAnB,IAAArf,MACA,IAAAygB,aAAAtf,KAAAue,qBAAAL,KACA,IAAA/b,UACA,IAAA3B,SACA,IAAA/C,EACA,IAAA4G,IACA,IAAA+Z,SAEA,IAAA/Z,OAAAib,aAAA,CACA,GAAAA,aAAApT,eAAA7H,KAAA,CACAlC,UAAAmd,aAAAjb,KAAAmB,MAAA,GAEA,IAAA/H,EAAA,EAAAA,EAAA0E,UAAA/D,OAAAX,IAAA,CAGA+C,SAAA2B,UAAA1E,GAEA,GAAA+C,SAAAP,OAAA,KAAA,CACAD,KAAAsD,eAAA4a,IAAA1d,SAAAA,UAGA4d,SAAA5d,SAAAA,SAAA9B,MAAAsB,KAAAnB,MAAA,IAEA,GAAAuf,WAAApe,KAAAuf,sBAAA,CACAvf,KAAAsD,eAAA4a,IAAA1d,SAAAA,aAMA,OAAAR,MAMA4d,MAAA4B,QAAAzB,MAAA,aAUAH,MAAAtc,KAAA,SAAAA,KAAA4c,KACA,IAAArf,KAAAkG,MAAAhG,UAAAyG,MAAArH,KAAAqD,UAAA,GACA,OAAAxB,KAAAqf,UAAAnB,IAAArf,OAWA+e,MAAA6B,mBAAA,SAAAA,mBAAA5f,OACAG,KAAA0f,iBAAA7f,MACA,OAAAG,MAWA4d,MAAA2B,oBAAA,SAAAA,sBACA,GAAAvf,KAAAkM,eAAA,oBAAA,CACA,OAAAlM,KAAA0f,qBAEA,CACA,OAAA,OAUA9B,MAAAO,WAAA,SAAAA,aACA,OAAAne,KAAAE,UAAAF,KAAAE,QAAA,KAQAJ,aAAA6f,WAAA,SAAAA,aACAzhB,QAAA4B,aAAA+d,oBACA,OAAA/d,cAIA,UAAA+V,SAAA,YAAAA,OAAAC,IAAA,CACAD,QAAA,WACA,OAAA/V,qBAGA,UAAAxB,SAAA,UAAAA,OAAAJ,QAAA,CACAI,OAAAJ,QAAA4B,iBAEA,CACA5B,QAAA4B,aAAAA,eA5dA,QA8dA4H,SAAA,YAAAA,OAAA1H,MAAA,8CCreA1B,OAAAJ,QAAA,CACA0hB,OAAA,WACAC,aAAA,CACA7Z,QAAA,QACA8Z,KAAA,QACAjL,SAAA,QACAsE,KAAA,QACA4G,uBAAA,SAEA/P,YAAA,mBACAgQ,gBAAA,CACAC,cAAA,UACAC,kBAAA,QACAC,WAAA,SACAC,MAAA,QACAC,YAAA,QACAC,qBAAA,QACAC,qBAAA,QACAC,uBAAA,QACAC,sBAAA,QACAC,gBAAA,QACAC,uBAAA,QACAC,WAAA,gBACAC,OAAA,QACAC,MAAA,QACAC,OAAA,QACAC,QAAA,SACAC,WAAA,SAEAC,QAAA,aACAC,KAAA,eACAre,KAAA,mBACAse,WAAA,CACA7f,KAAA,MACAyF,IAAA,sCAEAqa,QAAA,CACAlB,WAAA,oNACAmB,kBAAA,2RACAC,MAAA,4MACAC,KAAA,sBAEAC,MAAA,iBACAtR,QAAA,0HC3CA,IAAAuR,WAAA9jB,QAAA,uBAEA,GAAI8J,OAAQ,CACRA,OAAO,YAAcga,WAAAC,4KCezB,IAAAC,SAAAhkB,QAAA,YAKA,IAAAikB,iBAAAjkB,QAAA,6CAKA,IAAMkkB,OAAyBD,iBAAAE,eAAeC,cAO9C,IAAAC,WAAA,WA+DI,SAAAA,WAAoBC,QAAkBC,mBAAlBniB,KAAAkiB,QAAAA,QAVpBliB,KAAAoiB,SAAW,MAWP,IAAItL,IAAM,wBACV,KAA+BqL,kBAAmBE,KAAM,CAEpDriB,KAAKsiB,aAAuCH,kBAC5CniB,KAAKuiB,aAAeviB,KAAKsiB,aAAaE,GACtCxiB,KAAKyiB,aAAeziB,KAAKsiB,aAAaI,UACtC1iB,KAAK4M,KAAO5M,KAAKsiB,aAAaK,SAC9B3iB,KAAK4iB,aAAe5iB,KAAKsiB,aAAaO,UACtC7iB,KAAKqiB,KAAOriB,KAAKsiB,aAAaD,KAC9BriB,KAAK8iB,OAAS9iB,KAAKsiB,aAAaQ,OAChChM,KAAO,cACJ,CAEH9W,KAAK+iB,cAAyCZ,kBAC9CniB,KAAKuiB,aAAeviB,KAAK+iB,cAAcP,GACvCxiB,KAAKyiB,aAAeziB,KAAK+iB,cAAcL,UACvC,GAAI1iB,KAAK+iB,cAAcJ,SAAU,CAC7B3iB,KAAK4M,KAAO5M,KAAK+iB,cAAcJ,SAEnC,GAAI3iB,KAAK+iB,cAAcC,QAAS,CAC5BhjB,KAAKijB,kBAAkBjjB,KAAK+iB,cAAcC,SAE9ClM,KAAO,iCAAmC9W,KAAK+iB,cAAcP,GAAK,IAEtEV,OAAOoB,KAAKpM,KAShBmL,WAAAljB,UAAAokB,iBAAA,SAAiBC,WAEbtB,OAAOuB,SAASrjB,KAAK8H,OAAQwb,mBAAqB,QAAU,UAAY,gBACpEtjB,KAAKuiB,aAAca,WAEvBpjB,KAAKkiB,QAAQqB,SAASC,YAAY,iBAAkB,CAChDC,aAAczjB,KAAKuiB,aACnBa,UAAWA,UAAUA,UACrBM,OAAQN,UAAUM,OAClBC,cAAeP,UAAUO,gBAC1B,SAAC/hB,MAAOwc,UACP,GAAIxc,MAAO,CACPkgB,OAAOlgB,MAAM,gCACPgiB,KAAKlJ,UAAU9Y,aAQjCqgB,WAAAljB,UAAAkkB,kBAAA,SAAkBlb,SAAlB,IAAA8b,MAAA7jB,KAII+H,QAAQ+b,SAAQ,SAAA7d,MACZ,IAAM8d,cAAsC,CACxCvB,GAAIvc,KAAKuc,GACTE,UAAWzc,KAAKyc,UAChBsB,WAAYH,MACZI,SAAUhe,KAAKge,SACfC,SAAUje,KAAKie,SACfC,YAAale,KAAKke,YAClBC,YAAane,KAAKme,YAClBC,YAAape,KAAKoe,YAClBC,UAAWre,KAAKqe,UAChBC,kBAAmBte,KAAKse,gBAAkBX,KAAKpV,MAAMvI,KAAKse,iBAAmBpkB,UAC7EqkB,SAAUve,KAAKue,OAASve,KAAKue,OAASrkB,WAE1C,IAAM2H,OAAS,IAAI8Z,SAAA6C,OAAOZ,MAAK3B,QAAS6B,eAExCF,MAAKa,UAAU5c,WAGnBga,OAAOoB,KAAK,4CAA8CljB,KAAKuiB,aAAe,2DAA4DviB,KAAK8H,OAAQ6c,oBAM3J1C,WAAAljB,UAAA2lB,UAAA,SAAU5c,QACNA,OAAOkc,WAAahkB,KACpBA,KAAK8H,OAASA,QAMlBma,WAAAljB,UAAA6lB,aAAA,SAAaC,iBACF7kB,KAAK8H,QAMhBma,WAAAljB,UAAA+lB,QAAA,WACI,KAAM9kB,KAAK8H,OAAQ,QACR9H,KAAK8H,OAEhB9H,KAAKoiB,SAAW,MAGxB,OAAAH,WAzKA,GAAa/jB,QAAA+jB,WAAAA,sNCjBb,IAAAniB,aAAAlC,QAAA,wBACA,IAAAikB,iBAAAjkB,QAAA,6CAKA,IAAMkkB,OAAyBD,iBAAAE,eAAeC,cAE9C,IAAA+C,gBAAA,WAAA,SAAAA,kBAKI/kB,KAAAglB,wBAAmF,IAAIC,QAIvFjlB,KAAAklB,GAAK,IAAIplB,aAqBTilB,gBAAAhmB,UAAAmF,IAAA,SAAI3C,KAAcU,SACd,IAAKA,QAAS,CACVjC,KAAKklB,GAAG/gB,mBAAmB5C,UACxB,CAEH,IAAM4jB,aAAenlB,KAAKglB,wBAAwBpkB,IAAIqB,SACtD,KAAMkjB,aAAc,CAChBnlB,KAAKklB,GAAGhhB,IAAI3C,KAAM4jB,cAEtBnlB,KAAKglB,wBAAwBI,OAAOnjB,SAExC,OAAOjC,MAMX+kB,gBAAAhmB,UAAAsmB,MAAA,SAAM9jB,KAAcQ,QAAiBE,SACjC,IAAMkjB,aAAe,SAAArI,OACjB,GAAIA,MAAO,CACPgF,OAAOoB,KAAKnhB,QAAS+a,WAClB,CACHgF,OAAOoB,KAAKnhB,SAEhBE,QAAQ6a,QAEZ9c,KAAKglB,wBAAwBnkB,IAAIoB,QAASkjB,cAC1CnlB,KAAKklB,GAAGhiB,GAAG3B,KAAM4jB,cACjB,OAAOnlB,MAMX+kB,gBAAAhmB,UAAAumB,QAAA,SAAQ/jB,KAAcQ,QAAiBE,SAAvC,IAAA4hB,MAAA7jB,KACI,IAAMmlB,aAAe,SAAArI,OACjB,GAAIA,MAAO,CACPgF,OAAOoB,KAAKnhB,QAAS+a,WAClB,CACHgF,OAAOoB,KAAKnhB,SAEhBE,QAAQ6a,OAER+G,MAAKmB,wBAAwBI,OAAOnjB,UAExCjC,KAAKglB,wBAAwBnkB,IAAIoB,QAASkjB,cAC1CnlB,KAAKklB,GAAGjlB,KAAKsB,KAAM4jB,cACnB,OAAOnlB,MAGf,OAAA+kB,gBAhFA,GAAsB7mB,QAAA6mB,gBAAAA,8NCPtB,IAAAQ,6BAAA3nB,QAAA,yDACA,IAAA4nB,gBAAA5nB,QAAA,2CACA,IAAAikB,iBAAAjkB,QAAA,6CAKA,IAAMkkB,OAAyBD,iBAAAE,eAAeC,cAO9C,IAAAyD,OAAA,WA8CI,SAAAA,OAAYlkB,KAAcwG,SAZ1B/H,KAAAwd,SAAsD,IAAIkI,IAatD1lB,KAAKuB,KAAOA,KACZvB,KAAK+H,QAAUA,QAUnB0d,OAAA1mB,UAAA4mB,WAAA,SAAWC,OAAgBC,QAA3B,IAAAhC,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzByc,OAAOoB,KAAK,qCAAuCW,MAAK/b,OAAO+c,UAC/D,IAAIiB,aACJ,UAAWD,SAAW,SAAU,CAC5B,IACIC,aAAelC,KAAKlJ,UAAUmL,QAChC,MAAOjkB,OACL,IAAMmkB,SAAW,oDACjBjE,OAAOlgB,MAAMmkB,UACb1gB,OAAO0gB,eAER,CACHD,aAAuBD,OAE3BhC,MAAK/b,OAAOoa,QAAQqB,SAASC,YACzB,mBACA,CAAEqB,SAAUhB,MAAK/b,OAAO+c,SAAUe,OAAMA,OAAEC,OAAQC,eAClD,SAAClkB,MAAOwc,UACJ,GAAIxc,MAAO,CACPkgB,OAAOlgB,MAAM,4CAA8CiiB,MAAK/b,OAAO+c,SAAUjjB,OACjF,GAAIA,MAAM5D,OAAS,IAAK,CACpBqH,OAAO,IAAImgB,gBAAAQ,cAAcR,gBAAAS,kBAAkBC,2BAA4B,8DACpE,CACH7gB,OAAOzD,YAER,CACHkgB,OAAOoB,KAAK,iDAAmDW,MAAK/b,OAAO+c,UAC3E,IAAMsB,SAAiBjnB,OAAQknB,OAAO,GAAIvC,MAAK/b,OAAO0c,QACtDX,MAAK/b,OAAO0c,OAAQ6B,eAAiB,CAAET,OAAMA,OAAEC,OAAQjC,KAAKpV,MAAMsX,eAClEjC,MAAK/b,OAAOoa,QAAQ7C,UAAU,wBAAyB,CAAC,IAAIkG,6BAAAe,2BAA2BzC,MAAK/b,OAAOoa,QAAS2B,MAAK/b,OAAQ,SAAU+b,MAAK/b,OAAO0c,OAAS2B,SAAU,sBAClKtC,MAAK/b,OAAOye,cAAclH,UAAU,wBAAyB,CAAC,IAAIkG,6BAAAe,2BAA2BzC,MAAK/b,OAAOye,cAAe1C,MAAK/b,OAAQ,SAAU+b,MAAK/b,OAAO0c,OAAS2B,SAAU,sBAC9K/gB,kBAgBpBqgB,OAAA1mB,UAAA6G,iBAAA,SAAiB4gB,UAAmBvkB,SAApC,IAAA4hB,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzByc,OAAOoB,KAAK,yCAA2CsD,UAAY,cAAgB3C,MAAK/b,OAAO+c,UAC/FhB,MAAK/b,OAAOoa,QAAQqB,SAASC,YACzB,yBACA,CAAEqB,SAAUhB,MAAK/b,OAAO+c,SAAU2B,UAASA,YAC3C,SAAC5kB,MAAOwc,UACJ,GAAIxc,MAAO,CACPkgB,OAAOlgB,MAAM,+CAAiD4kB,UAAY,cAAgB3C,MAAK/b,OAAO+c,SAAUjjB,OAChH,GAAIA,MAAM5D,OAAS,IAAK,CACpBqH,OAAO,IAAImgB,gBAAAQ,cAAcR,gBAAAS,kBAAkBC,2BAA4B,kEACpE,CACH7gB,OAAOzD,YAER,CACHiiB,MAAKrG,SAAS3c,IAAI2lB,UAAWvkB,SAC7B6f,OAAOoB,KAAK,kCAAoCsD,UAAY,mCAAqC3C,MAAK/b,OAAO+c,UAC7Gzf,kBAepBqgB,OAAA1mB,UAAA+G,oBAAA,SAAoB0gB,WAApB,IAAA3C,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzByc,OAAOoB,KAAK,2CAA6CsD,UAAY,cAAgB3C,MAAK/b,OAAO+c,UACjGhB,MAAK/b,OAAOoa,QAAQqB,SAASC,YACzB,4BACA,CAAEqB,SAAUhB,MAAK/b,OAAO+c,SAAU2B,UAASA,YAC3C,SAAC5kB,MAAOwc,UACJ,GAAIxc,MAAO,CACPkgB,OAAOlgB,MAAM,iDAAmD4kB,UAAY,cAAgB3C,MAAK/b,OAAO+c,SAAUjjB,OAClH,GAAIA,MAAM5D,OAAS,IAAK,CACpBqH,OAAO,IAAImgB,gBAAAQ,cAAcR,gBAAAS,kBAAkBC,2BAA4B,kEACpE,CACH7gB,OAAOzD,YAER,CACHiiB,MAAKrG,SAAS4H,OAAOoB,WACrB1E,OAAOoB,KAAK,kCAAoCsD,UAAY,mCAAqC3C,MAAK/b,OAAO+c,UAC7Gzf,kBAOxB,OAAAqgB,OAlKA,GAAavnB,QAAAunB,OAAAA,0SCfb,IAAAgB,qBAAA7oB,QAAA,gDACA,IAAAikB,iBAAAjkB,QAAA,6CACA,IAAA8oB,WAAA9oB,QAAA,sCAUA,IAAMkkB,OAAyBD,iBAAAE,eAAeC,cAK9C,IAAInN,SAUJ,IAAA8R,cAAA,WAeI,SAAAA,cAAoB7e,QAAA9H,KAAA8H,OAAAA,OATZ9H,KAAA4mB,OAAgB,GAUpB/R,SAAW6R,WAAAG,cAAc7E,cACzBhiB,KAAKuiB,eAAkBviB,KAAK8H,OAAOkc,WAAchkB,KAAK8H,OAAOkc,WAAWzB,aAAe,qBACvFviB,KAAKwiB,GAAKxiB,KAAK8H,OAAO+c,SAAW,IAAM7kB,KAAKuiB,aAAe,eAC3DviB,KAAKyD,MAAQgjB,qBAAAK,mBAAmBC,MAYpCJ,cAAA5nB,UAAA+jB,OAAA,SAAOkE,UAAP,IAAAnD,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzB,IACI,UAAW4hB,gBAAkB,YAAa,CACtCnF,OAAOlgB,MAAM,+GACb,MAAO7D,MAAM,+GAEjB,GAAI8lB,MAAKpgB,QAAUgjB,qBAAAK,mBAAmBC,MAAO,CACzC,MAAOhpB,MAAM,mFAA4F8lB,MAAKpgB,MAAQ,uEAE1Hqe,OAAOoF,IAAI,uCAAyCrD,MAAK/b,OAAO+c,SAAW,oBAAsBhB,MAAKtB,aAAe,KAErH,IAAIxa,QAAU,GACd,UAAWkf,cAAcE,kBAAoB,WAAY,CACrD,KAAMH,SAAU,CACZ,IAAKC,cAAcE,gBAAgBH,UAAW,CAC1C3hB,OAAO,IAAItH,MAAM,aAAeipB,SAAW,uBAE/Cjf,QAAU,CAAEif,SAAQA,cACjB,CACHlF,OAAOoF,IAAI,6DAEZ,CACHpF,OAAOriB,KAAK,wEAGhBokB,MAAKuD,cAAgB,IAAIH,cAAcpD,MAAK/b,OAAOuf,iBAAkBtf,SACrE8b,MAAKuD,cAAcE,MAAM,IAE3B,MAAOxlB,KACLuD,OAAOvD,KAGX+hB,MAAKuD,cAAcG,gBAAkB,SAAClqB,GAClCwmB,MAAK+C,OAAOnlB,KAAKpE,EAAEuP,OAGvBiX,MAAKuD,cAAcI,QAAU,SAACnqB,GAC1BykB,OAAOlgB,MAAM,wBAAyBvE,IAG1CwmB,MAAKuD,cAAcK,QAAU,WACzB3F,OAAOoF,IAAI,gCAAkCrD,MAAKuD,cAAc3jB,MAAQ,MAG5EogB,MAAKuD,cAAcM,OAAS,WACxB7D,MAAK8D,iBAGT9D,MAAKuD,cAAcQ,QAAU,WACzB9F,OAAOoF,IAAI,+BAAiCrD,MAAKuD,cAAc3jB,MAAQ,MAG3EogB,MAAKuD,cAAcS,SAAW,WAC1B/F,OAAOoF,IAAI,gCAAkCrD,MAAKuD,cAAc3jB,MAAQ,MAG5EogB,MAAKuD,cAAcU,UAAY,SAACzqB,GAC5BykB,OAAOoF,IAAI,0BAA4B7pB,IAG3CwmB,MAAKpgB,MAAQgjB,qBAAAK,mBAAmBiB,UAChC3iB,cAURuhB,cAAA5nB,UAAA2K,KAAA,WAAA,IAAAma,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzB,IACI,GAAIwe,MAAKpgB,QAAUgjB,qBAAAK,mBAAmBC,OAASlD,MAAKpgB,QAAUgjB,qBAAAK,mBAAmBkB,SAAU,CACvF,MAAOjqB,MAAM,iGAA4G8lB,MAAKpgB,MAAQ,2CAE1IogB,MAAKuD,cAAcM,OAAS,WACxB7D,MAAK8D,gBACLviB,WAEJye,MAAKuD,cAAc1d,OACrB,MAAOrM,GACLgI,OAAOhI,QAUnBspB,cAAA5nB,UAAAkpB,MAAA,WAAA,IAAApE,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzB,IACI,GAAIwe,MAAKpgB,QAAUgjB,qBAAAK,mBAAmBiB,UAAW,CAC7C1iB,OAAOtH,MAAM,sFAA+F8lB,MAAKpgB,MAAQ,wEAE7HogB,MAAKuD,cAAca,QACnBpE,MAAKpgB,MAAQgjB,qBAAAK,mBAAmBoB,OAChC9iB,UACF,MAAOxD,OACLyD,OAAOzD,YASnB+kB,cAAA5nB,UAAAuK,OAAA,WAAA,IAAAua,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzB,IACI,GAAIwe,MAAKpgB,QAAUgjB,qBAAAK,mBAAmBoB,OAAQ,CAC1C,MAAOnqB,MAAM,oFAA6F8lB,MAAKpgB,MAAQ,2CAE3HogB,MAAKuD,cAAc9d,SACnBua,MAAKpgB,MAAQgjB,qBAAAK,mBAAmBiB,UAChC3iB,UACF,MAAOxD,OACLyD,OAAOzD,YASnB+kB,cAAA5nB,UAAAopB,QAAA,SAAQC,eAEJ,GAAIpoB,KAAKyD,QAAUgjB,qBAAAK,mBAAmBkB,SAAU,CAC5C,MAAOjqB,MAAM,uFAAgGiC,KAAKyD,MAAQ,0CAG9HzD,KAAKqoB,aAAe1Y,SAAS2Y,cAAc,SAE3CtoB,KAAKqoB,aAAa7F,GAAKxiB,KAAKwiB,GAC5BxiB,KAAKqoB,aAAaE,SAAW,KAE7B,GAAI1T,SAAS2T,kBAAmB,CAC5BxoB,KAAKqoB,aAAaI,aAAa,cAAe,QAGlD,UAAWL,gBAAkB,SAAU,CACnC,IAAMM,iBAAmB/Y,SAASgZ,eAAeP,eACjD,GAAIM,iBAAkB,CAClB1oB,KAAKqoB,aAAeK,iBAAiBE,YAAY5oB,KAAKqoB,mBAEvD,CACHroB,KAAKqoB,aAAeD,cAAcQ,YAAY5oB,KAAKqoB,cAGvDroB,KAAKqoB,aAAaQ,IAAM7oB,KAAK8oB,gBAE7B,OAAO9oB,KAAKqoB,cAOhB1B,cAAA5nB,UAAAgqB,MAAA,WAAA,IAAAlF,MAAA7jB,KACI,IAAMtC,EAAI,kBACCmmB,MAAKmF,KACZnF,MAAK+C,OAAS,UACP/C,MAAKuD,cACZvD,MAAKpgB,MAAQgjB,qBAAAK,mBAAmBC,OAEpC,GAAI/mB,KAAKyD,QAAUgjB,qBAAAK,mBAAmBiB,WAAa/nB,KAAKyD,QAAUgjB,qBAAAK,mBAAmBoB,OAAQ,CACzFloB,KAAK0J,OAAOuf,MAAK,WAAM,OAAAvrB,OAAKwrB,OAAM,WAAM,OAAAxrB,WACrC,CACHA,MAQRipB,cAAA5nB,UAAAoqB,SAAA,WACI,GAAInpB,KAAKyD,QAAUgjB,qBAAAK,mBAAmBkB,SAAU,CAC5C,MAAOjqB,MAAM,wFAAiGiC,KAAKyD,MAAQ,8CACxH,CACH,IAAM3F,EAAuB6R,SAAS2Y,cAAc,KACpDxqB,EAAEsrB,MAAMC,QAAU,OAClB1Z,SAAS2Z,KAAKV,YAAY9qB,GAE1B,IAAMkJ,IAAMU,OAAOqU,IAAIwN,gBAAgBvpB,KAAKgpB,MAC5ClrB,EAAE0rB,KAAOxiB,IACTlJ,EAAEqrB,SAAWnpB,KAAKwiB,GAAK,QACvB1kB,EAAE2rB,QACF/hB,OAAOqU,IAAI2N,gBAAgB1iB,KAE3B2I,SAAS2Z,KAAKK,YAAY7rB,KAOlC6oB,cAAA5nB,UAAA6qB,QAAA,WACI,GAAI5pB,KAAKyD,QAAUgjB,qBAAAK,mBAAmBkB,SAAU,CAC5C,MAAOjqB,MAAM,0DACV,CACH,OAAOiC,KAAKgpB,OAepBrC,cAAA5nB,UAAA8qB,eAAA,SAAeC,SAAkBC,SAAjC,IAAAlG,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzB,GAAIwe,MAAKpgB,QAAUgjB,qBAAAK,mBAAmBkB,SAAU,CAC5C3iB,OAAOtH,MAAM,8FAAuG8lB,MAAKpgB,MAAQ,+CAC9H,CACH,IAAMumB,OAAO,IAAIC,eACjBD,OAAKE,KAAK,OAAQJ,SAAU,MAE5B,UAAWC,UAAY,SAAU,CAC7B,IAAkB,IAAAI,GAAA,EAAAC,GAAAlrB,OAAOkF,KAAK2lB,SAAZI,GAAAC,GAAAhsB,OAAA+rB,KAAsB,CAAnC,IAAM9lB,IAAG+lB,GAAAD,IACVH,OAAKK,iBAAiBhmB,IAAK0lB,QAAQ1lB,OAI3C2lB,OAAKM,mBAAqB,WACtB,GAAIN,OAAKO,aAAe,EAAG,CACvB,GAAIP,OAAKQ,OAAOre,WAAWG,OAAO,KAAO,IAAK,CAE1ClH,QAAQ4kB,OAAKS,kBACV,CACHplB,OAAO2kB,OAAKQ,WAIxBR,OAAKU,KAAK7G,MAAKmF,WAgB3BrC,cAAA5nB,UAAA4rB,sBAAA,SAAsBb,SAAkBC,SAAxC,IAAAlG,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzB,GAAIwe,MAAKpgB,QAAUgjB,qBAAAK,mBAAmBkB,SAAU,CAC5C3iB,OAAOtH,MAAM,qGAA8G8lB,MAAKpgB,MAAQ,+CACrI,CACH,IAAMmnB,OAAO,IAAIX,eACjBW,OAAKV,KAAK,OAAQJ,SAAU,MAE5B,UAAWC,UAAY,SAAU,CAC7B,IAAkB,IAAAI,GAAA,EAAAC,GAAAlrB,OAAOkF,KAAK2lB,SAAZI,GAAAC,GAAAhsB,OAAA+rB,KAAsB,CAAnC,IAAM9lB,IAAG+lB,GAAAD,IACVS,OAAKP,iBAAiBhmB,IAAK0lB,QAAQ1lB,OAI3C,IAAMwmB,SAAW,IAAIC,SACrBD,SAASE,OAAO,OAAQlH,MAAKmF,KAAOnF,MAAKrB,GAAK,SAE9CoI,OAAKN,mBAAqB,WACtB,GAAIM,OAAKL,aAAe,EAAG,CACvB,GAAIK,OAAKJ,OAAOre,WAAWG,OAAO,KAAO,IAAK,CAE1ClH,QAAQwlB,OAAKH,kBACV,CACHplB,OAAOulB,OAAKJ,WAKxBI,OAAKF,KAAKG,eAQdlE,cAAA5nB,UAAA4oB,cAAR,WACI7F,OAAOoF,IAAI,iCAAmClnB,KAAKonB,cAAc3jB,MAAQ,KAEzEzD,KAAKgpB,KAAO,IAAIgC,KAAKhrB,KAAK4mB,OAAQ,CAAErlB,KAAM,eAC1CvB,KAAK4mB,OAAS,GAEd5mB,KAAK8oB,gBAAkBphB,OAAOqU,IAAIwN,gBAAgBvpB,KAAKgpB,MAEvDhpB,KAAKyD,MAAQgjB,qBAAAK,mBAAmBkB,UAGxC,OAAArB,cArVA,GAAazoB,QAAAyoB,cAAAA,8RC5Bb,IAAAsE,gBAAArtB,QAAA,mBACA,IAAAstB,YAAAttB,QAAA,eACA,IAAAutB,UAAAvtB,QAAA,aAEA,IAAAwtB,2BAAAxtB,QAAA,uDACA,IAAA2nB,6BAAA3nB,QAAA,yDAKA,IAAA4nB,gBAAA5nB,QAAA,2CACA,IAAAytB,kBAAAztB,QAAA,6CACA,IAAAikB,iBAAAjkB,QAAA,6CACA,IAAA8oB,WAAA9oB,QAAA,sCAEA,IAAA0tB,kBAAA1tB,QAAA,2DACA,IAAA2tB,cAAA3tB,QAAA,sDAIA,IAAAkC,aAAAlC,QAAA,wBAIA,IAAA4tB,WAAA5tB,QAAA,oDAKA,IAAM6tB,YAAc7tB,QAAQ,sBAQ5B,IAAMkkB,OAAyBD,iBAAAE,eAAeC,cAK9C,IAAInN,SAMJ,IAAA8M,SAAA,WAqDE,SAAAA,WAAA,IAAAkC,MAAA7jB,KA1CAA,KAAA0rB,WAA0B,GAY1B1rB,KAAA2rB,OAAS,GAIT3rB,KAAA4rB,SAAW,MAYX5rB,KAAA6rB,sBAAuD,GAIvD7rB,KAAA8rB,oBAA8B,EAQ9B9rB,KAAAklB,GAAK,IAAIplB,aAGP+U,SAAW6R,WAAAG,cAAc7E,cACzBhiB,KAAK+rB,eAAiBN,YAAYtb,QAClC2R,OAAOoB,KAAK,0BACZpB,OAAOoB,KAAK,6BAA+BljB,KAAK+rB,gBAEhD,GAAIlX,SAASmX,iBAAkB,CAEvBtkB,OAAQ9B,iBAAiB,qBAAqB,WAClDie,MAAK6H,WAAW5H,SAAQ,SAAAmI,WACtB,GAAIA,UAAUnkB,OAAOokB,0BAA4BD,UAAUnkB,UAAYmkB,UAAUnkB,OAAOoc,YAAc+H,UAAUnkB,OAAOye,cAAc4F,OAAO,GAAI,CAE9I,IAAIC,WAAW,EAEf,IAAMC,WAAWJ,UAAUnkB,OAAOyc,gBAAgB+H,MAClD,IAAMC,YAAYN,UAAUnkB,OAAOyc,gBAAgBiI,OAEnD,IAAMC,wBAAwB,WAC5B,OAAO,IAAItnB,SAAQ,SAACC,QAASC,QAC3B,GAAIwP,SAAS6X,aAAc,CAEzBtnB,QAAQ,CACNunB,SAAUV,UAAUnkB,OAAOye,cAAc4F,OAAO,GAAGS,MAAMC,WACzDC,UAAWb,UAAUnkB,OAAOye,cAAc4F,OAAO,GAAGS,MAAMG,kBAEvD,CAIL,IAAMC,gBAAkBf,UAAUnkB,OAAOuf,iBAAiB4F,iBAAiB,GAAGC,cAC9E,IAAMP,SAAqB9X,SAASsY,oBAAsBtY,SAASuY,yBAA4BJ,gBAAgBV,MAAQL,UAAUoB,eAAeR,WAChJ,IAAMC,UAAsBjY,SAASsY,oBAAsBtY,SAASuY,yBAA4BJ,gBAAgBR,OAASP,UAAUoB,eAAeN,YAClJ3nB,QAAQ,CAAEunB,SAAQA,SAAEG,UAASA,iBAKnC,IAAMQ,oBAAoB7jB,aAAY,WACpCgjB,0BAAwBxD,MAAK,SAAAsE,eAC3BC,iCAA+BnB,WAAUE,YAAWgB,cAAcZ,SAAUY,cAAcT,gBAE3F,IAEH,IAAMU,iCAAiC,SAACC,SAAUC,UAAWf,SAAUG,WACrEV,aACA,GAAIA,WAAW,GAAI,CACjBuB,aAAaL,qBAEf,GAAIX,WAAac,UAAYX,YAAcY,UAAW,CACpDzB,UAAUnkB,OAAOyc,gBAAkB,CACjC+H,MAAOK,UAAY,EACnBH,OAAQM,WAAa,GAEvBjJ,MAAKL,YACH,wBACA,CACEqB,SAAUoH,UAAUnkB,OAAO+c,SAC3B1W,SAAU,kBACVyf,SAAUhK,KAAKlJ,UAAUuR,UAAUnkB,OAAOyc,iBAC1CsJ,OAAQ,kBAEV,SAACjsB,MAAOwc,UACN,GAAIxc,MAAO,CACTkgB,OAAOlgB,MAAM,8CAA+CA,WACvD,CACLiiB,MAAK3B,QAAQ7C,UAAU,wBAAyB,CAAC,IAAIkG,6BAAAe,2BAA2BzC,MAAK3B,QAAS+J,UAAUnkB,OAAQ,kBAAmBmkB,UAAUnkB,OAAOyc,gBAAiB,CAAE+H,MAAOmB,SAAUjB,OAAQkB,WAAa,mBAC7MzB,UAAU5M,UAAU,wBAAyB,CAAC,IAAIkG,6BAAAe,2BAA2B2F,UAAWA,UAAUnkB,OAAQ,kBAAmBmkB,UAAUnkB,OAAOyc,gBAAiB,CAAE+H,MAAOmB,SAAUjB,OAAQkB,WAAa,mBACvM7J,MAAK3B,QAAQ4L,cAAc7B,eAGjC0B,aAAaL,+BAa3B3L,SAAA5iB,UAAAgvB,YAAA,WACE/tB,KAAKkiB,QAAU,IAAIiJ,UAAA6C,QAAQhuB,MAC3B,OAAOA,KAAKkiB,SA6BdP,SAAA5iB,UAAAkvB,cAAA,SAAcC,cAAqCC,OAASC,QAE1D,IAAIC,WAEJ,KAAMF,eAAkBA,SAAW,WAAa,CAI9CE,WAAmCF,OAEnCE,WAAa,CACXC,mBAAqBD,WAAWC,cAAgB,YAAeD,WAAWC,YAAcnuB,UACxFmkB,iBAAmBiK,mBAAqB,aAAeF,WAAWG,uBAAuBD,iBAAoBpuB,iBAAqBkuB,WAAW/J,YAAc,YAAe+J,WAAW/J,UAAYnkB,UACjMsuB,kBAAoBJ,WAAWI,aAAe,mBAAwBJ,WAAWI,aAAe,SAAYpD,kBAAAqD,gBAAgBL,WAAWI,YAAcJ,WAAWI,WAAcpD,kBAAAqD,gBAAgBC,OAC9LC,cAAgBP,WAAWO,SAAW,YAAeP,WAAWO,OAAS,KACzEC,oBAAsBR,WAAWQ,eAAiB,YAAeR,WAAWQ,aAAe,KAC3FC,oBAAsBT,WAAWS,eAAiB,YAAeT,WAAWS,aAAe,KAC3FC,kBAAoBR,mBAAqB,aAAeF,WAAWG,uBAAuBD,iBAAoBpuB,iBAAqBkuB,WAAWU,aAAe,YAAeV,WAAWU,WAAa,UACpMP,mBAAqBH,WAAWG,cAAgB,YAAeH,WAAWG,YAAcruB,UACxFqkB,OAAQ6J,WAAW7J,YAEhB,CAIL6J,WAAa,CACXI,WAAYpD,kBAAAqD,gBAAgBC,OAC5BC,OAAQ,KACRC,aAAc,KACdC,aAAc,KACdC,WAAY,WAIhB,IAAM9C,UAAuB,IAAIf,YAAA8D,UAAUd,cAAeG,WAAYruB,MAEtE,IAAIivB,kBACJ,KAAMd,eAAkBA,SAAW,WAAa,CAC9Cc,kBAAoBd,YACf,KAAMC,OAAQ,CACnBa,kBAAoBb,OAGtBnC,UAAUiD,aACPjG,MAAK,WACJ,GAAIgG,oBAAsB9uB,UAAW,CACnC8uB,kBAAkB9uB,WAEpB8rB,UAAU5M,UAAU,gBAAiB,OACpC6J,OAAM,SAACtnB,OACR,GAAIqtB,oBAAsB9uB,UAAW,CACnC8uB,kBAAkBrtB,OAEpBqqB,UAAU5M,UAAU,eAAgB,CAACzd,WAGzC5B,KAAK0rB,WAAWjqB,KAAKwqB,WACrB,OAAOA,WAYTtK,SAAA5iB,UAAAowB,mBAAA,SAAmBjB,cAAqCG,YAAxD,IAAAxK,MAAA7jB,KACE,OAAO,IAAImF,SAAmB,SAACC,QAASC,QAEtC,IAAI4mB,UAEJ,IAAMle,SAAW,SAACnM,OAChB,KAAMA,MAAO,CACXyD,OAAOzD,WACF,CACLwD,QAAQ6mB,aAIZ,KAAMoC,WAAY,CAChBpC,UAAYpI,MAAKoK,cAAcC,cAAeG,WAAYtgB,cACrD,CACLke,UAAYpI,MAAKoK,cAAcC,cAAengB,eAUpD4T,SAAA5iB,UAAAqwB,kBAAA,SAAkBtnB,QAChB,OAAO,IAAImjB,gBAAAtE,cAAc7e,SAQ3B6Z,SAAA5iB,UAAAswB,wBAAA,WAEE,GAAIxa,SAASya,iBAAkB,CAC7B,GAAIza,SAAS0a,mBAAqB1a,SAAS6X,aAAc,CACvD,OAAO,EAET,OAAO,EAKT,GAAI7X,SAAS2a,mBAAqB3a,SAAS4a,yBACzC5a,SAASsY,oBAAsBtY,SAASuY,0BAA4BvY,SAAS6a,kBAC7E7a,SAAS8a,wBAA0B9a,SAAS+a,iBAAmB/a,SAASgb,uBACxEhb,SAAS2T,mBAAqB3T,SAASib,oBAAsBjb,SAASkb,cAAgBlb,SAASmb,mBAC/F,CACA,OAAO,EAIT,OAAO,GAQTrO,SAAA5iB,UAAAkxB,+BAAA,WACE,OAAOpb,SAASqb,kBAOlBvO,SAAA5iB,UAAAoxB,WAAA,WACE,OAAO,IAAIhrB,SAAkB,SAACC,QAASC,QACrCuJ,UAAUwhB,aAAaC,mBAAmBpH,MAAK,SAACqH,oBAC9C,IAAMC,QAAoB,GAG1B,GAAI1b,SAAS2b,yBAA2BC,SAAW,eAAWrG,GAAIqG,UAAO,MAAPA,eAAO,OAAA,EAAPA,QAASC,WAAO,MAAAtG,UAAA,OAAA,EAAAA,GAAEuG,wBAAwB,CAC1GF,QAAQC,QAAQC,uBAAuBC,sBAAsB3H,MAAK,SAAC4H,eACjE,IAAIC,mBAA+B,GACnC,IAAIC,aAAyB,GAC7B,IAAIC,aAAyB,GAC7BF,mBAAqBD,cAAcrM,QAAO,SAACyM,QAAmB,OAAAA,OAAOC,OAAS,gBAC9EH,aAAeT,YAAY9L,QAAO,SAACyM,QAAmB,OAAAA,OAAOC,OAAS,gBACtEF,aAAeV,YAAY9L,QAAO,SAACyM,QAAmB,OAAAA,OAAOC,OAAS,gBACtEH,aAAajN,SAAQ,SAACqN,WAAYnsB,OAChC,IAAKmsB,WAAWxkB,MAAO,CACrB,IAAIA,MAAQ,GACZ,GAAI3H,QAAU,EAAG,CACf2H,MAAQ,oBACH,GAAI3H,QAAU,EAAG,CACtB2H,MAAQ,kBACH,CACLA,MAAQ,iBAEV4jB,QAAQ9uB,KAAK,CACXyvB,KAAMC,WAAWD,KACjBE,SAAUD,WAAWC,SACrBzkB,MAAOA,YAGJ,CACL4jB,QAAQ9uB,KAAK,CACXyvB,KAAMC,WAAWD,KACjBE,SAAUD,WAAWC,SACrBzkB,MAAOwkB,WAAWxkB,YAIxBqkB,aAAalN,SAAQ,SAACqN,WAAYnsB,OAChC,IAAKmsB,WAAWxkB,MAAO,CACrB,IAAIA,MAAQ,GACZ,OAAQ3H,OACN,KAAK,EACH2H,MAAQ,UACR,MACF,KAAK,EACH,IAAM0kB,aAAeP,mBAAmBtM,QAAO,SAAC3M,GAAM,OAAAA,EAAElL,MAAM2kB,SAAS,YAAU,GACjF3kB,MAAQ0kB,aAAeA,aAAa1kB,MAAQ,sBAC5C,MACF,KAAK,EACH,IAAM4kB,WAAaT,mBAAmBtM,QAAO,SAAC3M,GAAM,OAAAA,EAAElL,MAAM2kB,SAAS,YAAU,GAC/E,GAAIC,WAAY,CACd5kB,MAAQ4kB,WAAW5kB,UACd,CACLA,MAAQ,mBAEV,MACF,KAAK,EACH,IAAM6kB,cAAgBV,mBAAmBtM,QAAO,SAAC3M,GAAM,OAAAA,EAAElL,MAAM2kB,SAAS,gBAAc,GACtF3kB,MAAQ6kB,cAAgBA,cAAc7kB,MAAQ,WAC9C,MACF,QACEA,MAAQ,qBACR,MAEJ4jB,QAAQ9uB,KAAK,CACXyvB,KAAMC,WAAWD,KACjBE,SAAUD,WAAWC,SACrBzkB,MAAOA,YAGJ,CACL4jB,QAAQ9uB,KAAK,CACXyvB,KAAMC,WAAWD,KACjBE,SAAUD,WAAWC,SACrBzkB,MAAOwkB,WAAWxkB,YAIxBvH,QAAQmrB,gBAEL,CAGLD,YAAYxM,SAAQ,SAAAqN,YAClB,GAAIA,WAAWD,OAAS,cAAgBC,WAAWD,OAAS,aAAc,CACxEX,QAAQ9uB,KAAK,CACXyvB,KAAMC,WAAWD,KACjBE,SAAUD,WAAWC,SACrBzkB,MAAOwkB,WAAWxkB,YAIxBvH,QAAQmrB,aAETrH,OAAM,SAACtnB,OACRkgB,OAAOlgB,MAAM,wBAAyBA,OACtCyD,OAAOzD,cAsDb+f,SAAA5iB,UAAA0yB,aAAA,SAAa1pB,SAAb,IAAA8b,MAAA7jB,KACE,OAAO,IAAImF,SAAqB,SAACC,QAASC,QAExC,IAAMqsB,sBAAwB,SAACC,oBAAkCC,aAC/D,IAAMC,uBAA2BD,YAAYE,QAAU3xB,UAAa,KAAOyxB,YAAYE,MACvF,IAAMC,eAAyC,CAAED,MAAOD,uBAAwBjF,MAAO,OACvFhe,UAAUwhB,aAAaqB,aAAaM,gBACjC9I,MAAK,SAAA+I,iBACJL,oBAAoBM,SAASD,gBAAgBE,iBAAiB,IAC9D9sB,QAAQusB,wBAETzI,OAAM,SAAAtnB,OACL+vB,oBAAoBO,iBAAiBpO,SAAQ,SAACqO,OAC5CA,MAAMzoB,UAERioB,oBAAoB1E,iBAAiBnJ,SAAQ,SAACqO,OAC5CA,MAAMzoB,UAERrE,OAAOwe,MAAKuO,yBAAyBxwB,MAAOmwB,qBAIlDlO,MAAKwO,yBAAyBtqB,SAASkhB,MAAK,SAAAqJ,yBAE1C,KAAMA,cAAcC,cAAgBD,cAAcE,cAC9CF,cAAcE,cAAcpI,GAAAkI,cAAcV,eAAW,MAAAxH,UAAA,OAAA,EAAAA,GAAEwC,SAAU,SACjE0F,cAAcC,cAAcE,GAAAH,cAAcV,eAAW,MAAAa,UAAA,OAAA,EAAAA,GAAEX,SAAU,MAAO,CAG1E1sB,QAAQye,MAAK6O,yBAAyBJ,cAAe,IAAIK,kBAEpD,CAIL,KAAML,cAAcC,WAAY,QACvBD,cAAcV,YAAahF,MAEpC,KAAM0F,cAAcE,WAAY,QACvBF,cAAcV,YAAaE,MAGpC,IAAIc,4BAA4B,MAChC,UAAW7qB,QAAQymB,cAAgB,SAAU,CAE3C,GAAIzmB,QAAQymB,cAAgB,UAC1BzmB,QAAQymB,cAAgB,UACvB3Z,SAASkb,cAAgBhoB,QAAQymB,YAAYqE,WAAW,WAAa,CAEtED,6BAA6BN,cAAcE,aAAezqB,QAAQumB,cAAgB,MAAQvmB,QAAQumB,cAAgB,OAClH,GAAI1f,UAAUwhB,aAAa,qBAAuBvb,SAASkb,aAAc,CAEvEnhB,UAAUwhB,aAAa,mBAAmB,CAAExD,MAAO,OAChD3D,MAAK,SAAA6J,aACJjP,MAAK6O,yBAAyBJ,cAAeQ,aAC7C,GAAIF,4BAA2B,CAC7BlB,sBAAsBoB,YAAqCR,cAAcV,aACzE,WACK,CACLxsB,QAAQ0tB,iBAGX5J,OAAM,SAAAtnB,OACL,IAAImxB,UAA+BvN,gBAAAS,kBAAkB+M,sBACrD,IAAMC,aAAerxB,MAAMuK,WAC3B9G,OAAO,IAAImgB,gBAAAQ,cAAc+M,UAAWE,kBAExC,WACK,OAGF,GAKT,IAAMlB,eAAiBa,4BAA4B,CAAEhG,MAAO0F,cAAcV,YAAahF,OAAU0F,cAAcV,YAC/GhjB,UAAUwhB,aAAaqB,aAAaM,gBACjC9I,MAAK,SAAA6J,aACJjP,MAAK6O,yBAAyBJ,cAAeQ,aAC7C,GAAIF,4BAA2B,CAC7BlB,sBAAsBoB,YAAqCR,cAAcV,aACzE,WACK,CACLxsB,QAAQ0tB,iBAGX5J,OAAM,SAAAtnB,OACL,IAAImxB,UACJ,IAAME,aAAerxB,MAAMuK,WAC3B,KAAMpE,QAAQymB,cAAgB,UAAW,CACvCuE,UAAYvN,gBAAAS,kBAAkBiN,yBACzB,CACLH,UAAYvN,gBAAAS,kBAAkB+M,sBAEhC3tB,OAAO,IAAImgB,gBAAAQ,cAAc+M,UAAWE,sBAGzC/J,OAAM,SAACtnB,OACRyD,OAAOzD,cAUb+f,SAAA5iB,UAAAo0B,eAAA,WACErR,OAAOqR,kBAcTxR,SAAA5iB,UAAAq0B,yBAAA,SAAyBC,eACvBrzB,KAAK6rB,sBAAwBwH,eAS/B1R,SAAA5iB,UAAAszB,yBAAA,SAAyBiB,qBAAzB,IAAAzP,MAAA7jB,KACE,OAAO,IAAImF,SAAsC,SAACC,QAASC,QAEzD,IAAMitB,cAA8C,CAClDE,WAAYryB,UACZoyB,WAAYpyB,UACZyxB,YAAa,CACXE,MAAO3xB,UACPysB,MAAOzsB,YAGX,IAAMmuB,YAAcgF,oBAAoBhF,YACxC,IAAME,YAAc8E,oBAAoB9E,YAGxC,GAAIF,cAAgB,MAAQA,cAAgB,MAAO,CAEjDgE,cAAcV,YAAaE,MAAQ,MAErC,GAAItD,cAAgB,MAAQA,cAAgB,MAAO,CAEjD8D,cAAcV,YAAahF,MAAQ,MAErC,GAAI0F,cAAcV,YAAaE,QAAU,OAASQ,cAAcV,YAAahF,QAAU,MAAO,CAE5FvnB,OAAO,IAAImgB,gBAAAQ,cAAcR,gBAAAS,kBAAkBsN,oBACzC,+FAIJ,UAAWhF,mBAAqB,aAAeD,uBAAuBC,iBAAkB,CAEtF+D,cAAcE,WAAalE,YAE7B,UAAWC,mBAAqB,aAAeC,uBAAuBD,iBAAkB,CAEtF+D,cAAcC,WAAa/D,YAI7B,GAAIF,cAAgBnuB,UAAW,CAC7BmyB,cAAcV,YAAaE,MAAQ,KAErC,GAAItD,cAAgBruB,UAAW,CAC7BmyB,cAAcV,YAAahF,MAAQ,CACjCN,MAAO,CACLkH,MAAO,KAEThH,OAAQ,CACNgH,MAAO,MAMb,GAAIhF,cAAgB,MAAQA,cAAgB,MAAO,CACjD,KAAM8E,oBAAoBvE,WAAY,CACpC,IAAM0E,eAAiBH,oBAAoBvE,WAAWnU,cAAc9P,MAAM,KAC1E,IAAM4oB,WAAa/zB,OAAO8zB,eAAe,IACzC,IAAME,YAAch0B,OAAO8zB,eAAe,IAC1CnB,cAAcV,YAAahF,MAAQ,CACjCN,MAAO,CACLkH,MAAOE,YAETlH,OAAQ,CACNgH,MAAOG,cAIb,KAAML,oBAAoBhP,UAAW,CACXgO,cAAcV,YAAahF,MAAOtI,UAAY,CAAEkP,MAAOF,oBAAoBhP,YAKvGT,MAAK+P,iCAAiCtB,cAAegB,oBAAqBluB,QAASC,QAEnFD,QAAQktB,mBAOZ3Q,SAAA5iB,UAAA80B,QAAA,SAAQC,iBACN,IAAMC,OAAS,CACbC,UAAW,IACXC,GAAI,CACFC,IAAKl0B,KAAKm0B,MAAQ,cAAgBn0B,KAAKkiB,QAAQW,UAC/CuR,YAAaN,gBACbO,aAAcr0B,KAAKs0B,mBAAmB3wB,KAAK3D,MAC3Cu0B,eAAgBv0B,KAAKw0B,qBAAqB7wB,KAAK3D,MAC/Cy0B,cAAez0B,KAAK00B,oBAAoB/wB,KAAK3D,OAE/C20B,IAAK,CACHC,eAAgB,IAChBC,kBAAmB70B,KAAKkiB,QAAQ4S,oBAAoBnxB,KAAK3D,KAAKkiB,SAC9D6S,qBAAsB/0B,KAAKkiB,QAAQ8S,uBAAuBrxB,KAAK3D,KAAKkiB,SACpE+S,uBAAwBj1B,KAAKkiB,QAAQgT,yBAAyBvxB,KAAK3D,KAAKkiB,SACxEiT,gBAAiBn1B,KAAKkiB,QAAQkT,kBAAkBzxB,KAAK3D,KAAKkiB,SAC1DmT,mBAAoBr1B,KAAKkiB,QAAQoT,qBAAqB3xB,KAAK3D,KAAKkiB,SAChEqT,iBAAkBv1B,KAAKkiB,QAAQsT,mBAAmB7xB,KAAK3D,KAAKkiB,SAC5DuT,iBAAkBz1B,KAAKkiB,QAAQwT,mBAAmB/xB,KAAK3D,KAAKkiB,SAC5DyT,YAAa31B,KAAKkiB,QAAQ0T,aAAajyB,KAAK3D,KAAKkiB,SACjD2T,sBAAuB71B,KAAKkiB,QAAQ4T,wBAAwBnyB,KAAK3D,KAAKkiB,SACtE6T,0BAA2B/1B,KAAKkiB,QAAQ8T,4BAA4BryB,KAAK3D,KAAKkiB,SAC9E+T,2BAA4Bj2B,KAAKkiB,QAAQgU,oCAAoCvyB,KAAK3D,KAAKkiB,SACvFiU,sBAAuBn2B,KAAKkiB,QAAQkU,wBAAwBzyB,KAAK3D,KAAKkiB,SACtEmU,aAAcr2B,KAAKkiB,QAAQoU,iBAAiB3yB,KAAK3D,KAAKkiB,SACtDqU,WAAYv2B,KAAKkiB,QAAQsU,aAAa7yB,KAAK3D,KAAKkiB,WAGpDliB,KAAKy2B,cAAgB,IAAIjL,WAAWkL,QAAQC,cAAc5C,SAM5DpS,SAAA5iB,UAAA63B,QAAA,WACE52B,KAAKy2B,cAAcI,MAAM,KAAM,gCAMjClV,SAAA5iB,UAAAykB,YAAA,SAAYoC,OAAgBC,OAAa9X,UACvC,GAAI8X,QAAUA,kBAAkB/mB,SAAU,CACxCiP,SAAW8X,OACXA,OAAS,GAEX/D,OAAOuB,MAAM,6BAA+BuC,OAAS,cAAgBhC,KAAKlJ,UAAUmL,QAAU,KAC9F7lB,KAAKy2B,cAAc/L,KAAK9E,OAAQC,OAAQ9X,WAM1C4T,SAAA5iB,UAAA+3B,SAAA,WACE,OAAO92B,KAAKm0B,OAMdxS,SAAA5iB,UAAAg4B,UAAA,WACE,OAAO/2B,KAAK2rB,QAMdhK,SAAA5iB,UAAAi4B,YAAA,WACE,OAAOh3B,KAAK4rB,UAMdjK,SAAA5iB,UAAAqzB,yBAAA,SAAyBxwB,MAAOgwB,aAC9B,GAAIhwB,MAAMkB,OAAS,QAAS,CAE1BlB,MAAMkB,KAAOlB,MAAMwI,YAAYtH,KAEjC,IAAIiwB,UAAWE,aACf,OAAQrxB,MAAMkB,KAAK8X,eACjB,IAAK,gBACHmY,UAAYvN,gBAAAS,kBAAkBgR,6BAC9BhE,aAAerxB,MAAMuK,WACrB,OAAO,IAAIqZ,gBAAAQ,cAAc+M,UAAWE,cACtC,IAAK,kBACHF,UAAYvN,gBAAAS,kBAAkBiN,qBAC9BD,aAAerxB,MAAMuK,WACrB,OAAO,IAAIqZ,gBAAAQ,cAAc+M,UAAWE,cACtC,IAAK,uBACH,GAAIrxB,MAAMs1B,WAAWtc,gBAAkB,WAAY,CACjDmY,UAAYvN,gBAAAS,kBAAkBgR,6BAC9BhE,aAAe,qCAA8FrB,YAAYE,MAAOV,SAAY+F,MAAQ,kBAC/I,CACLpE,UAAYvN,gBAAAS,kBAAkBmR,2BAC9BnE,aAAe,uEAAyErxB,MAAMs1B,WAAa,IAE7G,OAAO,IAAI1R,gBAAAQ,cAAc+M,UAAWE,cACtC,IAAK,mBACHF,UAAYvN,gBAAAS,kBAAkBoR,sBAC9BpE,aAAerxB,MAAMuK,WACrB,OAAO,IAAKqZ,gBAAAQ,cAAc+M,UAAWE,cACvC,QACE,OAAO,IAAIzN,gBAAAQ,cAAcR,gBAAAS,kBAAkBqR,iCAAkC11B,MAAMuK,cAOzFwV,SAAA5iB,UAAA2zB,yBAAA,SAAyBJ,cAA6CQ,aACpE,KAAMR,cAAcC,WAAY,CAC9BO,YAAYb,SAASK,cAAcC,YAErC,KAAMD,cAAcE,WAAY,CAC9BM,YAAYb,SAASK,cAAcE,YAErC,OAAOM,aAMCnR,SAAA5iB,UAAA60B,iCAAV,SAA2CtB,cAA6CgB,oBAA0CluB,QAASC,QAA3I,IAAAwe,MAAA7jB,KACE,IAAMsuB,YAAcgF,oBAAoBhF,YACxC,IAAME,YAAc8E,oBAAoB9E,YACxC,UAAWF,cAAgB,SAAU,CACnCgE,cAAcV,YAAaE,MAAQ,CAAEV,SAAU,CAAE+F,MAAO7I,cAG1D,UAAWE,cAAgB,SAAU,CAEnC,IAAKxuB,KAAKu3B,cAAc/I,aAAc,CACpCxuB,KAAKw3B,eAAelF,cAAe9D,iBAE9B,CAIL,IAAKxuB,KAAKiwB,iCAAkC,CAC1C,IAAMruB,MAAQ,IAAI4jB,gBAAAQ,cAAcR,gBAAAS,kBAAkBwR,6BAA8B,4HAA8H5iB,SAAStE,UAAY,IAAMsE,SAASf,cAClPgO,OAAOlgB,MAAMA,OACbyD,OAAOzD,WACF,CAEL,GAAIiT,SAASkb,aAAc,CACzB,IAAM2H,OAAS,UACf,IAAMC,kBAA4BnJ,YAClC,IAAMoJ,iBAAmBD,kBAAkBld,OAAOkd,kBAAkB9sB,QAAQ6sB,QAAUA,OAAOt5B,QACvFk0B,cAAcV,YAAahF,MAAS,CACxCiL,UAAW,CACTC,kBAAmB,UACnBC,oBAAqBH,mBAGzBxyB,QAAQktB,mBAEH,CAEL,KAAMtyB,KAAK6rB,sBAAsBmM,8BAAgCnjB,SAASsY,oBAAsBtY,SAASuY,4BAA8Bxe,UAAUwhB,aAAa,mBAAoB,CAIhL7E,cAAc0M,sBAAqB,SAACr2B,MAAOs2B,mBACzC,KAAMt2B,SAAWs2B,kBAAkBL,WAAaK,kBAAkBL,UAAUC,oBAAsB,SAAU,CAC1G,GAAIl2B,QAAU,qBAAuBA,QAAU,wBAAyB,CACtE,IAAMu2B,QAAQ,IAAI3S,gBAAAQ,cAAcR,gBAAAS,kBAAkB+M,sBAAuB,uDACzElR,OAAOlgB,MAAMu2B,SACb9yB,OAAO8yB,aACF,CACL,IAAMC,YAAcvU,MAAKgI,sBAAsBmM,2BAA4BltB,MAAM,KAAK7F,MAAQ2F,OAC9F2gB,cAAc8M,yBAAyBD,aAAa,SAAA5N,QAClD,GAAIA,SAAW,qBAAsB,CACnC,IAAM8N,QAAQ,IAAI9S,gBAAAQ,cAAcR,gBAAAS,kBAAkBsS,0BAA2B,wCAC7EzW,OAAOlgB,MAAM02B,SACbjzB,OAAOizB,SAET,GAAI9N,SAAW,gBAAiB,CAC9B,IAAMgO,QAAQ,IAAIhT,gBAAAQ,cAAcR,gBAAAS,kBAAkBwS,+BAAyC5U,MAAKgI,sBAAsBmM,4BACtHlW,OAAOlgB,MAAM42B,SACbnzB,OAAOmzB,aAGX,YAEG,CACLlG,cAAcV,YAAahF,MAAQsL,kBACnC9yB,QAAQktB,mBAGZ,WACK,CAEL,GAAI1jB,UAAUwhB,aAAa,mBAAoB,CAE7ChrB,QAAQktB,mBACH,CAEL,IAAMoG,cAAiB7jB,SAASsY,oBAAsBtY,SAASuY,yBAA4BkG,oBAAoB9E,YAAcruB,UAE7HmrB,kBAAkBqN,YAAYD,eAAe,SAAC92B,MAAOg3B,SAAUV,mBAC7D,KAAMt2B,MAAO,CACX,GAAIA,QAAU,gBAAiB,CAC7B,IAAMi3B,eAAiBhV,MAAKgI,sBAAsBmM,2BAA6BnU,MAAKgI,sBAAsBmM,2BACxG,oGACF,IAAMl2B,IAAM,IAAI0jB,gBAAAQ,cAAcR,gBAAAS,kBAAkBwS,+BAAgCI,cAChF/W,OAAOlgB,MAAME,KACbuD,OAAOvD,UACF,GAAIF,QAAU,qBAAsB,CACzC,IAAME,IAAM,IAAI0jB,gBAAAQ,cAAcR,gBAAAS,kBAAkBsS,0BAA2B,wCAC3EzW,OAAOlgB,MAAME,KACbuD,OAAOvD,UACF,GAAIF,QAAU,oBAAqB,CACxC,IAAME,IAAM,IAAI0jB,gBAAAQ,cAAcR,gBAAAS,kBAAkB+M,sBAAuB,uDACvElR,OAAOlgB,MAAME,KACbuD,OAAOvD,SACF,CACL,IAAMA,IAAM,IAAI0jB,gBAAAQ,cAAcR,gBAAAS,kBAAkB6S,cAAe,6CAC/DhX,OAAOlgB,MAAME,KACbggB,OAAOlgB,MAAMA,OACbyD,OAAOvD,UAEJ,CACLwwB,cAAcV,YAAahF,MAAQsL,kBAAkBtL,MACrDxnB,QAAQktB,mBAGZ,cAYJ3Q,SAAA5iB,UAAAy4B,eAAV,SAAyBlF,cAA6C9D,aACpE,IAAK8D,cAAcV,YAAahF,MAAO,CACrC0F,cAAcV,YAAahF,MAAQ,GAEb0F,cAAcV,YAAahF,MAAO,YAAc,CAAEuK,MAAO3I,cAM3E7M,SAAA5iB,UAAAu1B,mBAAR,WACExS,OAAOriB,KAAK,6BACZ,GAAIO,KAAK+4B,kBAAmB,CAC1B/4B,KAAKkiB,QAAQ8W,iBAAiB,yBACzB,CACLC,MAAM,2CAIFtX,SAAA5iB,UAAAy1B,qBAAR,WACE1S,OAAOriB,KAAK,4CACZ,IAAKO,KAAK+4B,kBAAmB,CAC3BE,MAAM,6CACD,CACLj5B,KAAKkiB,QAAQ7C,UAAU,eAAgB,MAInCsC,SAAA5iB,UAAA21B,oBAAR,WAAA,IAAA7Q,MAAA7jB,KACE8hB,OAAOriB,KAAK,yBACZ,GAAIO,KAAK+4B,kBAAmB,CAC1B,KAAM/4B,KAAKkiB,QAAQ8B,WAAY,CAC7BhkB,KAAKwjB,YAAY,UAAW,CAAEX,UAAW7iB,KAAKkiB,QAAQ8B,WAAWpB,eAAgB,SAAChhB,MAAOwc,UACvF,KAAMxc,MAAO,CACXkgB,OAAOlgB,MAAMA,OACbkgB,OAAOriB,KAAK,2MACZokB,MAAK3B,QAAQ8W,iBAAiB,qBAC9BnV,MAAK4S,cAAcI,MAAM,KAAM,0BAC1B,CACLhT,MAAK4S,cAAcyC,YACnBrV,MAAK3B,QAAQiX,gCAGZ,CACLrX,OAAOriB,KAAK,uEAEZ,IAAM25B,uBAAyB,IAAIhO,2BAAAiO,yBAAyBr5B,KAAKkiB,QAAS,qBAC1EliB,KAAKkiB,QAAQgD,GAAG7F,UAAU,sBAAuB,CAAC+Z,yBAClDA,uBAAuBE,2BAEpB,CACLL,MAAM,2CAIFtX,SAAA5iB,UAAAg6B,gBAAR,WACE,GAAI/4B,KAAKkiB,UAAY/hB,WAAaH,KAAKkiB,mBAAmBiJ,UAAA6C,QAAS,CACjE,OAAO,SACF,CACLlM,OAAOriB,KAAK,8BACZ,OAAO,QAIHkiB,SAAA5iB,UAAAw4B,cAAR,SAAsB/I,aACpB,OAAOA,cAAgB,UACrBA,cAAgB,UACf3Z,SAASkb,cAAgBvB,YAAYqE,WAAW,YAGvD,OAAAlR,SAz9BA,GAAazjB,QAAAyjB,SAAAA,ioCC/Cb,IAAAwJ,UAAAvtB,QAAA,aACA,IAAAgkB,SAAAhkB,QAAA,YACA,IAAA27B,gBAAA37B,QAAA,mBAIA,IAAA47B,cAAA57B,QAAA,0CACA,IAAA2nB,6BAAA3nB,QAAA,yDACA,IAAA67B,oBAAA77B,QAAA,gDACA,IAAA4nB,gBAAA5nB,QAAA,2CAEA,IAAAikB,iBAAAjkB,QAAA,6CACA,IAAA8oB,WAAA9oB,QAAA,sCAKA,IAAMkkB,OAAyBD,iBAAAE,eAAeC,cAK9C,IAAInN,SAeJ,IAAAma,UAAA,SAAA0K,QAA+BC,UAAA3K,UAAA0K,QAyC3B,SAAA1K,UAAY4K,OAA8BvL,WAAiC9K,UAA3E,IAAAM,MACI6V,OAAAv7B,KAAA6B,KAAM,IAAI4hB,SAAA6C,SAAUlB,SAASrB,QAAWqB,SAASrB,QAAU,IAAIiJ,UAAA6C,QAAQzK,UAAW,CAAE+P,oBAAqBjF,WAAYwL,iBAAkB,KAAOD,SAAO55B,KArCzJ6jB,MAAAiW,cAAgB,MAKhBjW,MAAAkW,qBAAuB,MAOflW,MAAAmW,aAAe,MA0BnBnlB,SAAW6R,WAAAG,cAAc7E,cACzB6B,MAAKwK,WAAaA,WAClBxK,MAAKN,SAAWA,SAEhBM,MAAK/b,OAAOod,GAAGhiB,GAAG,0BAA0B,SAAC2qB,QACzChK,MAAK/b,OAAOokB,uBAAyB,MACrC,IAAM+N,YAAc,IAAIT,cAAAU,YAAY,KAAMrW,MAAM,kBAAmBA,MAAK/b,OAAQ+lB,QAChFhK,MAAKxE,UAAU,kBAAmB,CAAC4a,cACnCA,YAAYX,sCAsBpBtK,UAAAjwB,UAAA8vB,aAAA,SAAahvB,OAAb,IAAAgkB,MAAA7jB,KACI,GAAIA,KAAK8H,OAAOqc,cAAgBtkB,MAAO,CACnC,IAAMs6B,oBAAmCn6B,KAAK8H,OAAOsyB,kBAAoBp6B,KAAK8H,OAAOuyB,uCAA0Cr6B,KAAK8H,OAAOuf,iBAC3I8S,oBAAoBjI,iBAAiBpO,SAAQ,SAACqO,OAC1CA,MAAMmI,QAAUz6B,SAEpB,KAAMG,KAAKkiB,WAAaliB,KAAK8H,OAAO+c,SAAU,CAC1C7kB,KAAKkiB,QAAQqB,SAASC,YAClB,wBACA,CACIqB,SAAU7kB,KAAK8H,OAAO+c,SACtB1W,SAAU,cACVyf,SAAU/tB,MACVguB,OAAQ,iBAEZ,SAACjsB,MAAOwc,UACJ,GAAIxc,MAAO,CACPkgB,OAAOlgB,MAAM,8CAA+CA,WACzD,CACHiiB,MAAK3B,QAAQ7C,UAAU,wBAAyB,CAAC,IAAIkG,6BAAAe,2BAA2BzC,MAAK3B,QAAS2B,MAAK/b,OAAQ,cAAejI,OAAQA,MAAO,kBACzIgkB,MAAKxE,UAAU,wBAAyB,CAAC,IAAIkG,6BAAAe,2BAA2BzC,MAAMA,MAAK/b,OAAQ,cAAejI,OAAQA,MAAO,kBACzHgkB,MAAK3B,QAAQ4L,cAAcjK,MAAK/b,OAAOye,mBAIvDvmB,KAAK8H,OAAOqc,YAActkB,MAC1BiiB,OAAOoB,KAAK,oBAAsBrjB,MAAQ,YAAc,eAAiB,uBAsBjFmvB,UAAAjwB,UAAA+vB,aAAA,SAAajvB,OAAb,IAAAgkB,MAAA7jB,KACI,GAAIA,KAAK8H,OAAOsc,cAAgBvkB,MAAO,CACnC,IAAMs6B,oBAAmCn6B,KAAK8H,OAAOsyB,kBAAoBp6B,KAAK8H,OAAOuyB,uCAA0Cr6B,KAAK8H,OAAOuf,iBAC3I8S,oBAAoBlN,iBAAiBnJ,SAAQ,SAACqO,OAC1CA,MAAMmI,QAAUz6B,SAEpB,KAAMG,KAAKkiB,WAAaliB,KAAK8H,OAAO+c,SAAU,CAC1C7kB,KAAKkiB,QAAQqB,SAASC,YAClB,wBACA,CACIqB,SAAU7kB,KAAK8H,OAAO+c,SACtB1W,SAAU,cACVyf,SAAU/tB,MACVguB,OAAQ,iBAEZ,SAACjsB,MAAOwc,UACJ,GAAIxc,MAAO,CACPkgB,OAAOlgB,MAAM,8CAA+CA,WACzD,CACHiiB,MAAK3B,QAAQ7C,UAAU,wBAAyB,CAAC,IAAIkG,6BAAAe,2BAA2BzC,MAAK3B,QAAS2B,MAAK/b,OAAQ,cAAejI,OAAQA,MAAO,kBACzIgkB,MAAKxE,UAAU,wBAAyB,CAAC,IAAIkG,6BAAAe,2BAA2BzC,MAAMA,MAAK/b,OAAQ,cAAejI,OAAQA,MAAO,kBACzHgkB,MAAK3B,QAAQ4L,cAAcjK,MAAK/b,OAAOye,mBAIvDvmB,KAAK8H,OAAOsc,YAAcvkB,MAC1BiiB,OAAOoB,KAAK,oBAAsBrjB,MAAQ,YAAc,eAAiB,uBAQjFmvB,UAAAjwB,UAAAw7B,kBAAA,SAAkB16B,OACdA,MAASA,QAAUM,UAAaN,MAAQ,KACxCG,KAAK+5B,qBAAuBl6B,MAC5BG,KAAK8H,OAAO0yB,oBAAoB36B,QAOpCmvB,UAAAjwB,UAAAmE,GAAA,SAAG3B,KAAcU,SAAjB,IAAA4hB,MAAA7jB,KACI05B,OAAA36B,UAAMmE,GAAE/E,KAAA6B,KAACuB,KAAMU,SACf,GAAIV,OAAS,gBAAiB,CAC1B,KAAMvB,KAAK8H,QAAU9H,KAAK8H,OAAOokB,uBAAwB,CACrDlsB,KAAKqf,UAAU,gBAAiB,CAAC,IAAIma,cAAAU,YAAY,MAAOl6B,KAAM,gBAAiBA,KAAK8H,OAAQ,UACzF,CACH9H,KAAK8H,OAAOod,GAAGhiB,GAAG,+BAA+B,WAC7C2gB,MAAKxE,UAAU,gBAAiB,CAAC,IAAIma,cAAAU,YAAY,MAAOrW,MAAM,gBAAiBA,MAAK/b,OAAQ,UAIxG,GAAIvG,OAAS,qBAAsB,CAC/B,GAAIvB,KAAK8H,OAAOsyB,mBAAqBp6B,KAAKmsB,OAAO,IAAMnsB,KAAKmsB,OAAO,GAAGS,OAClE5sB,KAAKmsB,OAAO,GAAGS,MAAM6N,YAAc,GACnCz6B,KAAKmsB,OAAO,GAAGS,MAAM8N,SAAW,OAChC16B,KAAKmsB,OAAO,GAAGS,MAAM+N,QAAU,OAC/B36B,KAAKmsB,OAAO,GAAGS,MAAMrC,aAAe,EAAG,CACvCvqB,KAAKqf,UAAU,qBAAsB,CAAC,IAAIoa,oBAAAmB,kBAAkB56B,KAAKmsB,OAAO,GAAGS,MAAO5sB,KAAM,yBAGhG,GAAIuB,OAAS,gBAAiB,CAC1B,GAAIvB,KAAK85B,cAAe,CACpB95B,KAAKqf,UAAU,gBAAiB,KAGxC,GAAI9d,OAAS,eAAgB,CACzB,GAAIvB,KAAKg6B,aAAc,CACnBh6B,KAAKqf,UAAU,eAAgB,KAGvC,OAAOrf,MAOXgvB,UAAAjwB,UAAAkB,KAAA,SAAKsB,KAAcU,SAAnB,IAAA4hB,MAAA7jB,KACI05B,OAAA36B,UAAMkB,KAAI9B,KAAA6B,KAACuB,KAAMU,SACjB,GAAIV,OAAS,gBAAiB,CAC1B,KAAMvB,KAAK8H,QAAU9H,KAAK8H,OAAOokB,uBAAwB,CACrDlsB,KAAKqf,UAAU,gBAAiB,CAAC,IAAIma,cAAAU,YAAY,MAAOl6B,KAAM,gBAAiBA,KAAK8H,OAAQ,UACzF,CACH9H,KAAK8H,OAAOod,GAAGjlB,KAAK,+BAA+B,WAC/C4jB,MAAKxE,UAAU,gBAAiB,CAAC,IAAIma,cAAAU,YAAY,MAAOrW,MAAM,gBAAiBA,MAAK/b,OAAQ,UAIxG,GAAIvG,OAAS,qBAAsB,CAC/B,GAAIvB,KAAK8H,OAAOsyB,mBAAqBp6B,KAAKmsB,OAAO,IAAMnsB,KAAKmsB,OAAO,GAAGS,OAClE5sB,KAAKmsB,OAAO,GAAGS,MAAM6N,YAAc,GACnCz6B,KAAKmsB,OAAO,GAAGS,MAAM8N,SAAW,OAChC16B,KAAKmsB,OAAO,GAAGS,MAAM+N,QAAU,OAC/B36B,KAAKmsB,OAAO,GAAGS,MAAMrC,aAAe,EAAG,CACvCvqB,KAAKqf,UAAU,qBAAsB,CAAC,IAAIoa,oBAAAmB,kBAAkB56B,KAAKmsB,OAAO,GAAGS,MAAO5sB,KAAM,yBAGhG,GAAIuB,OAAS,gBAAiB,CAC1B,GAAIvB,KAAK85B,cAAe,CACpB95B,KAAKqf,UAAU,gBAAiB,KAGxC,GAAI9d,OAAS,eAAgB,CACzB,GAAIvB,KAAKg6B,aAAc,CACnBh6B,KAAKqf,UAAU,eAAgB,KAGvC,OAAOrf,MAiBXgvB,UAAAjwB,UAAA87B,aAAA,SAAa1I,OAAb,IAAAtO,MAAA7jB,KAEI,IAAM86B,wBAA0B,WAC5B,IAAMhI,YAA2BjP,MAAK/b,OAAOsyB,kBAAoBvW,MAAK/b,OAAOuyB,uCAA0CxW,MAAK/b,OAAOuf,iBACnI,IAAI0T,aACJ,GAAI5I,MAAMjB,OAAS,QAAS,CACxB6J,aAAejI,YAAY7F,iBAAiB,OACzC,CACH8N,aAAejI,YAAYZ,iBAAiB,GAEhDY,YAAYkI,YAAYD,cACxBA,aAAarxB,OACbopB,YAAYb,SAASE,OACrBtO,MAAK3B,QAAQ4L,cAAcjK,MAAK/b,OAAOye,cAAe,EAAG,KAAM,IAGnE,OAAO,IAAIphB,SAAQ,SAACC,QAASC,QACzB,GAAIwe,MAAK/b,OAAOokB,uBAAwB,CAEpC,IAAM+O,QAA0BpX,MAAK/b,OAAOozB,uBAAuBC,aACnE,IAAIC,YAAM,EACV,GAAIjJ,MAAMjB,OAAS,QAAS,CACxBkK,OAASH,QAAQI,MAAK,SAAApiB,GAAK,QAAEA,EAAEkZ,OAASlZ,EAAEkZ,MAAMjB,OAAS,WACzD,IAAKkK,OAAQ,CACT/1B,OAAO,IAAItH,MAAM,kGAElB,GAAIo0B,MAAMjB,OAAS,QAAS,CAC/BkK,OAASH,QAAQI,MAAK,SAAApiB,GAAK,QAAEA,EAAEkZ,OAASlZ,EAAEkZ,MAAMjB,OAAS,WACzD,IAAKkK,OAAQ,CACT/1B,OAAO,IAAItH,MAAM,iGAElB,CACHsH,OAAO,IAAItH,MAAM,sBAAwBo0B,MAAMjB,OAE7CkK,OAAQP,aAAa1I,OAAOlJ,MAAK,WACnC6R,0BACA11B,aACD8jB,OAAM,SAAAtnB,OACLyD,OAAOzD,cAER,CAEHk5B,0BACA11B,eAUZ4pB,UAAAjwB,UAAAmwB,WAAA,WAAA,IAAArL,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QAEzB,IAAIusB,YAAsC,GAC1C,IAAIG,eAAyC,GAC7C,IAAMuJ,mBAAqB,KAC3B,IAAIC,UAEJ,IAAMC,cAAgB,SAACC,eACnB5X,MAAKmW,aAAe,KACpBnW,MAAKiW,cAAgB,MACrBz0B,OAAOo2B,gBAGX,IAAMC,gBAAkB,SAAC5I,aACrBjP,MAAKiW,cAAgB,KACrBjW,MAAKmW,aAAe,MAEpB,UAAWzL,mBAAqB,aAAe1K,MAAKwK,WAAWC,uBAAuBC,iBAAkB,CACpGuE,YAAYkI,YAAYlI,YAAYZ,iBAAiB,IACrDY,YAAYb,SAA4BpO,MAAKwK,WAAWC,aAG5D,UAAWC,mBAAqB,aAAe1K,MAAKwK,WAAWG,uBAAuBD,iBAAkB,CACpGuE,YAAYkI,YAAYlI,YAAY7F,iBAAiB,IACrD6F,YAAYb,SAA4BpO,MAAKwK,WAAWG,aAI5D,KAAMsE,YAAYZ,iBAAiB,GAAI,CACnC,IAAMoI,QAAWzW,MAAK/b,OAAOqc,cAAgBhkB,WAAa0jB,MAAK/b,OAAOqc,cAAgB,KAAQN,MAAK/b,OAAOqc,cAAgBN,MAAK/b,OAAOwb,mBAAmBgQ,oBAAoBzE,aAC7KiE,YAAYZ,iBAAiB,GAAGoI,QAAUA,QAE9C,KAAMxH,YAAY7F,iBAAiB,GAAI,CACnC,IAAMqN,QAAWzW,MAAK/b,OAAOsc,cAAgBjkB,WAAa0jB,MAAK/b,OAAOsc,cAAgB,KAAQP,MAAK/b,OAAOsc,cAAgBP,MAAK/b,OAAOwb,mBAAmBgQ,oBAAoBxE,aAC7KgE,YAAY7F,iBAAiB,GAAGqN,QAAUA,QAG9CzW,MAAK8X,yBAAyB7I,aAE9B,IAAKjP,MAAK/b,OAAOsyB,kBAAmB,CAGhCvW,MAAK/b,OAAO8zB,mCAET/X,MAAKgY,kBAEZ,GAAIhY,MAAK/b,OAAOg0B,cAAe,CAC3B,IAAKjY,MAAK/b,OAAOi0B,eAAgB,CAE7B,GAAIlnB,SAAS6X,cAAgB7X,SAAS2T,kBAAmB,CAIrD3E,MAAKwJ,eAAejE,MAAMC,QAAU,OACpC1Z,SAAS2Z,KAAKV,YAAY/E,MAAKwJ,gBAE/B,IAAM2O,qBAAqB,WACvBnY,MAAK/b,OAAOyc,gBAAkB,CAC1B+H,MAAOzI,MAAKwJ,eAAeR,WAC3BL,OAAQ3I,MAAKwJ,eAAeN,aAEhClJ,MAAK/b,OAAOm0B,4BAA8B,KAC1CpY,MAAK/b,OAAOod,GAAG7F,UAAU,0BAA2B,IACpD1P,SAAS2Z,KAAKK,YAAY9F,MAAKwJ,iBAGnC,IAAI6O,WACJrY,MAAKwJ,eAAeznB,iBAAiB,kBAAkB,WACnD,GAAIie,MAAKwJ,eAAeR,aAAe,EAAG,CACtCqP,WAAWzyB,aAAY,WACnB,GAAIoa,MAAKwJ,eAAeR,aAAe,EAAG,CACtCsP,cAAcD,YACdF,0BAEL,QACA,CACHA,+BAGL,CAIG,IAAA5R,GAAoBvG,MAAKuY,mBAAmBtJ,aAA1CxG,MAAKlC,GAAAkC,MAAEE,OAAMpC,GAAAoC,OAErB,GAAI3X,SAASmX,kBAAqBtkB,OAAO20B,YAAc30B,OAAO40B,WAAa,CAEvEzY,MAAK/b,OAAOyc,gBAAkB,CAC1B+H,MAAOE,QAAU,EACjBA,OAAQF,OAAS,OAElB,CACHzI,MAAK/b,OAAOyc,gBAAkB,CAC1B+H,MAAOA,OAAS,EAChBE,OAAQA,QAAU,GAG1B3I,MAAK/b,OAAOm0B,4BAA8B,KAC1CpY,MAAK/b,OAAOod,GAAG7F,UAAU,0BAA2B,SAErD,CAEHwE,MAAKwJ,eAAeznB,iBAAiB,kBAAkB,WACnDie,MAAK/b,OAAOyc,gBAAkB,CAC1B+H,MAAOzI,MAAKwJ,eAAeR,WAC3BL,OAAQ3I,MAAKwJ,eAAeN,aAEhClJ,MAAK0Y,0BAA4B9yB,aAAY,WACzC,IAAMujB,gBAAkB8F,YAAY7F,iBAAiB,GAAGC,cACxD,IAAMP,SAAY9X,SAAS2a,mBAAqB3a,SAAS6a,iBAAoB7L,MAAKwJ,eAAeR,WAAaG,gBAAgBV,MAC9H,IAAMQ,UAAajY,SAAS2a,mBAAqB3a,SAAS6a,iBAAoB7L,MAAKwJ,eAAeN,YAAcC,gBAAgBR,OAChI,GAAI3I,MAAK/b,OAAOokB,yBACXS,WAAa9I,MAAK/b,OAAOyc,gBAAgB+H,OACtCQ,YAAcjJ,MAAK/b,OAAOyc,gBAAgBiI,QAAS,CACvD,IAAMgQ,WAAW,CAAElQ,MAAOzI,MAAK/b,OAAOyc,gBAAgB+H,MAAOE,OAAQ3I,MAAK/b,OAAOyc,gBAAgBiI,QACjG3I,MAAK/b,OAAOyc,gBAAkB,CAC1B+H,MAAOK,UAAY,EACnBH,OAAQM,WAAa,GAEzBjJ,MAAK3B,QAAQqB,SAASC,YAClB,wBACA,CACIqB,SAAUhB,MAAK/b,OAAO+c,SACtB1W,SAAU,kBACVyf,SAAUhK,KAAKlJ,UAAUmJ,MAAK/b,OAAOyc,iBACrCsJ,OAAQ,kBAEZ,SAACjsB,MAAOwc,UACJ,GAAIxc,MAAO,CACPkgB,OAAOlgB,MAAM,8CAA+CA,WACzD,CACHiiB,MAAK3B,QAAQ7C,UAAU,wBAAyB,CAAC,IAAIkG,6BAAAe,2BAA2BzC,MAAK3B,QAAS2B,MAAK/b,OAAQ,kBAAmB+b,MAAK/b,OAAOyc,gBAAiBiY,WAAU,mBACrK3Y,MAAKxE,UAAU,wBAAyB,CAAC,IAAIkG,6BAAAe,2BAA2BzC,MAAMA,MAAK/b,OAAQ,kBAAmB+b,MAAK/b,OAAOyc,gBAAiBiY,WAAU,mBACrJ3Y,MAAK3B,QAAQ4L,cAAcjK,MAAK/b,OAAOye,sBAIxD,KACH1C,MAAK/b,OAAOm0B,4BAA8B,KAC1CpY,MAAK/b,OAAOod,GAAG7F,UAAU,0BAA2B,YAGzD,CACHwE,MAAK/b,OAAOm0B,4BAA8B,KAC1CpY,MAAK/b,OAAOod,GAAG7F,UAAU,0BAA2B,IAExDja,WAGJ,IAAMq3B,gBAAkB,SAAC3J,YAA0BjB,wBAC/ChO,MAAK6Y,2BAA2BnB,UAAWD,oBAC3C,GAAIzX,MAAK/b,OAAOi0B,gBAAkBlY,MAAK/b,OAAO60B,cAAe,CAEzD5K,eAAeD,MAAQD,uBACvBE,eAAenF,MAAQ,MACvB2O,UAAYhgB,KAAKC,MACjBqI,MAAK+Y,yBAAyBtB,oBAE9B1sB,UAAUwhB,aAAaqB,aAAaM,gBAC/B9I,MAAK,SAAA+I,iBACFnO,MAAK6Y,2BAA2BnB,UAAWD,oBAC3CxI,YAAYb,SAASD,gBAAgBE,iBAAiB,IACtDwJ,gBAAgB5I,gBAEnB5J,OAAM,SAAAtnB,OACHiiB,MAAK6Y,2BAA2BnB,UAAWD,oBAC3CxI,YAAYZ,iBAAiBpO,SAAQ,SAACqO,OAClCA,MAAMzoB,UAEVopB,YAAY7F,iBAAiBnJ,SAAQ,SAACqO,OAClCA,MAAMzoB,UAEV8xB,cAAc3X,MAAKN,SAAS6O,yBAAyBxwB,MAAOgwB,cAC5D,cAEL,CACH8J,gBAAgB5I,eAIxB,IAAM+J,cAAgB,SAAAj7B,OAClBkgB,OAAOlgB,MAAMA,OACbiiB,MAAK6Y,2BAA2BnB,UAAWD,oBAC3C,GAAI15B,MAAMkB,OAAS,QAAS,CAExBlB,MAAMkB,KAAOlB,MAAMwI,YAAYtH,KAEnC,IAAIiwB,UAAWE,aACf,OAAQrxB,MAAMkB,KAAK8X,eACf,IAAK,gBACDhM,UAAUwhB,aAAaqB,aAAa,CAChCK,MAAO,MACPlF,MAAOgF,YAAYhF,QAElB3D,MAAK,SAAA6J,aACFA,YAAY7F,iBAAiBnJ,SAAQ,SAACqO,OAClCA,MAAMzoB,UAEVqpB,UAAYvN,gBAAAS,kBAAkBgR,6BAC9BhE,aAAerxB,MAAMuK,WACrBqvB,cAAc,IAAIhW,gBAAAQ,cAAc+M,UAAWE,kBAC5C/J,OAAM,SAAA7rB,GACL01B,UAAYvN,gBAAAS,kBAAkB6W,6BAC9B7J,aAAerxB,MAAMuK,WACrBqvB,cAAc,IAAIhW,gBAAAQ,cAAc+M,UAAWE,kBAEnD,MACJ,IAAK,kBACDF,UAAYlP,MAAK/b,OAAOi0B,eAAiBvW,gBAAAS,kBAAkB+M,sBAAwBxN,gBAAAS,kBAAkBiN,qBACrGD,aAAerxB,MAAMuK,WACrBqvB,cAAc,IAAIhW,gBAAAQ,cAAc+M,UAAWE,eAC3C,MACJ,IAAK,uBACDrkB,UAAUwhB,aAAaqB,aAAa,CAChCK,MAAO,MACPlF,MAAOgF,YAAYhF,QAElB3D,MAAK,SAAA6J,aACFA,YAAY7F,iBAAiBnJ,SAAQ,SAACqO,OAClCA,MAAMzoB,UAEV,GAAI9H,MAAMs1B,WAAWtc,gBAAkB,WAAY,CAC/CmY,UAAYvN,gBAAAS,kBAAkBgR,6BAC9BhE,aAAe,qCAA8FrB,YAAYE,MAAOV,SAAY+F,MAAQ,kBACjJ,CACHpE,UAAYvN,gBAAAS,kBAAkBmR,2BAC9BnE,aAAe,uEAAyErxB,MAAMs1B,WAAa,IAE/GsE,cAAc,IAAIhW,gBAAAQ,cAAc+M,UAAWE,kBAC5C/J,OAAM,SAAA7rB,GACL,GAAIuE,MAAMs1B,WAAWtc,gBAAkB,WAAY,CAC/CmY,UAAYvN,gBAAAS,kBAAkB6W,6BAC9B7J,aAAe,qCAA8FrB,YAAYhF,MAAOwE,SAAY+F,MAAQ,kBACjJ,CACHpE,UAAYvN,gBAAAS,kBAAkBmR,2BAC9BnE,aAAe,uEAAyErxB,MAAMs1B,WAAa,IAE/GsE,cAAc,IAAIhW,gBAAAQ,cAAc+M,UAAWE,kBAEnD,MACJ,IAAK,aACL,IAAK,mBACDF,UAAYvN,gBAAAS,kBAAkBoR,sBAC9BpE,aAAerxB,MAAMuK,WACrBqvB,cAAc,IAAIhW,gBAAAQ,cAAc+M,UAAWE,eAC3C,MACJ,QACIF,UAAYvN,gBAAAS,kBAAkB6S,cAC9B7F,aAAerxB,MAAMuK,WACrBqvB,cAAc,IAAIhW,gBAAAQ,cAAc+M,UAAWE,eAC3C,QAIZpP,MAAKN,SAAS8O,yBAAyBxO,MAAKwK,YACvCpF,MAAK,SAAAqJ,yBAEF,KAAMA,cAAcC,cAAgBD,cAAcE,cAC5CF,cAAcE,cAAcpI,GAAAkI,cAAcV,eAAW,MAAAxH,UAAA,OAAA,EAAAA,GAAEwC,SAAU,SACjE0F,cAAcC,cAAcE,GAAAH,cAAcV,eAAW,MAAAa,UAAA,OAAA,EAAAA,GAAEX,SAAU,MAAO,CAE1E4J,gBAAgB7X,MAAKN,SAASmP,yBAAyBJ,cAAe,IAAIK,cAE1E,OAGJf,YAAcU,cAAcV,YAE5B,IAAMmL,sBAAwB,CAC1BlD,iBAAkBjI,YAClB0B,oBAAqBzP,MAAKwK,YAE9BxK,MAAK/b,OAAOk1B,yBAAyBD,uBAErC,IAAMlL,uBAA2BD,YAAYE,QAAU3xB,UAAa,KAAOyxB,YAAYE,MACvFC,eAAeD,MAAQjO,MAAK/b,OAAOi0B,eAAiB,MAAQlK,uBAC5DE,eAAenF,MAAQgF,YAAYhF,MACnC2O,UAAYhgB,KAAKC,MACjBqI,MAAK+Y,yBAAyBtB,oBAE9B,GAAIzX,MAAK/b,OAAOi0B,gBAAkBntB,UAAUwhB,aAAa,qBAAuBvb,SAASkb,aAAc,CACnGnhB,UAAUwhB,aAAa,mBAAmB,CAAExD,MAAO,OAC9C3D,MAAK,SAAA6J,aACFjP,MAAKN,SAASmP,yBAAyBJ,cAAeQ,aACtD2J,gBAAgB3J,YAAajB,2BAEhC3I,OAAM,SAAAtnB,OACHi7B,cAAcj7B,cAEnB,CACHgN,UAAUwhB,aAAaqB,aAAaM,gBAC/B9I,MAAK,SAAA6J,aACFjP,MAAKN,SAASmP,yBAAyBJ,cAAeQ,aACtD2J,gBAAgB3J,YAAajB,2BAEhC3I,OAAM,SAAAtnB,OACHi7B,cAAcj7B,cAK7BsnB,OAAM,SAACtnB,OACJ45B,cAAc55B,cAQ9BotB,UAAAjwB,UAAAq9B,mBAAA,SAAmBtJ,aACf,OAAOA,YAAY7F,iBAAiB,GAAGC,eAM3C8B,UAAAjwB,UAAAk+B,8BAAA,WACI,GAAIj9B,KAAKklB,GAAGjH,aAAa,iBAAiB7f,OAAS,EAAG,CAClD4B,KAAKk9B,6BAOblO,UAAAjwB,UAAA48B,yBAAA,SAAyB7I,aACrB9yB,KAAKqtB,eAAiB1d,SAAS2Y,cAAc,SAE7C,GAAIzT,SAAS2T,kBAAmB,CAC5BxoB,KAAKqtB,eAAe5E,aAAa,cAAe,QAGpDzoB,KAAK8H,OAAOq1B,eAAerK,aAE3B,KAAM9yB,KAAK67B,kBAAmB,CAC1B77B,KAAKo9B,mBAAmBp9B,KAAK67B,kBAAkB3N,cAAgCluB,KAAKquB,WAAWI,YAGnGzuB,KAAKqtB,eAAegQ,UAAYvK,aAM5B9D,UAAAjwB,UAAA69B,yBAAR,SAAiCU,UAAjC,IAAAzZ,MAAA7jB,KACIA,KAAKu9B,wBAA0BzzB,YAAW,WACtC+Z,MAAKxE,UAAU,qBAAsB,MACtCie,WAGCtO,UAAAjwB,UAAA29B,2BAAR,SAAmCnB,UAAmB+B,UAClD3P,aAAa3tB,KAAKu9B,yBAClB,GAAKhiB,KAAKC,MAAQ+f,UAAa+B,SAAU,CAErCt9B,KAAKqf,UAAU,qBAAsB,MAIjD,OAAA2P,UAtpBA,CAA+BuK,gBAAAiE,eAAlBt/B,QAAA8wB,UAAAA,imFCtCb,IAAAyO,aAAA7/B,QAAA,gBACA,IAAA8/B,SAAA9/B,QAAA,YAKA,IAAA+/B,aAAA//B,QAAA,gBAEA,IAAAggC,kBAAAhgC,QAAA,qBAMA,IAAAigC,kBAAAjgC,QAAA,8CACA,IAAAkgC,cAAAlgC,QAAA,0CAEA,IAAAmgC,iBAAAngC,QAAA,6CACA,IAAAwtB,2BAAAxtB,QAAA,uDACA,IAAAogC,cAAApgC,QAAA,0CACA,IAAA47B,cAAA57B,QAAA,0CACA,IAAA2nB,6BAAA3nB,QAAA,yDACA,IAAAqgC,iCAAArgC,QAAA,6DACA,IAAAsgC,kCAAAtgC,QAAA,8DACA,IAAA4nB,gBAAA5nB,QAAA,2CACA,IAAAytB,kBAAAztB,QAAA,6CACA,IAAAikB,iBAAAjkB,QAAA,6CACA,IAAA8oB,WAAA9oB,QAAA,sCAKA,IAAMkkB,OAAyBD,iBAAAE,eAAeC,cAK9C,IAAInN,SAyBJ,IAAAmZ,QAAA,SAAA0L,QAA6BC,UAAA3L,QAAA0L,QA6EzB,SAAA1L,QAAYzK,UAAZ,IAAAM,MACI6V,OAAAv7B,KAAA6B,OAAOA,KA/DX6jB,MAAAsa,eAAkC,GAYlCta,MAAAua,qBAA6C,IAAI1Y,IAKjD7B,MAAAwa,0BAA4B,KAI5Bxa,MAAAya,sCAAwC,KAIxCza,MAAA0a,kBAA6C,IAAI7Y,IAYjD7B,MAAA2a,2BAA6B,MAI7B3a,MAAA4a,+BAAiC,MAIjC5a,MAAA6a,0BAA4B,MAI5B7a,MAAA8a,8BAAgC,MAe5B9pB,SAAW6R,WAAAG,cAAc7E,cACzB6B,MAAKN,SAAWA,sBAiCpByK,QAAAjvB,UAAAmK,QAAA,SAAQ01B,MAAejc,UAAvB,IAAAkB,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QAEzBwe,MAAKgb,aAAaD,OAElB,GAAI/a,MAAKN,SAAS8L,0BAA2B,CAEzCxL,MAAK9b,QAAU,CACX8a,UAAWgB,MAAKhB,UAChBic,cAAeF,MACfjc,WAAYA,SAAWkB,MAAKkb,qBAAqBpc,UAAY,IAEjEkB,MAAKmb,WAAWJ,OAAO3V,MAAK,WACxB7jB,aACD8jB,OAAM,SAAAtnB,OACLyD,OAAOzD,cAER,CACHyD,OAAO,IAAImgB,gBAAAQ,cAAcR,gBAAAS,kBAAkBgZ,sBAAuB,WAAapqB,SAAStE,UAAY,aAAesE,SAASf,aAAe,SAAWe,SAASqqB,YAAc,uCAgCzLlR,QAAAjvB,UAAA4K,WAAA,WACI3J,KAAKm/B,MAAM,MAAO,eAuBtBnR,QAAAjvB,UAAAqgC,UAAA,SAAUt3B,OAAgBomB,cAAqCE,OAAsEiR,QACjI,IAAIhR,WAAmC,GACvC,KAAMD,eAAiBA,SAAW,WAAY,CAC1CC,WAAa,CACTI,kBAAoBL,OAAOK,aAAe,mBAAwBL,OAAOK,aAAe,SAAYpD,kBAAAqD,gBAAgBN,OAAOK,YAAcJ,WAAWI,WAAcpD,kBAAAqD,gBAAgBC,OAClL2Q,wBAA0BlR,OAAOkR,mBAAqB,YAAelR,OAAOkR,iBAAmB,KAC/FC,wBAA0BnR,OAAOmR,mBAAqB,YAAenR,OAAOmR,iBAAmB,UAEhG,CACHlR,WAAa,CACTI,WAAYpD,kBAAAqD,gBAAgBC,OAC5B2Q,iBAAkB,KAClBC,iBAAkB,MAI1B,IAAItQ,kBACJ,KAAMb,eAAkBA,SAAW,WAAa,CAC5Ca,kBAAoBb,YACjB,KAAMiR,OAAQ,CACjBpQ,kBAAoBoQ,OAGxBvd,OAAOoB,KAAK,kBAAoBpb,OAAOkc,WAAWzB,cAElDza,OAAOs3B,YACFnW,MAAK,WACFnH,OAAOoB,KAAK,2BAA6Bpb,OAAOkc,WAAWzB,cAC3D,GAAI0M,oBAAsB9uB,UAAW,CACjC8uB,kBAAkB9uB,eAGzB+oB,OAAM,SAAAtnB,OACH,GAAIqtB,oBAAsB9uB,UAAW,CACjC8uB,kBAAkBrtB,WAG9B,IAAM49B,WAAa,IAAI7B,aAAA8B,WAAW33B,OAAQomB,cAAeG,YACzD,KAAMmR,WAAWtR,cAAe,CAC5BpmB,OAAOye,cAAc6W,mBAAmBoC,WAAWtR,cAAgCG,WAAWI,YAElG,OAAO+Q,YAUXxR,QAAAjvB,UAAA2gC,eAAA,SAAe53B,OAAgBomB,cAAqCG,YAApE,IAAAxK,MAAA7jB,KACI,OAAO,IAAImF,SAAoB,SAACC,QAASC,QAErC,IAAIm6B,WAEJ,IAAMzxB,SAAW,SAACnM,OACd,KAAMA,MAAO,CACTyD,OAAOzD,WACJ,CACHwD,QAAQo6B,cAIhB,KAAMnR,WAAY,CACdmR,WAAa3b,MAAKub,UAAUt3B,OAAQomB,cAAeG,WAAYtgB,cAC5D,CACHyxB,WAAa3b,MAAKub,UAAUt3B,OAAQomB,cAAengB,eAiB/DigB,QAAAjvB,UAAA4gC,YAAA,SAAYH,YACR,IAAMjd,aAAeid,WAAW13B,OAAOkc,WAAWzB,aAElDT,OAAOoB,KAAK,sBAAwBX,cAEpCviB,KAAKujB,SAASC,YACV,uBACA,CAAE4X,OAAQoE,WAAW13B,OAAOkc,WAAWzB,eACvC,SAAC3gB,MAAOwc,UACJ,GAAIxc,MAAO,CACPkgB,OAAOlgB,MAAM,4BAA8B2gB,aAAc3gB,WACtD,CACHkgB,OAAOoB,KAAK,+BAAiCX,cAEjDid,WAAW13B,OAAO83B,oBAClBJ,WAAW13B,OAAO+3B,wBAG1BL,WAAW13B,OAAOye,cAAcuZ,mBAiBpC9R,QAAAjvB,UAAAghC,QAAA,SAAQ9T,WAAR,IAAApI,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzB4mB,UAAU/J,QAAU2B,MACpBoI,UAAUnkB,OAAOoa,QAAU2B,MAE3B,IAAKoI,UAAUnkB,OAAOk4B,cAAe,CAEjCnc,MAAKG,WAAWU,UAAUuH,UAAUnkB,QACpCmkB,UAAUnkB,OAAOi4B,UACZ9W,MAAK,WACFpF,MAAKiK,cAAc7B,UAAW,EAAG,KAAM,GACvC7mB,aAEH8jB,OAAM,SAAAtnB,OACHyD,OAAOzD,cAEZ,CAEHqqB,UAAUiD,aACLjG,MAAK,WACFpF,MAAKG,WAAWU,UAAUuH,UAAUnkB,QACpCmkB,UAAUgR,gCACVhR,UAAUnkB,OAAOi4B,UACZ9W,MAAK,WACFpF,MAAKiK,cAAc7B,UAAW,EAAG,KAAM,GACvC7mB,aAEH8jB,OAAM,SAAAtnB,OACHyD,OAAOzD,aAEhBsnB,OAAM,SAACtnB,OACNyD,OAAOzD,eA0B3BosB,QAAAjvB,UAAAkhC,UAAA,SAAUhU,WAEN,IAAMnkB,OAASmkB,UAAUnkB,OAEzB,IAAKA,OAAOkc,WAAY,CACpBlC,OAAOlgB,MAAM,6DAA8DkG,QAC3E,YACG,GAAIA,OAAOkc,aAAehkB,KAAKgkB,WAAY,CAC9ClC,OAAOlgB,MAAM,mFACT,oFAAqFkG,QACzF,WACG,CAEHga,OAAOoB,KAAK,6BAA+Bpb,OAAOkc,WAAWzB,aAAe,KAE5EviB,KAAKujB,SAASC,YAAY,kBAAkB,SAAC5hB,MAAOwc,UAChD,GAAIxc,MAAO,CACPkgB,OAAOlgB,MAAMA,WACV,CACHkgB,OAAOoB,KAAK,mCAIpBpb,OAAO83B,2BACA93B,OAAOkc,WAAWlc,OAEzB,IAAMmyB,YAAc,IAAIT,cAAAU,YAAY,KAAMjO,UAAW,kBAAmBA,UAAUnkB,OAAQ,aAC1FmkB,UAAU5M,UAAU,kBAAmB,CAAC4a,cACxCA,YAAYX,wBAsBpBtL,QAAAjvB,UAAAmhC,gBAAA,SAAgBlc,YAAhB,IAAAH,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzByc,OAAOoB,KAAK,qCAAuCc,WAAWzB,cAC9DsB,MAAKN,SAASC,YACV,kBACA,CAAEjB,aAAcyB,WAAWzB,eAC3B,SAAC3gB,MAAOwc,UACJ,GAAIxc,MAAO,CACPkgB,OAAOlgB,MAAM,2CAA6CoiB,WAAWzB,aAAc3gB,OACnF,GAAIA,MAAM5D,OAAS,IAAK,CACpBqH,OAAO,IAAImgB,gBAAAQ,cAAcR,gBAAAS,kBAAkBC,2BAA4B,4DACpE,CACH7gB,OAAOzD,YAER,CACHkgB,OAAOoB,KAAK,+CAAiDc,WAAWzB,cACxEnd,kBAuBpB4oB,QAAAjvB,UAAAohC,eAAA,SAAer4B,QAAf,IAAA+b,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzByc,OAAOoB,KAAK,gCAAkCpb,OAAO+c,UACrDhB,MAAKN,SAASC,YACV,iBACA,CAAEqB,SAAU/c,OAAO+c,WACnB,SAACjjB,MAAOwc,UACJ,GAAIxc,MAAO,CACPkgB,OAAOlgB,MAAM,sCAAwCkG,OAAO+c,SAAUjjB,OACtE,GAAIA,MAAM5D,OAAS,IAAK,CACpBqH,OAAO,IAAImgB,gBAAAQ,cAAcR,gBAAAS,kBAAkBC,2BAA4B,4DACpE,CACH7gB,OAAOzD,YAER,CACHkgB,OAAOoB,KAAK,0CAA4Cpb,OAAO+c,UAC/Dzf,kBAoBpB4oB,QAAAjvB,UAAAqhC,OAAA,SAAOA,QAAP,IAAAvc,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QAEzB,IAAMg7B,cAAgB,GAEtB,GAAID,OAAOE,IAAMF,OAAOE,GAAGliC,OAAS,EAAG,CACnC,IAAMmiC,gBAA0B,GAChCH,OAAOE,GAAGxc,SAAQ,SAAAE,YACd,KAAMA,WAAWzB,aAAc,CAC3Bge,gBAAc9+B,KAAKuiB,WAAWzB,kBAGtC8d,cAAc,MAAQE,oBACnB,CACHF,cAAc,MAAQ,GAG1BA,cAAc,QAAUD,OAAOxzB,KAAOwzB,OAAOxzB,KAAO,GAEpD,IAAI4zB,QAAkBJ,OAAO7+B,KAAO6+B,OAAO7+B,KAAO,SAClD,KAAMi/B,QAAS,CACX,GAAIA,QAAQC,UAAU,EAAG,KAAO,UAAW,CACvCD,QAAU,UAAYA,SAG9BH,cAAc,QAAUG,QAExB3c,MAAKN,SAASC,YAAY,cAAe,CACrCzhB,QAAS6hB,KAAKlJ,UAAU2lB,iBACzB,SAACz+B,MAAOwc,UACP,KAAMxc,MAAO,CACTyD,OAAOzD,WACJ,CACHwD,kBAWhB4oB,QAAAjvB,UAAAmE,GAAA,SAAG3B,KAAcU,SAEby3B,OAAA36B,UAAMsmB,MAAKlnB,KAAA6B,KAACuB,KAAM,UAAYA,KAAO,2BAA4BU,SAEjE,GAAIV,OAAS,yBAA0B,CACnCvB,KAAKw+B,2BAA6B,KAElCx+B,KAAKu+B,kBAAkBza,SAAQ,SAAA4c,kBAC3B,KAAMA,iBAAiB54B,QAAU44B,iBAAiB54B,OAAOmc,SAAU,CAC/Dyc,iBAAiB54B,OAAO64B,+BAIpC,GAAIp/B,OAAS,wBAAyB,CAClCvB,KAAK0+B,0BAA4B,KAEjC1+B,KAAKu+B,kBAAkBza,SAAQ,SAAA4c,kBAC3B,KAAMA,iBAAiB54B,QAAU44B,iBAAiB54B,OAAOmc,SAAU,CAC/Dyc,iBAAiB54B,OAAO84B,8BAKpC,OAAO5gC,MAOXguB,QAAAjvB,UAAAkB,KAAA,SAAKsB,KAAcU,SAEfy3B,OAAA36B,UAAMumB,QAAOnnB,KAAA6B,KAACuB,KAAM,UAAYA,KAAO,gCAAiCU,SAExE,GAAIV,OAAS,yBAA0B,CACnCvB,KAAKy+B,+BAAiC,KAEtCz+B,KAAKu+B,kBAAkBza,SAAQ,SAAA4c,kBAC3B,KAAMA,iBAAiB54B,QAAU44B,iBAAiB54B,OAAOmc,SAAU,CAC/Dyc,iBAAiB54B,OAAO+4B,mCAIpC,GAAIt/B,OAAS,wBAAyB,CAClCvB,KAAK2+B,8BAAgC,KAErC3+B,KAAKu+B,kBAAkBza,SAAQ,SAAA4c,kBAC3B,KAAMA,iBAAiB54B,QAAU44B,iBAAiB54B,OAAOmc,SAAU,CAC/Dyc,iBAAiB54B,OAAOg5B,kCAKpC,OAAO9gC,MAOXguB,QAAAjvB,UAAAmF,IAAA,SAAI3C,KAAcU,SAEdy3B,OAAA36B,UAAMmF,IAAG/F,KAAA6B,KAACuB,KAAMU,SAEhB,GAAIV,OAAS,yBAA0B,CACnC,IAAIw/B,gCAAkC/gC,KAAKklB,GAAGjH,aAAa1c,MAAMnD,OACjE,GAAI2iC,kCAAoC,EAAG,CACvC/gC,KAAKw+B,2BAA6B,MAElCx+B,KAAKu+B,kBAAkBza,SAAQ,SAAA4c,kBAC3B,KAAMA,iBAAiB54B,OAAQ,CAC3B44B,iBAAiB54B,OAAOk5B,0BAA0B,YAKlE,GAAIz/B,OAAS,wBAAyB,CAClC,IAAI0/B,+BAAiCjhC,KAAKklB,GAAGjH,aAAa1c,MAAMnD,OAChE,GAAI6iC,iCAAmC,EAAG,CACtCjhC,KAAK0+B,0BAA4B,MAEjC1+B,KAAKu+B,kBAAkBza,SAAQ,SAAA4c,kBAC3B,KAAMA,iBAAiB54B,OAAQ,CAC3B44B,iBAAiB54B,OAAOo5B,yBAAyB,YAKjE,OAAOlhC,MASXguB,QAAAjvB,UAAA+1B,oBAAA,SAAoB1W,UAApB,IAAAyF,MAAA7jB,KAEIA,KAAKmhC,cAAc/iB,SAASoE,GAAI,IAE3ByG,MAAK,SAAAjF,YACFlC,OAAOriB,KAAK,cAAgB2e,SAASoE,GAAK,0CAE7C0G,OAAM,SAAAuS,eACH,IAAMzX,WAAa,IAAIyZ,aAAAxb,WAAW4B,MAAMzF,UACxCyF,MAAK0a,kBAAkB19B,IAAIud,SAASoE,GAAIwB,YACxCH,MAAKqB,GAAG7F,UAAU,oBAAqB,CAAC,IAAIwe,kBAAAuD,gBAAgB,MAAOvd,MAAM,oBAAqBG,WAAY,UAOtHgK,QAAAjvB,UAAAq2B,kBAAA,SAAkBte,KAAlB,IAAA+M,MAAA7jB,KAEI,GAAIA,KAAKu+B,kBAAkB8C,KAAO,EAAG,CACjCrhC,KAAKshC,oBAAoBxqB,IAAIyL,cAAc0G,MAAK,SAAAjF,YAC5C,KAAMA,WAAWlc,OAAQ,CACrB,IAAMA,OAASkc,WAAWlc,OAE1B,IAAMmyB,YAAc,IAAIT,cAAAU,YAAY,KAAMrW,MAAM,kBAAmB/b,OAAQgP,IAAI+W,QAC/EhK,MAAKqB,GAAG7F,UAAU,kBAAmB,CAAC4a,cACtCA,YAAYX,sBAEZzV,MAAKua,qBAAqBhZ,OAAOtd,OAAO+c,UAExC,GAAIhB,MAAKua,qBAAqBiD,OAAS,EAAG,CACtCxd,MAAKwa,0BAA4B,KACjCxa,MAAKya,sCAAwC,MAGrDza,MAAK0a,kBAAkBnZ,OAAOpB,WAAWzB,cACzCsB,MAAKqB,GAAG7F,UAAU,sBAAuB,CAAC,IAAIwe,kBAAAuD,gBAAgB,MAAOvd,MAAM,sBAAuBG,WAAYlN,IAAI+W,aAEjH3E,OAAM,SAAAuS,eACH3Z,OAAOlgB,MAAM65B,oBAQ7BzN,QAAAjvB,UAAAi2B,uBAAA,SAAuB5W,UAAvB,IAAAyF,MAAA7jB,KAEI,IAAMuhC,qBAAuB,SAACvd,YAE1BH,MAAK0a,kBAAkB19B,IAAImjB,WAAWzB,aAAcyB,YAEpD,IAAKH,MAAKua,qBAAqBx9B,IAAIojB,WAAWlc,OAAO+c,UAAW,CAK5DhB,MAAKqB,GAAG7F,UAAU,gBAAiB,CAAC,IAAIma,cAAAU,YAAY,MAAOrW,MAAM,gBAAiBG,WAAWlc,OAAQ,MAGzG+b,MAAKua,qBAAqBv9B,IAAImjB,WAAWlc,OAAO+c,SAAU,OAK9D,IAAIb,WACJhkB,KAAKshC,oBAAoBljB,SAASoE,IAE7ByG,MAAK,SAAAuY,KAEFxd,WAAawd,IACbpjB,SAASuE,SAAW6e,IAAI50B,KACxBoX,WAAWjB,cAAgB3E,SAC3B4F,WAAWf,kBAAkB7E,SAAS4E,SACtCue,qBAAqBvd,eAExBkF,OAAM,SAAAuS,eAEHzX,WAAa,IAAIyZ,aAAAxb,WAAW4B,MAAMzF,UAClCmjB,qBAAqBvd,gBAOjCgK,QAAAjvB,UAAAm2B,yBAAA,SAAyBpe,KAAzB,IAAA+M,MAAA7jB,KACI,GAAI8W,IAAIyL,eAAiBviB,KAAKgkB,WAAWzB,aAAc,CAEnDviB,KAAKyhC,oBAAoB3qB,IAAI+W,YAC1B,CACH7tB,KAAKshC,oBAAoBxqB,IAAIyL,cAExB0G,MAAK,SAAAjF,YAEF,IAAMiW,YAAc,IAAIT,cAAAU,YAAY,KAAMrW,MAAM,kBAAmBG,WAAWlc,OAASgP,IAAI+W,QAC3FhK,MAAKqB,GAAG7F,UAAU,kBAAmB,CAAC4a,cACtCA,YAAYX,sBAGZ,IAAMzU,SAAmBb,WAAWlc,OAAQ+c,SAC5ChB,MAAKua,qBAAqBhZ,OAAOP,UAEjC,GAAIhB,MAAKua,qBAAqBiD,OAAS,EAAG,CACtCxd,MAAKwa,0BAA4B,KACjCxa,MAAKya,sCAAwC,KAGjDta,WAAWY,aAAaC,aAE3BqE,OAAM,SAAAuS,eACH3Z,OAAOlgB,MAAM65B,oBAQ7BzN,QAAAjvB,UAAAu2B,qBAAA,SAAqBxe,KACjB,GAAIA,IAAIyL,eAAiBviB,KAAKgkB,WAAWzB,aAAc,CAEnD,KAAMviB,KAAK6iB,YAAc7iB,KAAKgkB,WAAW5B,SAAU,CAC/CpiB,KAAKm/B,MAAM,KAAMroB,IAAI+W,WAQjCG,QAAAjvB,UAAA62B,aAAA,SAAa9e,KAAb,IAAA+M,MAAA7jB,KAEI8hB,OAAOoB,KAAK,eAAiBU,KAAKlJ,UAAU5D,MAE5C,IAAM4qB,eAAyB5qB,IAAIvV,KAAOuV,IAAIvV,KAAKoM,QAAQ,aAAc,IAAMxN,UAE/E,KAAM2W,IAAI6qB,KAAM,CAEZ3hC,KAAKmhC,cAAcrqB,IAAI6qB,KAAM,eAAiB7qB,IAAI6qB,KAAO,+DACnD/d,KAAKlJ,UAAU1a,KAAKu+B,kBAAkBn6B,QAAU,gCAAkCpE,KAAKgkB,WAAWzB,cAEnG0G,MAAK,SAAAjF,YACFH,MAAKqB,GAAG7F,UAAU,SAAU,CAAC,IAAI2e,cAAA4D,YAAY/d,MAAM6d,aAAc5qB,IAAIlK,KAAMoX,cAC3E,GAAIlN,IAAIvV,OAAS,SAAU,CACvBsiB,MAAKqB,GAAG7F,UAAUvI,IAAIvV,KAAM,CAAC,IAAIy8B,cAAA4D,YAAY/d,MAAM6d,aAAc5qB,IAAIlK,KAAMoX,kBAGlFkF,OAAM,SAAAuS,eACH3Z,OAAOlgB,MAAM65B,sBAElB,CAEHz7B,KAAKklB,GAAG7F,UAAU,SAAU,CAAC,IAAI2e,cAAA4D,YAAY5hC,KAAM0hC,aAAc5qB,IAAIlK,KAAMzM,aAC3E,GAAI2W,IAAIvV,OAAS,SAAU,CACvBvB,KAAKklB,GAAG7F,UAAUvI,IAAIvV,KAAM,CAAC,IAAIy8B,cAAA4D,YAAY5hC,KAAM0hC,aAAc5qB,IAAIlK,KAAMzM,gBAQvF6tB,QAAAjvB,UAAA+2B,wBAAA,SAAwBhf,KAAxB,IAAA+M,MAAA7jB,KAEI,IAAM+N,SAAW,SAACiW,YACd,KAAMA,WAAWlc,QAAUkc,WAAWlc,OAAO+c,WAAa/N,IAAI+N,SAAU,CACpE,IAAM/c,OAASkc,WAAWlc,OAC1B,IAAIqe,cAAQ,EACZ,OAAQrP,IAAI3I,UACR,IAAK,cACDgY,SAAWre,OAAOqc,YAClBrN,IAAI8W,SAAW9W,IAAI8W,WAAa,OAChC9lB,OAAOqc,YAAcrN,IAAI8W,SACzB,MACJ,IAAK,cACDzH,SAAWre,OAAOsc,YAClBtN,IAAI8W,SAAW9W,IAAI8W,WAAa,OAChC9lB,OAAOsc,YAActN,IAAI8W,SACzB,MACJ,IAAK,kBACDzH,SAAWre,OAAOyc,gBAClBzN,IAAI8W,SAAWhK,KAAKpV,MAAMoV,KAAKpV,MAAMsI,IAAI8W,WACzC9lB,OAAOyc,gBAAkBzN,IAAI8W,SAC7B,MACJ,IAAK,SACDzH,SAAWre,OAAO0c,OAClB1N,IAAI8W,SAAY1uB,OAAOkF,KAAK0S,IAAI8W,UAAUxvB,OAAS,EAAK0Y,IAAI8W,SAAWztB,UACvE,GAAI2W,IAAI8W,WAAaztB,UAAW,CAC5B2H,OAAO0c,OAAS,IAAIkZ,SAAAjY,OAAO3O,IAAI8W,SAASrsB,KAAMuV,IAAI8W,SAAS7lB,SAC3DD,OAAO0c,OAAO1c,OAASA,OACvB,GAAIgP,IAAI8W,SAASvH,eAAgB,CAC7Bve,OAAO0c,OAAO6B,eAAiBvP,IAAI8W,SAASvH,oBAE7C,QACIve,OAAO0c,OAElB1N,IAAI8W,SAAW9lB,OAAO0c,OACtB,MAERX,MAAKqB,GAAG7F,UAAU,wBAAyB,CAAC,IAAIkG,6BAAAe,2BAA2BzC,MAAM/b,OAAQgP,IAAI3I,SAAU2I,IAAI8W,SAAUzH,SAAUrP,IAAI+W,UACnI,KAAM/lB,OAAOye,cAAe,CACxBze,OAAOye,cAAclH,UAAU,wBAAyB,CAAC,IAAIkG,6BAAAe,2BAA2Bxe,OAAOye,cAAeze,OAAQgP,IAAI3I,SAAU2I,IAAI8W,SAAUzH,SAAUrP,IAAI+W,eAEjK,CACH/L,OAAOlgB,MAAM,4BAA8BkV,IAAI+N,SAAW,2BAA6B/N,IAAIyL,aAAe,wCAIlH,GAAIzL,IAAIyL,eAAiBviB,KAAKgkB,WAAWzB,aAAc,CAEnDxU,SAAS/N,KAAKgkB,gBACX,CACHhkB,KAAKshC,oBAAoBxqB,IAAIyL,cACxB0G,MAAK,SAAAjF,YACFjW,SAASiW,eAEZkF,OAAM,SAAAuS,eACH3Z,OAAOlgB,MAAM65B,oBAQ7BzN,QAAAjvB,UAAAi3B,4BAAA,SAA4Blf,KACxB,IAAIqP,SACJ,OAAQrP,IAAI3I,UACR,IAAK,OACDgY,SAAWnmB,KAAKgkB,WAAW3B,KAAK7c,QAChCxF,KAAKgkB,WAAW3B,KAAOvL,IAAI8W,SAC3B5tB,KAAKgkB,WAAW1B,aAAcD,KAAOvL,IAAI8W,SACzC,MACJ,IAAK,SACDzH,SAAWnmB,KAAKgkB,WAAWlB,OAC3BhM,IAAI8W,SAAW9W,IAAI8W,WAAa,OAChC5tB,KAAKgkB,WAAWlB,OAAShM,IAAI8W,SAC7B5tB,KAAKgkB,WAAW1B,aAAcQ,OAAShM,IAAI8W,SAC3C,MAER5tB,KAAKklB,GAAG7F,UAAU,4BAA6B,CAAC,IAAI4e,iCAAA4D,+BAA+B7hC,KAAMA,KAAKgkB,WAAYlN,IAAI3I,SAAU2I,IAAI8W,SAAUzH,aAM1I6H,QAAAjvB,UAAAm3B,oCAAA,SAAoCpf,KAApC,IAAA+M,MAAA7jB,KACI,GAAI8W,IAAIyL,eAAiBviB,KAAKgkB,WAAWzB,aAAc,CACnDviB,KAAKklB,GAAG7F,UAAU,6BAA8B,CAAC,IAAI6e,kCAAA4D,gCAAgC9hC,KAAM8W,IAAI8W,SAAU9W,IAAIqP,SAAUnmB,KAAKgkB,kBACzH,CACHhkB,KAAKmhC,cAAcrqB,IAAIyL,aAAc,yCAA2CzL,IAAIyL,cAC/E0G,MAAK,SAACjF,YACHH,MAAKqB,GAAG7F,UAAU,6BAA8B,CAAC,IAAI6e,kCAAA4D,gCAAgCje,MAAM/M,IAAI8W,SAAU9W,IAAIqP,SAAUnC,iBAE1HkF,OAAM,SAAAuS,eACH3Z,OAAOlgB,MAAM65B,oBAQ7BzN,QAAAjvB,UAAAu3B,iBAAA,SAAiBxf,KACb,IAAMsM,UAA6B,CAC/BA,UAAWtM,IAAIsM,UACf2e,UAAWjrB,IAAIirB,UACfC,WAAYlrB,IAAIkrB,WAChBC,KAAMnrB,IAAImrB,KACVC,SAAUprB,IAAIorB,SACdz3B,SAAUqM,IAAIrM,SACd03B,eAAgBrrB,IAAIqrB,eACpBC,YAAatrB,IAAIsrB,YACjB1e,OAAQ5M,IAAI4M,OACZC,cAAe7M,IAAI6M,cACnB0e,QAASvrB,IAAIurB,QACbC,iBAAkBxrB,IAAIwrB,iBACtB/gC,KAAMuV,IAAIvV,KACVghC,OAAQ,WACJ,MAAO,CAAEnf,UAAWtM,IAAIsM,aAGhCpjB,KAAKmhC,cAAcrqB,IAAI0rB,mBAAoB,yCAA2C1rB,IAAI0rB,mBAAqB,oBAAsB1rB,IAAI2M,aAAe,oCAAsCL,WACzL6F,MAAK,SAAAjF,YACF,IAAMlc,OAAiBkc,WAAWlc,OAClCA,OAAO26B,gBAAgBC,gBAAgBtf,WAAW8F,OAAM,SAAAtnB,OACpDkgB,OAAOlgB,MAAM,8BAAgCkG,OAAQ+c,SAC/C,uBAAyB/N,IAAI2M,aAAe,KAAO7hB,aAGhEsnB,OAAM,SAAAuS,eACH3Z,OAAOlgB,MAAM65B,mBAOzBzN,QAAAjvB,UAAA4jC,gBAAA,SAAgB7rB,KACZgL,OAAOoB,KAAK,mBAAqBU,KAAKlJ,UAAU5D,MAChD,IAAMmC,EAAInC,IAAI+L,UACd,GAAI5J,IAAM9Y,UAAW,CACjBH,KAAKklB,GAAG7F,UAAU,iBAAkB,CAAC,CACjC6C,QAASjJ,SAEV,CACH6I,OAAOriB,KAAK,sCAAuCqX,OAO3DkX,QAAAjvB,UAAAi6B,iBAAA,SAAiBnL,QACb/L,OAAOriB,KAAK,8BAAgCO,KAAK6iB,WACjD,KAAM7iB,KAAK6iB,aAAe7iB,KAAKgkB,aAAehkB,KAAKgkB,WAAW5B,SAAU,CACpEpiB,KAAKm/B,MAAM,KAAMtR,UAOzBG,QAAAjvB,UAAAo6B,sBAAA,WACIrX,OAAOoB,KAAK,mCAAqCljB,KAAK6iB,WACtD7iB,KAAK4iC,yBACL5iC,KAAKklB,GAAG7F,UAAU,cAAe,KAMrC2O,QAAAjvB,UAAAy3B,aAAA,SAAa3Q,QACT/D,OAAOlgB,MAAM,gBAAkBgiB,KAAKlJ,UAAUmL,SAC9C,IAAM/jB,IAAM+jB,OAAOjkB,MACnB,GAAIE,IAAK,CACL9B,KAAKklB,GAAG7F,UAAU,cAAe,CAAC,CAC9Bzd,MAAOE,WAER,CACHggB,OAAOriB,KAAK,0CAA2ComB,UAO/DmI,QAAAjvB,UAAAy2B,mBAAA,SAAmBpX,UACfpe,KAAKklB,GAAG7F,UAAU,mBAAoB,CAAC,IAAI0e,iBAAA8E,eAAe7iC,KAAM,mBAAoBoe,SAASoE,GAAIpE,SAAStb,SAM9GkrB,QAAAjvB,UAAA22B,mBAAA,SAAmBtX,UACfpe,KAAKklB,GAAG7F,UAAU,mBAAoB,CAAC,IAAI0e,iBAAA8E,eAAe7iC,KAAM,mBAAoBoe,SAASoE,GAAIpE,SAAStb,KAAMsb,SAASyP,WAO7HG,QAAAjvB,UAAAq3B,wBAAA,SAAwBhY,UAAxB,IAAAyF,MAAA7jB,KACI,IAAMuiB,aAAuBnE,SAASmE,aACtC,IAAMsC,SAAmBzG,SAASyG,SAClC7kB,KAAKmhC,cAAc5e,aAAc,wCAA0CA,cACtE0G,MAAK,SAAAjF,mBACFlC,OAAOoB,KAAK,2BACZ,IAAMpb,OAAiBkc,WAAWlc,QAClCsiB,GAAAtiB,OAAO0c,OAAQhH,SAAS5c,IAAIwd,SAASoI,cAAU,MAAA4D,UAAA,OAAA,EAAAA,GAAEjsB,KAAK0lB,MAAM,IAAIia,cAAAgF,YAAYh7B,OAAO0c,OAASpG,SAASoI,UAAWpI,SAASxR,WAOrIohB,QAAAjvB,UAAA6jC,uBAAA,WACI9gB,OAAOoB,KAAK,wCACZ,IAAI6f,iBAAmB,MAEvB,KAAM/iC,KAAKgkB,WAAWlc,QAAU9H,KAAKgkB,WAAWlc,OAAOk7B,iCAAkC,CACrFlhB,OAAOriB,KAAK,6BAA+BO,KAAKgkB,WAAWlc,OAAO+c,UAClE7kB,KAAKgkB,WAAWlc,OAAOm7B,mBAAmB,MAC1CF,iBAAmB,KAGvB/iC,KAAKu+B,kBAAkBza,SAAQ,SAAA4c,kBAC3B,KAAMA,iBAAiB54B,QAAU44B,iBAAiB54B,OAAOk7B,iCAAkC,CACvFlhB,OAAOriB,KAAK,8BAAgCihC,iBAAiB54B,OAAO+c,UACpE6b,iBAAiB54B,OAAOo7B,sBAAsB,MAC9CH,iBAAmB,SAG3B,IAAKA,iBAAkB,CACnBjhB,OAAOoB,KAAK,2DAOpB8K,QAAAjvB,UAAAsgB,UAAA,SAAU9d,KAAc4hC,YACpBnjC,KAAKklB,GAAG7F,UAAU9d,KAAM4hC,aAM5BnV,QAAAjvB,UAAAogC,MAAA,SAAMiE,OAAiBvV,QAAvB,IAAAhK,MAAA7jB,KAEIojC,SAAWA,OACXthB,OAAOoB,KAAK,2BAA6BkgB,OAAS,KAClDpjC,KAAKqjC,yBAEL,KAAMrjC,KAAKgkB,WAAY,CACnB,IAAKhkB,KAAKgkB,WAAW5B,WAAaghB,OAAQ,CACtCpjC,KAAKujB,SAASC,YAAY,aAAa,SAAC5hB,MAAOwc,UAC3C,GAAIxc,MAAO,CACPkgB,OAAOlgB,MAAMA,OAEjBiiB,MAAKN,SAASqT,iBAEf,CACH52B,KAAKujB,SAASqT,UAGlB52B,KAAKyhC,oBAAoB5T,QAEzB,IAAK7tB,KAAKgkB,WAAW5B,SAAU,CAE3B,IAAMgX,uBAAyB,IAAIhO,2BAAAiO,yBAAyBr5B,KAAM6tB,QAClE7tB,KAAKklB,GAAG7F,UAAU,sBAAuB,CAAC+Z,yBAC1CA,uBAAuBE,2BAExB,CACHxX,OAAOriB,KAAK,yCAA2CO,KAAK6iB,aAOpEmL,QAAAjvB,UAAAukC,iBAAA,SAAiB1E,OACb,IAAM2E,WAAa,CACf3E,QAAUA,MAASA,MAAQ,GAC3B1c,QAASliB,KAAK6iB,UACdhO,WAAYA,SAAS2uB,iBAAmB3uB,SAAS2uB,iBAAmB,UACpE7gB,WAAY3iB,KAAK+H,QAAQ4a,SAAW3iB,KAAK+H,QAAQ4a,SAAW,GAC5DgJ,OAAQ3rB,KAAKujB,SAASwT,YACtBnL,SAAU5rB,KAAKujB,SAASyT,eAE5B,OAAOuM,YAGXvV,QAAAjvB,UAAA+uB,cAAA,SAAcvH,cAA8Bkd,gBAA6BC,WAA6BC,UAAtG,IAAA9f,MAAA7jB,eAA4C,GAAAyjC,uBAAA,EAAA,CAAAA,gBAAA,EAA6B,GAAAC,kBAAA,EAAA,CAAAA,WAAA,MAA6B,GAAAC,gBAAA,EAAA,CAAAA,SAAA,EAClG,GACI9uB,SAAS2a,mBAAqB3a,SAAS4a,yBAA2B5a,SAAS6a,kBAC3E7a,SAAS8a,wBAA0B9a,SAAS+a,iBAAmB/a,SAASkb,cACvElb,SAAS2T,oBAAsB3T,SAAS6X,cAAiB7X,SAASib,oBACnEjb,SAASmb,oBAAsBnb,SAAS2b,kBAAqB3b,SAASya,kBAAoBza,SAAS0a,kBACrG,CACE,IAAMqU,qBAAqB,WAAA,OAAAC,UAAAhgB,WAAA,OAAA,GAAA,+FACjBigB,GAAKvd,cAAcze,OAAOozB,4BAC5B4I,GAAGC,kBAAoB,aAAvB,MAAA,CAAA,EAAA,GACiB,MAAA,CAAA,EAAMD,GAAGE,mBAApBC,SAAW7Z,GAAA8Z,OACXC,MAAa,GACnBF,SAASngB,SAAQ,SAAAsgB,OACb,GAAK,eAAgBA,OAAW,gBAAiBA,OAAWD,MAAI/lC,SAAW,EAAI,CAC3E+lC,MAAI1iC,KAAK2iC,WAGjB,GAAID,MAAI/lC,OAAS,EAAG,CAChB4B,KAAKujB,SAASC,YAAY,YAAa,CACnCgJ,OAAQ2X,MAAI,GAAGE,YACf/X,MAAO6X,MAAI,GAAGG,WACdlgB,YAAamC,cAAcze,OAAOsc,aAAe,KAAOmC,cAAcze,OAAOsc,YAAc,MAC3FD,YAAaoC,cAAcze,OAAOqc,aAAe,KAAOoC,cAAcze,OAAOqc,YAAc,QAC5F,SAACviB,MAAOwc,UACP,GAAIxc,MAAO,CACPkgB,OAAOlgB,MAAM,kCAAmCA,+CAMpE,GAAI8hC,WAAY,CACZ,IAAIa,QAAQ,EACZvkC,KAAKwkC,kBAAoB/6B,aAAY,WACjC,GAAI86B,QAAQZ,SAAU,CAClBY,UACAX,2BACG,CACHzH,cAActY,MAAK2gB,sBAExBf,gBAAkB,SAClB,CACHzjC,KAAKykC,iBAAmB36B,WAAW85B,qBAAoBH,gBAAkB,WAE1E,GAAI5uB,SAASsY,oBAAsBtY,SAASuY,0BAA4BvY,SAAS6X,cAAgB7X,SAAS6vB,gBAAiB,CAE9H1kC,KAAKujB,SAASC,YAAY,YAAa,CACnCgJ,SAAQpC,GAAA7D,cAAcze,OAAOyc,mBAAe,MAAA6F,UAAA,OAAA,EAAAA,GAAEoC,SAAU,EACxDF,QAAOmG,GAAAlM,cAAcze,OAAOyc,mBAAe,MAAAkO,UAAA,OAAA,EAAAA,GAAEnG,QAAS,EACtDlI,YAAamC,cAAcze,OAAOsc,aAAe,KAAOmC,cAAcze,OAAOsc,YAAc,MAC3FD,YAAaoC,cAAcze,OAAOqc,aAAe,KAAOoC,cAAcze,OAAOqc,YAAc,QAC5F,SAACviB,MAAOwc,UACP,GAAIxc,MAAO,CACPkgB,OAAOlgB,MAAM,kCAAmCA,eAGrD,CACHkgB,OAAOlgB,MAAM,WAAaiT,SAAStE,UAAY,aAAesE,SAASf,aAAe,SAAWe,SAASqqB,YAAc,uDAMxHlR,QAAAjvB,UAAAigC,WAAR,SAAmBJ,OAAnB,IAAA/a,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzBwe,MAAKN,SAASsQ,SAAQ,SAACjyB,OACnB,KAAMA,MAAO,CACTyD,OAAOzD,WACJ,CAEH,IAAM2hC,WAAa1f,MAAKyf,iBAAiB1E,OAEzC/a,MAAKN,SAASC,YAAY,WAAY+f,YAAY,SAAC3hC,MAAOwc,UACtD,KAAMxc,MAAO,CACTyD,OAAOzD,WACJ,CAEHiiB,MAAK8gB,wBAAwBvmB,UAG7ByF,MAAKG,WAAa,IAAIyZ,aAAAxb,WAAW4B,MAAMzF,UAGvC,IAAMwmB,SAAS,CACXC,YAAa,IAAI9/B,MACjBie,QAAS,IAAIje,OAEjB,IAAM+/B,qBAAkD1mB,SAASve,MACjEilC,qBAAqBhhB,SAAQ,SAACihB,yBAC1B,IAAM/gB,WAAa,IAAIyZ,aAAAxb,WAAW4B,MAAMkhB,yBACxClhB,MAAK0a,kBAAkB19B,IAAImjB,WAAWzB,aAAcyB,YACpD4gB,SAAOC,YAAYpjC,KAAKuiB,YACxB,KAAMA,WAAWlc,OAAQ,CACrB+b,MAAKua,qBAAqBv9B,IAAImjB,WAAWlc,OAAO+c,SAAU,MAC1D+f,SAAO5hB,QAAQvhB,KAAKuiB,WAAWlc,YAKvC+b,MAAKqB,GAAG7F,UAAU,oBAAqB,CAAC,IAAIwe,kBAAAuD,gBAAgB,MAAOvd,MAAM,oBAAqBA,MAAKG,WAAY,MAG/G4gB,SAAOC,YAAY/gB,SAAQ,SAAAE,YACvBH,MAAKqB,GAAG7F,UAAU,oBAAqB,CAAC,IAAIwe,kBAAAuD,gBAAgB,MAAOvd,MAAM,oBAAqBG,WAAY,SAI9G4gB,SAAO5hB,QAAQc,SAAQ,SAAAhc,QACnB+b,MAAKqB,GAAG7F,UAAU,gBAAiB,CAAC,IAAIma,cAAAU,YAAY,MAAOrW,MAAM,gBAAiB/b,OAAQ,SAG9F1C,sBAQhB4oB,QAAAjvB,UAAA0iC,oBAAR,SAA4B5T,QACxB,KAAM7tB,KAAKgkB,WAAWlc,OAAQ,CAE1B9H,KAAKgkB,WAAWlc,OAAO83B,oBACvB,GAAI5/B,KAAKgkB,WAAWlc,OAAOokB,uBAAwB,CAE/ClsB,KAAKgkB,WAAWlc,OAAOod,GAAG7F,UAAU,yBAA0B,CAACwO,YAKnEG,QAAAjvB,UAAAskC,uBAAR,WACIlH,cAAcn8B,KAAKwkC,mBACnB7W,aAAa3tB,KAAKykC,mBAGdzW,QAAAjvB,UAAAggC,qBAAR,SAA6Bpc,UACzB,UAAWA,WAAa,SAAU,CAC9B,OAAOiB,KAAKlJ,UAAUiI,cACnB,CACH,OAAOA,WAILqL,QAAAjvB,UAAAoiC,cAAV,SAAwB5e,aAAsB0Q,cAA9C,IAAApP,MAAA7jB,KACI,OAAO,IAAImF,SAAoB,SAACC,QAASC,QACrC,IAAM2e,WAAaH,MAAK0a,kBAAkB39B,IAAI2hB,cAC9C,KAAMyB,WAAY,CAEd5e,QAAQ4e,gBACL,CACH,GAAIH,MAAKG,WAAWzB,eAAiBA,aAAc,CAE/Cnd,QAAQye,MAAKG,gBACV,CAEH3e,OAAO,IAAImgB,gBAAAQ,cAAcR,gBAAAS,kBAAkB6S,cAAe7F,qBAMlEjF,QAAAjvB,UAAAuiC,oBAAR,SAA4B/e,cAA5B,IAAAsB,MAAA7jB,KACI,OAAO,IAAImF,SAAoB,SAACC,QAASC,QACrC,IAAM2e,WAAaH,MAAK0a,kBAAkB39B,IAAI2hB,cAC9C,KAAMyB,WAAY,CAEd5e,QAAQ4e,gBACL,CAEH,IAAMiP,aAAe,qBAAuB1Q,aAAe,sCACvD,gCAAkCqB,KAAKlJ,UAAUmJ,MAAK0a,kBAAkBn6B,QAE5EiB,OAAO,IAAImgB,gBAAAQ,cAAcR,gBAAAS,kBAAkB6S,cAAe7F,oBAK9DjF,QAAAjvB,UAAA8/B,aAAR,SAAqBD,OACjB,IAAMoG,MAAQpG,MAAMoG,MAAM,+EAC1B,KAAMA,MAAO,CACT,IAAMh+B,IAAM,CACRyD,SAAUu6B,MAAM,GAChBC,KAAMD,MAAM,GACZE,SAAUF,MAAM,GAChB/C,KAAM+C,MAAM,GACZG,SAAUH,MAAM,GAChBI,OAAQJ,MAAM,GACdK,KAAML,MAAM,IAGhB,IAAMnf,OAAS+Y,MAAM9zB,MAAM,KAC3B,IAAMw6B,YAAcC,UAAU1f,OAAO,IAChC/a,MAAM,KACN/D,KAAI,SAAAy+B,OAAS,OAAAA,MAAM16B,MAAM,QACzBuD,QAAO,SAACo3B,OAAQrb,QAAC/lB,IAAG+lB,GAAA,GAAEvqB,MAAKuqB,GAAA,GACxBqb,OAAOphC,KAAOxE,MACd,OAAO4lC,SACR,IAEPzlC,KAAK6iB,UAAoByiB,YAAY,aACrC,IAAM3Z,OAAS2Z,YAAY,UAC3B,IAAM1Z,SAAW0Z,YAAY,YAC7B,IAAMxZ,oBAAsBwZ,YAAY,uBAExC,KAAM3Z,OAAQ,CACV3rB,KAAKujB,SAASoI,OAASA,OAE3B,KAAMC,SAAU,CACZ5rB,KAAKujB,SAASqI,SAAW,KAE7B,KAAME,oBAAqB,CACvB9rB,KAAKujB,SAASuI,qBAAuBA,oBAGzC9rB,KAAKujB,SAAS4Q,MAAQ,SAAWntB,IAAIi+B,KAAO,YAC5CjlC,KAAKujB,SAASmiB,QAAU,WAAa1+B,IAAIi+B,SAEtC,CACHnjB,OAAOlgB,MAAM,UAAYg9B,MAAQ,oBAIjC5Q,QAAAjvB,UAAA4lC,wBAAR,SAAgC1+B,MAC5BjG,KAAK6iB,UAAY5c,KAAKic,QACtB,GAAIjc,KAAK0/B,UAAY,MAAQ1/B,KAAK2/B,cAAgB,MAAQ3/B,KAAK4/B,gBAAkB,KAAM,CACnF,IAAMC,QAAU,QAAU7/B,KAAK0/B,SAAW,QAC1C,IAAMI,SAAW,QAAU9/B,KAAK0/B,SAAW,QAC3C,IAAMK,SAAWD,SAAW,iBAC5B/lC,KAAKujB,SAAS0iB,WAAa,CACvB,CAAEh7B,KAAM,CAAC66B,UACT,CAAE76B,KAAM,CAAC86B,SAAUC,UAAWj7B,SAAU9E,KAAK2/B,aAAc56B,WAAY/E,KAAK4/B,iBAEhF/jB,OAAOoF,IAAI,wBAA0BjhB,KAAK0/B,UAC1C7jB,OAAOoF,IAAI,0BAA4BjhB,KAAK2/B,aAAe,IAAM3/B,KAAK4/B,eAAiB,KAE3F7lC,KAAKujB,SAASlB,KAAOpc,KAAKoc,KAC1BriB,KAAKkmC,aAAe,CAChB9G,UAAW,KACXW,QAAS//B,KAAKujB,SAASlB,OAAS,aAChC8d,eAAgBngC,KAAKujB,SAASlB,OAAS,YACvC6d,gBAAiBlgC,KAAKujB,SAASlB,OAAS,aAE5CP,OAAOoB,KAAK,4BAA8Bjd,KAAKkK,SAC/C,GAAIlK,KAAKkK,UAAYnQ,KAAKujB,SAASwI,eAAgB,CAC/CjK,OAAOriB,KAAK,oBAAsBwG,KAAKkK,QACnC,2BAA6BnQ,KAAKujB,SAASwI,eAC3C,6DAIhB,OAAAiC,QAvzCA,CAA6B4P,kBAAA7Y,iBAAhB7mB,QAAA8vB,QAAAA,sxCC5Db,IAAA0P,SAAA9/B,QAAA,YAGA,IAAA+/B,aAAA//B,QAAA,gBACA,IAAAggC,kBAAAhgC,QAAA,qBAGA,IAAAuoC,aAAAvoC,QAAA,6CACA,IAAAwoC,cAAAxoC,QAAA,+CACA,IAAAyoC,yBAAAzoC,QAAA,qDACA,IAAA0oC,qBAAA1oC,QAAA,iDACA,IAAA2nB,6BAAA3nB,QAAA,yDACA,IAAA4nB,gBAAA5nB,QAAA,2CACA,IAAAikB,iBAAAjkB,QAAA,6CACA,IAAA8oB,WAAA9oB,QAAA,sCAKA,IAAAkiB,KAAAliB,QAAA,QAIA,IAAMkkB,OAAyBD,iBAAAE,eAAeC,cAK9C,IAAInN,SAOJ,IAAA4P,OAAA,SAAAiV,QAA4BC,UAAAlV,OAAAiV,QAgKxB,SAAAjV,OAAYvC,QAAkBna,SAA9B,IAAA8b,MAEI6V,OAAAv7B,KAAA6B,OAAOA,KArEH6jB,MAAA0iB,oBAAsB,MAK9B1iB,MAAAoY,4BAA8B,MAI9BpY,MAAAqI,uBAAyB,MAIzBrI,MAAAmc,cAAgB,MAoBhBnc,MAAA2iB,mCAAqC,MAIrC3iB,MAAA4iB,uCAAyC,MAIzC5iB,MAAA6iB,kCAAoC,MAIpC7iB,MAAA8iB,sCAAwC,MAIxC9iB,MAAA+iB,yBAA2B,MAI3B/iB,MAAAgjB,6BAA+B,MAiB3BhyB,SAAW6R,WAAAG,cAAc7E,cACzB6B,MAAK3B,QAAUA,QAEf,GAAIna,QAAQmE,eAAe,MAAO,CAE9B2X,MAAKc,kBAA0C5c,QAC/C8b,MAAKgB,SAAWhB,MAAKc,kBAAkBnC,GACvCqB,MAAKpB,aAAeoB,MAAKc,kBAAkBjC,UAC3CmB,MAAKI,SAAWJ,MAAKc,kBAAkBV,SACvCJ,MAAKK,SAAWL,MAAKc,kBAAkBT,SACvC,GAAIL,MAAKI,SAAU,CACfJ,MAAKM,YAAcN,MAAKc,kBAAkBR,YAE9C,GAAIN,MAAKK,SAAU,CACfL,MAAKO,YAAcP,MAAKc,kBAAkBP,YAC1CP,MAAKQ,aAAgBR,MAAKc,kBAAkBN,YAAelkB,UAAY0jB,MAAKc,kBAAkBN,YAC9FR,MAAKS,UAAaT,MAAKc,kBAAkBL,aAAe,EAAKnkB,UAAY0jB,MAAKc,kBAAkBL,UAChGT,MAAKU,gBAAkBV,MAAKc,kBAAkBJ,gBAElD,KAAMV,MAAKc,kBAAkBH,QAAWtlB,OAAOkF,KAAKyf,MAAKc,kBAAkBH,QAAQpmB,OAAS,EAAI,CAC5F,KAAMylB,MAAKc,kBAAkBH,OAAO6B,gBAAkBnnB,OAAOkF,KAAKyf,MAAKc,kBAAkBH,OAAO6B,gBAAgBjoB,SAAW,EAAG,QACnHylB,MAAKc,kBAAkBH,OAAO6B,eAEzCxC,MAAKW,OAASX,MAAKc,kBAAkBH,YAEtC,CAEHX,MAAKP,mBAA4Cvb,QAEjD8b,MAAKI,SAAWJ,MAAK8Y,cACrB9Y,MAAKK,SAAWL,MAAKiY,cAErB,GAAIjY,MAAKI,SAAU,CACfJ,MAAKM,cAAgBN,MAAKP,mBAAmBgQ,oBAAoBzE,aAErE,GAAIhL,MAAKK,SAAU,CACfL,MAAKO,cAAgBP,MAAKP,mBAAmBgQ,oBAAoBxE,aACjEjL,MAAKS,UAAYT,MAAKP,mBAAmBgQ,oBAAoBhP,UAC7D,UAAWiK,mBAAqB,aAAe1K,MAAKP,mBAAmBgQ,oBAAoB9E,uBAAuBD,iBAAkB,CAChI1K,MAAKQ,YAAc,aAChB,CACHR,MAAKQ,YAAcR,MAAKkY,eAAiB,SAAW,UAG5D,KAAMlY,MAAKP,mBAAmBgQ,oBAAoB9O,OAAQ,CACtDX,MAAKW,OAASX,MAAKP,mBAAmBgQ,oBAAoB9O,QAIlEX,MAAKqB,GAAGhiB,GAAG,uBAAuB,WAC9B2gB,MAAK0C,cAAcugB,kBAAkBjjB,MAAKiP,aAC1ChR,OAAOuB,MAAM,oBAAsBQ,MAAKiP,YAAc,wBAA0BjP,MAAKgB,SAAW,qBAQxGJ,OAAA1lB,UAAAmE,GAAA,SAAG3B,KAAcU,SACby3B,OAAA36B,UAAMsmB,MAAKlnB,KAAA6B,KAACuB,KAAM,UAAYA,KAAO,0BAA4BvB,KAAK6kB,SAAW,IAAK5iB,SACtF,OAAOjC,MAOXykB,OAAA1lB,UAAAkB,KAAA,SAAKsB,KAAcU,SACfy3B,OAAA36B,UAAMumB,QAAOnnB,KAAA6B,KAACuB,KAAM,UAAYA,KAAO,+BAAiCvB,KAAK6kB,SAAW,IAAK5iB,SAC7F,OAAOjC,MAOXykB,OAAA1lB,UAAAmF,IAAA,SAAI3C,KAAcU,SACdy3B,OAAA36B,UAAMmF,IAAG/F,KAAA6B,KAACuB,KAAMU,SAChB,OAAOjC,MAYXykB,OAAA1lB,UAAAgoC,YAAA,SAAYxlC,KAAcwG,SAA1B,IAAA8b,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzByc,OAAOoB,KAAK,6BAA+BW,MAAKgB,UAChD9c,UAAYA,QAAUA,QAAU,GAChC,UAAWA,UAAY,SAAU,CAC7BA,QAAU6b,KAAKlJ,UAAU3S,SAE7B8b,MAAK3B,QAAQqB,SAASC,YAClB,cACA,CAAEqB,SAAUhB,MAAKgB,SAAUtjB,KAAIA,KAAEwG,QAAOA,UACxC,SAACnG,MAAOwc,UACJ,GAAIxc,MAAO,CACPkgB,OAAOlgB,MAAM,oCAAsCiiB,MAAKgB,SAAUjjB,OAClE,GAAIA,MAAM5D,OAAS,IAAK,CACpBqH,OAAO,IAAImgB,gBAAAQ,cAAcR,gBAAAS,kBAAkBC,2BAA4B,qDACpE,CACH7gB,OAAOzD,YAER,CACHkgB,OAAOoB,KAAK,yCAA2CW,MAAKgB,UAC5D,IAAMsB,SAAmBtC,MAAKW,OAC9BX,MAAKW,OAAS,IAAIkZ,SAAAjY,OAAOlkB,KAAMwG,SAC/B8b,MAAKW,OAAO1c,OAAS+b,MACrBA,MAAK3B,QAAQ7C,UAAU,wBAAyB,CAAC,IAAIkG,6BAAAe,2BAA2BzC,MAAK3B,QAAS2B,MAAM,SAAUA,MAAKW,OAAQ2B,SAAU,iBACrItC,MAAK0C,cAAclH,UAAU,wBAAyB,CAAC,IAAIkG,6BAAAe,2BAA2BzC,MAAK0C,cAAe1C,MAAM,SAAUA,MAAKW,OAAQ2B,SAAU,iBACjJ/gB,QAAQye,MAAKW,gBAYjCC,OAAA1lB,UAAAioC,aAAA,WAAA,IAAAnjB,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzByc,OAAOoB,KAAK,6BAA+BW,MAAKgB,UAChDhB,MAAK3B,QAAQqB,SAASC,YAClB,eACA,CAAEqB,SAAUhB,MAAKgB,WACjB,SAACjjB,MAAOwc,UACJ,GAAIxc,MAAO,CACPkgB,OAAOlgB,MAAM,oCAAsCiiB,MAAKgB,SAAUjjB,OAClE,GAAIA,MAAM5D,OAAS,IAAK,CACpBqH,OAAO,IAAImgB,gBAAAQ,cAAcR,gBAAAS,kBAAkBC,2BAA4B,sDACpE,CACH7gB,OAAOzD,YAER,CACHkgB,OAAOoB,KAAK,2CAA6CW,MAAKgB,UAC9D,IAAMsB,SAAWtC,MAAKW,cACfX,MAAKW,OACZX,MAAK3B,QAAQ7C,UAAU,wBAAyB,CAAC,IAAIkG,6BAAAe,2BAA2BzC,MAAK3B,QAAS2B,MAAM,SAAUA,MAAKW,OAAS2B,SAAU,iBACtItC,MAAK0C,cAAclH,UAAU,wBAAyB,CAAC,IAAIkG,6BAAAe,2BAA2BzC,MAAK0C,cAAe1C,MAAM,SAAUA,MAAKW,OAAS2B,SAAU,iBAClJ/gB,kBAYpBqf,OAAA1lB,UAAAm8B,qBAAA,WACI,OAAOl7B,KAAKinC,WAAWnD,IAQ3Brf,OAAA1lB,UAAAsoB,eAAA,WACI,OAAOrnB,KAAK8yB,aAQhBrO,OAAA1lB,UAAAo+B,eAAA,SAAerK,aACX9yB,KAAK8yB,YAAcA,aAMvBrO,OAAA1lB,UAAA68B,0BAAA,WACI57B,KAAKklB,GAAG7F,UAAU,sBAAuB,KAM7CoF,OAAA1lB,UAAA0jC,cAAA,WACI,OAAOziC,KAAKinC,YAMhBxiB,OAAA1lB,UAAAy7B,oBAAA,SAAoB36B,OAChBG,KAAKumC,oBAAsB1mC,OAM/B4kB,OAAA1lB,UAAAi+B,yBAAA,SAAyB1Z,oBACrBtjB,KAAKsjB,mBAAqBA,oBAM9BmB,OAAA1lB,UAAAqgC,UAAA,WAAA,IAAAvb,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzBwe,MAAKqf,sBAAsB,OACtBja,MAAK,WACF7jB,aAEH8jB,OAAM,SAAAtnB,OACHyD,OAAOzD,cAQvB6iB,OAAA1lB,UAAAghC,QAAA,WAAA,IAAAlc,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzB,GAAIwe,MAAKoY,4BAA6B,CAClCpY,MAAKof,mBAAmB,OACnBha,MAAK,WACF7jB,aAEH8jB,OAAM,SAAAtnB,OACHyD,OAAOzD,cAEZ,CACHiiB,MAAKqB,GAAGjlB,KAAK,2BAA2B,WACpC4jB,MAAKkc,UACA9W,MAAK,WACF7jB,aAEH8jB,OAAM,SAAAtnB,OACHyD,OAAOzD,kBAU/B6iB,OAAA1lB,UAAA6gC,kBAAA,WACI,KAAM5/B,KAAKinC,WAAY,CACnBjnC,KAAKinC,WAAWniB,UAChB9kB,KAAKknC,kBAETplB,OAAOoB,QAAQljB,KAAKsjB,mBAAqB,YAAc,YAAc,qCAAuCtjB,KAAK6kB,SAAW,oBAMhIJ,OAAA1lB,UAAA8gC,mBAAA,WACI,GAAI7/B,KAAK8yB,YAAa,CAClB9yB,KAAK8yB,YAAYZ,iBAAiBpO,SAAQ,SAACqO,OACvCA,MAAMzoB,UAEV1J,KAAK8yB,YAAY7F,iBAAiBnJ,SAAQ,SAACqO,OACvCA,MAAMzoB,iBAEH1J,KAAK8yB,YAGhB,GAAI9yB,KAAKq6B,uCAAwC,CAC7Cr6B,KAAKq6B,uCAAuCnI,iBAAiBpO,SAAQ,SAACqO,OAClEA,MAAMzoB,UAEV1J,KAAKq6B,uCAAuCpN,iBAAiBnJ,SAAQ,SAACqO,OAClEA,MAAMzoB,iBAEH1J,KAAKq6B,uCAEhB,KAAMr6B,KAAKmnC,YAAa,CACpB,KAAMnnC,KAAKmnC,YAAYz9B,KAAM,CACzB1J,KAAKmnC,YAAYz9B,cAEd1J,KAAKmnC,YAEhBrlB,OAAOoB,QAAQljB,KAAKsjB,mBAAqB,SAAW,WAAa,sCAAwCtjB,KAAK6kB,SAAW,sBAM7HJ,OAAA1lB,UAAAq7B,gBAAA,WACI,OAAOp6B,KAAKumC,qBAMhB9hB,OAAA1lB,UAAA49B,YAAA,WACI,QAAU38B,KAAKsjB,oBACXtjB,KAAKsjB,mBAAmBgQ,oBAAoBhF,cAAgB,MAC5DtuB,KAAKsjB,mBAAmBgQ,oBAAoBhF,cAAgB,OAMpE7J,OAAA1lB,UAAA+8B,YAAA,WACI,QAAU97B,KAAKsjB,oBACXtjB,KAAKsjB,mBAAmBgQ,oBAAoB9E,cAAgB,MAC5DxuB,KAAKsjB,mBAAmBgQ,oBAAoB9E,cAAgB,OAMpE/J,OAAA1lB,UAAAg9B,aAAA,WACI,IAAIqL,OAASpnC,KAAKsjB,mBAAmBgQ,oBAAoB9E,cAAgB,SACzE,GAAI3Z,SAASkb,aAAc,CACvBqX,cAAgBpnC,KAAKsjB,mBAAmBgQ,oBAAoB9E,cAAgB,UACxExuB,KAAKsjB,mBAAmBgQ,oBAAoB9E,YAAYqE,WAAW,WAE3E,QAAS7yB,KAAKsjB,oBAAsB8jB,QAMxC3iB,OAAA1lB,UAAA4hC,yBAAA,WAAA,IAAA9c,MAAA7jB,KACIA,KAAKqnC,4BACL,IAAKrnC,KAAKwmC,mCAAoC,CAC1CxmC,KAAKwmC,mCAAqC,KAC1CxmC,KAAKmnC,YAAYjkC,GAAG,YAAY,WAC5B2gB,MAAK3B,QAAQ7C,UAAU,yBAA0B,CAAC,IAAIgnB,yBAAAiB,uBAAuBzjB,MAAK3B,QAAS,yBAA0B2B,MAAKG,WAAYH,MAAKgB,YAC3IhB,MAAK4iB,uCAAyC,WAQ1DhiB,OAAA1lB,UAAA8hC,6BAAA,WAAA,IAAAhd,MAAA7jB,KACIA,KAAKqnC,4BACL,IAAKrnC,KAAKymC,uCAAwC,CAC9CzmC,KAAKymC,uCAAyC,KAC9CzmC,KAAKmnC,YAAYlnC,KAAK,YAAY,WAC9B,GAAI4jB,MAAK4iB,uCAAwC,CAE7C5iB,MAAK3B,QAAQ7C,UAAU,yBAA0B,CAAC,IAAIgnB,yBAAAiB,uBAAuBzjB,MAAK3B,QAAS,yBAA0B2B,MAAKG,WAAYH,MAAKgB,YAE/IhB,MAAKmd,0BAA0B,WAQ3Cvc,OAAA1lB,UAAAiiC,0BAAA,SAA0BuG,gBACtB,KAAMvnC,KAAKmnC,YAAa,CACpBnnC,KAAKymC,uCAAyC,MAC9C,GAAIc,eAAgB,CAChB,GAAIvnC,KAAKwmC,mCAAoC,CAEzC,YAED,CACHxmC,KAAKwmC,mCAAqC,MAG9C,GAAIxmC,KAAK4mC,0BACL5mC,KAAK6mC,8BACL7mC,KAAK0mC,mCACL1mC,KAAK2mC,sCAAuC,CAE5C3mC,KAAKmnC,YAAYjjC,IAAI,gBAClB,CAEHlE,KAAKmnC,YAAYz9B,cACV1J,KAAKmnC,eAQxB1iB,OAAA1lB,UAAA6hC,wBAAA,WAAA,IAAA/c,MAAA7jB,KACIA,KAAKqnC,4BACL,IAAKrnC,KAAK0mC,kCAAmC,CACzC1mC,KAAK0mC,kCAAoC,KACzC1mC,KAAKmnC,YAAYjkC,GAAG,oBAAoB,WACpC2gB,MAAK3B,QAAQ7C,UAAU,wBAAyB,CAAC,IAAIgnB,yBAAAiB,uBAAuBzjB,MAAK3B,QAAS,wBAAyB2B,MAAKG,WAAYH,MAAKgB,YACzIhB,MAAK8iB,sCAAwC,WAQzDliB,OAAA1lB,UAAA+hC,4BAAA,WAAA,IAAAjd,MAAA7jB,KACIA,KAAKqnC,4BACL,IAAKrnC,KAAK2mC,sCAAuC,CAC7C3mC,KAAK2mC,sCAAwC,KAC7C3mC,KAAKmnC,YAAYlnC,KAAK,oBAAoB,WACtC,GAAI4jB,MAAK8iB,sCAAuC,CAE5C9iB,MAAK3B,QAAQ7C,UAAU,wBAAyB,CAAC,IAAIgnB,yBAAAiB,uBAAuBzjB,MAAK3B,QAAS,wBAAyB2B,MAAKG,WAAYH,MAAKgB,YAE7IhB,MAAKqd,yBAAyB,WAQ1Czc,OAAA1lB,UAAAmiC,yBAAA,SAAyBqG,gBACrB,KAAMvnC,KAAKmnC,YAAa,CACpBnnC,KAAK2mC,sCAAwC,MAC7C,GAAIY,eAAgB,CAChB,GAAIvnC,KAAK0mC,kCAAmC,CAGxC,YAED,CACH1mC,KAAK0mC,kCAAoC,MAG7C,GAAI1mC,KAAK4mC,0BACL5mC,KAAK6mC,8BACL7mC,KAAKwmC,oCACLxmC,KAAKymC,uCAAwC,CAE7CzmC,KAAKmnC,YAAYjjC,IAAI,wBAClB,CAEHlE,KAAKmnC,YAAYz9B,cACV1J,KAAKmnC,eAQxB1iB,OAAA1lB,UAAAyoC,wBAAA,SAAwBC,OAAxB,IAAA5jB,MAAA7jB,KACI,GAAIA,KAAKqnC,4BAA6B,CAClC,IAAKrnC,KAAK4mC,0BAA4Ba,MAAO,CACzCznC,KAAK4mC,yBAA2B,KAChC5mC,KAAKmnC,YAAYjkC,GAAG,iBAAiB,SAAAwkC,WACjC,IAAMvhB,SAAWtC,MAAKsjB,YAAYQ,eAClC,IAAM9nC,MAAQ,CAAE+tB,SAAU8Z,UAAWvhB,SAAQA,UAC7CtC,MAAKsjB,YAAYQ,eAAiBD,UAClC7jB,MAAK0C,cAAclH,UAAU,0BAA2B,CAAC,IAAIinB,qBAAAsB,mBAAmB/jB,MAAK0C,cAAe,0BAA2B1mB,iBAGpI,CAEHG,KAAK4mC,yBAA2B,OAOxCniB,OAAA1lB,UAAA8oC,4BAAA,SAA4BJ,OAA5B,IAAA5jB,MAAA7jB,KACI,GAAIA,KAAKqnC,4BAA6B,CAClC,IAAKrnC,KAAK6mC,8BAAgCY,MAAO,CAC7CznC,KAAK6mC,6BAA+B,KACpC7mC,KAAKmnC,YAAYlnC,KAAK,iBAAiB,SAAAynC,WACnC,IAAMvhB,SAAWtC,MAAKsjB,YAAYQ,eAClC,IAAM9nC,MAAQ,CAAE+tB,SAAU8Z,UAAWvhB,SAAQA,UAC7CtC,MAAKsjB,YAAYQ,eAAiBD,UAClC7jB,MAAKikB,yBAAyB,MAC9BjkB,MAAK0C,cAAclH,UAAU,0BAA2B,CAAC,IAAIinB,qBAAAsB,mBAAmB/jB,MAAK0C,cAAe,0BAA2B1mB,iBAGpI,CAEHG,KAAK6mC,6BAA+B,OAO5CpiB,OAAA1lB,UAAA+oC,yBAAA,SAAyBP,gBACrB,KAAMvnC,KAAKmnC,YAAa,CACpBnnC,KAAK6mC,6BAA+B,MACpC,GAAIU,eAAgB,CAChB,GAAIvnC,KAAK4mC,yBAA0B,CAG/B,YAED,CACH5mC,KAAK4mC,yBAA2B,MAGpC,GAAI5mC,KAAKwmC,oCACLxmC,KAAKymC,wCACLzmC,KAAK0mC,mCACL1mC,KAAK2mC,sCAAuC,CAE5C3mC,KAAKmnC,YAAYjjC,IAAI,qBAClB,CAEHlE,KAAKmnC,YAAYz9B,cACV1J,KAAKmnC,eAQxB1iB,OAAA1lB,UAAAgpC,QAAA,WAEI,OAAS/nC,KAAK2kB,qBAAuB3kB,KAAKsjB,oBAM9CmB,OAAA1lB,UAAAipC,wBAAA,WAAA,IAAAnkB,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzBwe,MAAKokB,YAAYC,8BACZjf,MAAK,SAAAkf,QAAU,OAAA/iC,QAAQ+iC,WACvBjf,OAAM,SAAAtnB,OAAS,OAAAyD,OAAOzD,cAOnC6iB,OAAA1lB,UAAAqpC,0BAAA,WACI,OAAOpoC,KAAKinC,WAAWoB,uBAM3B5jB,OAAA1lB,UAAAupC,yBAAA,WACI,OAAOtoC,KAAKinC,WAAWsB,sBAM3B9jB,OAAA1lB,UAAAikC,+BAAA,WACI,IAAKhjC,KAAKyiC,kBAAoBziC,KAAKk7B,uBAAwB,CACvD,OAAO,MAEX,GAAIl7B,KAAK+nC,aAAe/nC,KAAKkiB,QAAQqB,SAASsI,sBAAsB2c,uCAAwC,CACxG1mB,OAAOriB,KAAK,8GAAgHO,KAAK6kB,SAAW,8BAC5I,OAAO,KAEX,IAAM4jB,mBAA4CzoC,KAAKk7B,uBAAuBuN,mBAC9E,OAAOA,qBAAuB,gBAAkBA,qBAAuB,UAKnEhkB,OAAA1lB,UAAAsoC,0BAAR,WACI,KAAMrnC,KAAK8yB,YAAa,CACpB,IAAK9yB,KAAKmnC,YAAa,CACnB,IAAMuB,cAAgB1oC,KAAK0oC,YAAc1oC,KAAK0oC,YAAe1oC,KAAKkiB,QAAQqB,SAASsI,sBAAsB8c,gCAAkC,GAC3ID,YAAYxgC,gBAAmBwgC,YAAYxgC,WAAa,SAAYwgC,YAAYxgC,SAAW,IAC3FwgC,YAAYvgC,iBAAoBugC,YAAYvgC,YAAc,SAAYugC,YAAYvgC,WAAa,GAC/FnI,KAAKmnC,YAAcrnB,KAAK9f,KAAK8yB,YAAa4V,aAE9C,OAAO,KAEX,OAAO,OAMXjkB,OAAA1lB,UAAAkkC,mBAAA,SAAmB2F,WAAnB,IAAA/kB,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QAEzB,IAAKujC,UAAW,CACZ/kB,MAAKglB,iBAGT,IAAMC,qBAAuB,CACzBhX,MAAOjO,MAAK8Y,cACZ/P,MAAO/I,MAAKiY,eAGhB,IAAM/zB,QAAU,CACZ+qB,YAAajP,MAAKiP,YAClB+G,iBAAkBiP,qBAClBC,eAAgBllB,MAAKG,WAAWb,iBAAiBxf,KAAKkgB,MAAKG,YAC3DiiB,WAAYpiB,MAAKmlB,oBACjBC,UAAW,OAGf,IAAMvN,gBAAkB,SAACwN,eACrBpnB,OAAOuB,MAAM,mCACPQ,MAAKgB,SAAUqkB,eAErB,IAAMtjB,OAASgjB,UAAY,kBAAoB,eAC/C,IAAI/iB,OACJ,GAAI+iB,UAAW,CACX/iB,OAAS,CACL/d,OAAQ+b,MAAKgB,cAEd,CACH,IAAIR,YAAc,GAClB,GAAIR,MAAKiY,cAAe,CACpBzX,mBAAsBkK,mBAAqB,aAAe1K,MAAKP,mBAAmBgQ,oBAAoB9E,uBAAuBD,iBAAoB,SAAY1K,MAAKkY,eAAiB,SAAW,SAElMlW,OAAS,CACLsjB,WAAYtlB,MAAKuW,mBAAqB,MACtCnW,SAAUJ,MAAK8Y,cACfzY,SAAUL,MAAKiY,cACf3X,YAAaN,MAAKM,YAClBC,YAAaP,MAAKO,YAClBC,YAAWA,YACXC,YAAaT,MAAKS,UAAYT,MAAKS,WAAa,EAChDC,gBAAiBX,KAAKlJ,UAAUmJ,MAAKU,iBACrCC,OAAQX,MAAKP,mBAAmBgQ,oBAAoB9O,QAG5DqB,OAAO,YAAcqjB,cAErBrlB,MAAK3B,QAAQqB,SAASC,YAAYoC,OAAQC,QAAQ,SAACjkB,MAAOwc,UACtD,GAAIxc,MAAO,CACP,GAAIA,MAAM5D,OAAS,IAAK,CACpBqH,OAAO,IAAImgB,gBAAAQ,cAAcR,gBAAAS,kBAAkBC,2BAA4B,8CACpE,CACH7gB,OAAO,0BAA4Bue,KAAKlJ,UAAU9Y,aAEnD,CACHiiB,MAAKojB,WAAWmC,cAAchrB,SAASirB,UAAW,OAC7CpgB,MAAK,WACFpF,MAAKgB,SAAWzG,SAASoE,GACzBqB,MAAKpB,aAAerE,SAASsE,UAC7BmB,MAAKqI,uBAAyB,KAC9BrI,MAAKmc,cAAgB,KACrB,GAAInc,MAAKuW,kBAAmB,CACxBvW,MAAKwW,uCAAyCxW,MAAKiP,YACnDjP,MAAKylB,oCAET,GAAIV,UAAW,CACX/kB,MAAKqB,GAAG7F,UAAU,kCAAmC,QAClD,CACHwE,MAAKqB,GAAG7F,UAAU,8BAA+B,IAErDwE,MAAK0lB,kBACLznB,OAAOoB,KAAK,gBAAkBW,MAAKgB,SAAW,mBAAqB+jB,UAAY,cAAgB,aAAe,eAC9GxjC,aAEH8jB,OAAM,SAAAtnB,OACHyD,OAAOzD,eAM3B,GAAIgnC,UAAW,CACX/kB,MAAK+b,oBAET,GAAI/b,MAAKuW,kBAAmB,CACxBvW,MAAKojB,WAAa,IAAId,aAAAqD,mBAAmBzhC,aACtC,CACH8b,MAAKojB,WAAa,IAAId,aAAAsD,mBAAmB1hC,SAE7C8b,MAAKojB,WAAWyC,oCAAoC,gBAAkB7lB,MAAKG,WAAWzB,cACtFsB,MAAKojB,WAAW0C,gBAAgB1gB,MAAK,SAAA2gB,UACjClO,gBAAgBkO,aACjB1gB,OAAM,SAAAtnB,OACLyD,OAAO,IAAItH,MAAM,8BAAgC6lB,KAAKlJ,UAAU9Y,gBAQ5E6iB,OAAA1lB,UAAAmkC,sBAAA,SAAsB0F,WAAtB,IAAA/kB,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QAEzB,IAAMwkC,iBAAmB,CACrB/X,MAAOjO,MAAKc,kBAAkBV,SAC9B2I,MAAO/I,MAAKc,kBAAkBT,UAElCpC,OAAOuB,MAAM,wEACTwmB,kBACJ,IAAM9hC,QAAU,CACZghC,eAAgBllB,MAAKG,WAAWb,iBAAiBxf,KAAKkgB,MAAKG,YAC3D6V,iBAAkBgQ,iBAClB5D,WAAYpiB,MAAKmlB,oBACjBC,UAAW,OAGf,IAAMvN,gBAAkB,SAACwN,eACrBpnB,OAAOuB,MAAM,qCACPQ,MAAKgB,SAAUqkB,eAErB,IAAMtjB,OAASgjB,UAAY,kBAAoB,mBAC/C,IAAM/iB,OAAS,CAAE+jB,SAAUV,eAC3BrjB,OAAO+iB,UAAY,SAAW,UAAY/kB,MAAKgB,SAE/ChB,MAAK3B,QAAQqB,SAASC,YAAYoC,OAAQC,QAAQ,SAACjkB,MAAOwc,UACtD,GAAIxc,MAAO,CACPyD,OAAO,IAAItH,MAAM,2BAA6B6lB,KAAKlJ,UAAU9Y,aAC1D,CAIH,GAAIiiB,MAAK3B,QAAQmc,0BAA2B,CACxCxa,MAAK3B,QAAQmc,0BAA4B,MACzCv0B,YAAW,WAGP+Z,MAAK3B,QAAQoc,sCAAwC,QACtD,KAEP,IAAMwL,4BAA8BjmB,MAAK3B,QAAQoc,sCACjDza,MAAKojB,WAAWmC,cAAchrB,SAASirB,UAAWS,6BAA6B7gB,MAAK,WAChFnH,OAAOoB,KAAK,iBAAmBW,MAAKgB,SAAW,mBAAqB+jB,UAAY,cAAgB,eAChG/kB,MAAKylB,oCACLzlB,MAAK0lB,kBACLnkC,aACD8jB,OAAM,SAAAtnB,OACLyD,OAAOzD,eAMvBiiB,MAAKojB,WAAa,IAAId,aAAA4D,mBAAmBhiC,SACzC8b,MAAKojB,WAAWyC,oCAAoC7lB,MAAKgB,UACzDhB,MAAKojB,WAAW0C,gBACX1gB,MAAK,SAAA2gB,UACFlO,gBAAgBkO,aAEnB1gB,OAAM,SAAAtnB,OACHyD,OAAO,IAAItH,MAAM,gCAAkC6lB,KAAKlJ,UAAU9Y,gBAQlF6iB,OAAA1lB,UAAAuqC,kCAAA,WACItpC,KAAK8yB,YAAc,IAAIH,YACvB,IAAI/zB,SACJ,IAAiB,IAAAurB,GAAA,EAAAC,GAAApqB,KAAKinC,WAAWnD,GAAGkG,eAAnB7f,GAAAC,GAAAhsB,OAAA+rB,KAAmC,CAA/CvrB,SAAQwrB,GAAAD,IACT,KAAMvrB,SAASuzB,MAAO,CAClBnyB,KAAK8yB,YAAYb,SAASrzB,SAASuzB,QAG3CrQ,OAAOuB,MAAM,qBAAsBrjB,KAAK8yB,aAExC,KAAM9yB,KAAK8yB,YAAa,CAEpB,GAAI9yB,KAAKumB,yBAAyBoX,aAAA8B,WAAY,CAE1C,KAAMz/B,KAAK8yB,YAAYZ,iBAAiB,GAAI,CACxC,IAAMoI,UAA0Bt6B,KAAKumB,cAAe8H,WAA2B,iBAC/EruB,KAAK8yB,YAAYZ,iBAAiB,GAAGoI,QAAUA,QAEnD,KAAMt6B,KAAK8yB,YAAY7F,iBAAiB,GAAI,CACxC,IAAMqN,UAA0Bt6B,KAAKumB,cAAe8H,WAA2B,iBAC/EruB,KAAK8yB,YAAY7F,iBAAiB,GAAGqN,QAAUA,SAIvDt6B,KAAK47B,4BACL57B,KAAK6oC,mBAILpkB,OAAA1lB,UAAA8pC,eAAR,WACI,KAAM7oC,KAAK8yB,YAAaZ,iBAAiB,GAAI,CAEzC,GAAIlyB,KAAKumB,cAAc0jB,OAAQ,CAE3B,GAAIjqC,KAAKkiB,QAAQsc,2BAA4B,CACzCx+B,KAAK2gC,2BAET,GAAI3gC,KAAKkiB,QAAQuc,+BAAgC,CAC7Cz+B,KAAK6gC,+BAET,GAAI7gC,KAAKkiB,QAAQwc,0BAA2B,CACxC1+B,KAAK4gC,0BAET,GAAI5gC,KAAKkiB,QAAQyc,8BAA+B,CAC5C3+B,KAAK8gC,+BAIb,GAAI9gC,KAAK4mC,yBAA0B,CAC/B5mC,KAAKwnC,wBAAwB,MAEjC,GAAIxnC,KAAK6mC,6BAA8B,CACnC7mC,KAAK6nC,4BAA4B,SAKrCpjB,OAAA1lB,UAAAwqC,gBAAR,WACIvpC,KAAKioC,YAAc,IAAI7B,cAAA8D,YAAYlqC,MACnCA,KAAKioC,YAAYsB,mBAoBb9kB,OAAA1lB,UAAAmoC,gBAAR,WACI,KAAMlnC,KAAKioC,aAAejoC,KAAKioC,YAAYkC,YAAa,CACpDnqC,KAAKioC,YAAYf,oBAIjBziB,OAAA1lB,UAAAiqC,kBAAR,WACI,IAAIoB,YACJ,KAAMpqC,KAAKkiB,QAAQqB,SAASsI,sBAAsBoa,WAAY,CAC1DmE,YAAcpqC,KAAKkiB,QAAQqB,SAASsI,sBAAsBoa,aAAe,UACrE9lC,UACAH,KAAKkiB,QAAQqB,SAASsI,sBAAsBoa,gBAC7C,GAAIjmC,KAAKkiB,QAAQqB,SAAS0iB,WAAY,CACzCmE,YAAcpqC,KAAKkiB,QAAQqB,SAAS0iB,eACjC,CACHmE,YAAcjqC,UAElB,OAAOiqC,aAGH3lB,OAAA1lB,UAAAsrC,mBAAR,WAAA,IAAAxmB,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzB,GAAIwe,MAAKkkB,UAAW,CAIhBlkB,MAAKqX,uBAAuBC,aAAarX,SAAQ,SAAAsX,QAAU,OAAAA,OAAO4I,WAC7D/a,MACG,SAAA7K,UACIA,SAAS0F,SAAQ,SAAAqkB,QAEb,GAAItkB,MAAKymB,eAAenC,QAAS,CAE7B,IAAMoC,YAAc,GAEpBA,YAAY,QAAUpC,OAAO5mC,KAC7BgpC,YAAY,aAAepC,OAAOqC,UAClCD,YAAY,MAAQpC,OAAO3lB,GAG3B,GAAI2lB,OAAO5mC,OAAS,eAAgB,CAChCgpC,YAAY,QAAUpC,OAAOsC,KAC7BF,YAAY,YAAcpC,OAAOuC,SACjCH,YAAY,YAAcpC,OAAOwC,SACjCJ,YAAY,aAAepC,OAAOyC,UAClCL,YAAY,SAAWpC,OAAO0C,MAG9B,KAAM1C,OAAOjX,KAAM,CACfqZ,YAAY,aAAepC,OAAOjX,UAC/B,KAAMiX,OAAO2C,UAAW,CAC3BP,YAAY,aAAepC,OAAO2C,cAC/B,CAEHP,YAAY,aAAgBpC,OAAO3lB,GAAG3X,QAAQ,kBAAoB,EAAK,QAAU,QAGrF,GAAI0/B,YAAY,eAAiB,QAAS,CACtCA,YAAY,iBAAmBpC,OAAO4C,cAG1CR,YAAY,eAAiBpC,OAAO6C,YACpCT,YAAY,aAAepC,OAAO8C,UAItC,GAAI9C,OAAO5mC,OAAS,kBAAoB4mC,OAAO+C,qBAAuB/qC,UAAW,CAE7EoqC,YAAY,4BAA8BpC,OAAOgD,yBACjDZ,YAAY,OAASpC,OAAOiD,qBAC5Bb,YAAY,cAAgBpC,OAAO+C,mBAAqB/C,OAAOkD,kBAInE,GAAIlD,OAAO5mC,OAAS,sBAAwB4mC,OAAO5mC,OAAS,sBAAuB,EAInFugB,OAAOoF,IAAIqjB,2BAI5B,CAIH1mB,MAAKqX,uBAAuB8O,eAAelmB,SAAQ,SAAAllB,UAAY,OAAAA,SAASolC,WACnE/a,MACG,SAAA7K,UACIA,SAAS0F,SAAQ,SAAAqkB,QAEb,GAAItkB,MAAKymB,eAAenC,QAAS,CAE7B,IAAMoC,YAAc,GAEpBA,YAAY,QAAUpC,OAAO5mC,KAC7BgpC,YAAY,aAAepC,OAAOqC,UAClCD,YAAY,MAAQpC,OAAO3lB,GAG3B,GAAI2lB,OAAO5mC,OAAS,cAAe,CAC/BgpC,YAAY,QAAUpC,OAAOsC,KAC7BF,YAAY,YAAcpC,OAAOuC,SACjCH,YAAY,YAAcpC,OAAOwC,SACjCJ,YAAY,aAAepC,OAAOyC,UAClCL,YAAY,SAAWpC,OAAO0C,MAG9B,KAAM1C,OAAOjX,KAAM,CACfqZ,YAAY,aAAepC,OAAOjX,UAC/B,KAAMiX,OAAO2C,UAAW,CAC3BP,YAAY,aAAepC,OAAO2C,cAC/B,CAEHP,YAAY,aAAgBpC,OAAO3lB,GAAG3X,QAAQ,kBAAoB,EAAK,QAAU,QAGrF,GAAI0/B,YAAY,eAAiB,QAAS,CACtCA,YAAY,iBAAmBpC,OAAOmD,cAG1Cf,YAAY,mBAAqBpC,OAAOoD,gBACxChB,YAAY,eAAiBpC,OAAOqD,YACpCjB,YAAY,UAAYpC,OAAOsD,OAC/BlB,YAAY,iBAAmBpC,OAAOuD,cAI1C,GAAIvD,OAAO5mC,OAAS,kBAAoB4mC,OAAO+C,qBAAuB/qC,UAAW,CAE7EoqC,YAAY,4BAA8BpC,OAAOwD,yBACjDpB,YAAY,OAASpC,OAAOiD,qBAC5Bb,YAAY,cAAgBpC,OAAO+C,mBAAqB/C,OAAOkD,kBAInE,GAAIlD,OAAO5mC,OAAS,sBAAwB4mC,OAAO5mC,OAAS,sBAAuB,EAGnFugB,OAAOoF,IAAIqjB,4BASnC9lB,OAAA1lB,UAAAurC,eAAR,SAAuBnC,QACnB,OAAOA,OAAO5mC,OAAS,gBAAkBvB,KAAK+nC,WAC1CI,OAAO5mC,OAAS,gBAAkBvB,KAAK+nC,WACtCI,OAAO5mC,OAAS,kBAAoB4mC,OAAOyD,WAAazD,OAAO8C,UAAY,GAGxF,OAAAxmB,OApoCA,CAA4BmZ,kBAAA7Y,iBAAf7mB,QAAAumB,OAAAA,ihCCpCb,IAAAmZ,kBAAAhgC,QAAA,qBAGA,IAAA0oC,qBAAA1oC,QAAA,iDACA,IAAA67B,oBAAA77B,QAAA,gDACA,IAAAytB,kBAAAztB,QAAA,6CACA,IAAAikB,iBAAAjkB,QAAA,6CACA,IAAA8oB,WAAA9oB,QAAA,sCAKA,IAAMkkB,OAAyBD,iBAAAE,eAAeC,cAK9C,IAAInN,SAkBJ,IAAA2oB,cAAA,SAAA9D,QAAmCC,UAAA6D,cAAA9D,QAqD/B,SAAA8D,cAAY11B,OAAgBomB,eAA5B,IAAArK,MACI6V,OAAAv7B,KAAA6B,OAAOA,KA5CX6jB,MAAAsI,OAA+B,GA8B/BtI,MAAAgoB,mCAAqC,MAejCh3B,SAAW6R,WAAAG,cAAc7E,cACzB6B,MAAK/b,OAASA,OACd+b,MAAK/b,OAAOye,cAAgB1C,MAC5BA,MAAKomB,QAAUpmB,MAAK/b,OAAOigC,UAE3B,KAAM7Z,cAAe,CACjB,IAAI0L,YAAM,EACV,UAAW1L,gBAAkB,SAAU,CACnC0L,OAASjqB,SAASgZ,eAAeuF,oBAC9B,GAAIA,yBAAyB4d,YAAa,CAC7ClS,OAAS1L,cAGb,KAAM0L,OAAQ,CACV/V,MAAKgY,kBAAoB,CACrB3N,cAAe0L,OACfhN,MAAOjd,SAAS2Y,cAAc,SAC9B9F,GAAI,GACJupB,qBAAsB,OAE1B,GAAIl3B,SAAS2T,kBAAmB,CAC5B3E,MAAKgY,kBAAkBjP,MAAMnE,aAAa,cAAe,QAE7D5E,MAAKqK,cAAgB0L,OACrB/V,MAAKmoB,QAAUpS,QAIvB/V,MAAKooB,gBAAkB,WACnB,GAAIpoB,MAAK/b,OAAOigC,UAAW,CACvB,IAAKlkB,MAAK/b,OAAOsyB,kBAAmB,CAChCtY,OAAOoB,KAAK,gCAAkCW,MAAK/b,OAAO+c,SAAW,0BACrEhB,MAAKqB,GAAG7F,UAAU,eAAgB,CAAC,IAAIoa,oBAAAmB,kBAAkB/W,MAAKsI,OAAO,GAAGS,MAAO/I,MAAM,sBAClF,CACH/B,OAAOoB,KAAK,qCAAuCW,MAAK/b,OAAO+c,SAAW,0BAC1EhB,MAAKqB,GAAG7F,UAAU,qBAAsB,CAAC,IAAIoa,oBAAAmB,kBAAkB/W,MAAKsI,OAAO,GAAGS,MAAO/I,MAAM,6BAE5F,CACH/B,OAAOoB,KAAK,4BAA8BW,MAAK/b,OAAO+c,SAAW,0BACjEhB,MAAKqB,GAAG7F,UAAU,eAAgB,CAAC,IAAIoa,oBAAAmB,kBAAkB/W,MAAKsI,OAAO,GAAGS,MAAO/I,MAAM,kBAEzFA,MAAKqB,GAAG7F,UAAU,gBAAiB,CAAC,IAAIinB,qBAAAsB,mBAAmB/jB,MAAM,gBAAiB1jB,2BAO1Fq9B,cAAAz+B,UAAAmE,GAAA,SAAG3B,KAAcU,SAEby3B,OAAA36B,UAAMsmB,MAAKlnB,KAAA6B,KAACuB,KAAM,UAAYA,KAAO,oBAAsBvB,KAAKiqC,OAAS,aAAe,aAAe,IAAKhoC,SAE5G,GAAIV,OAAS,sBAAuB,CAChC,KAAMvB,KAAK8H,QAAU9H,KAAK6rC,mCAAoC,CAC1D7rC,KAAKklB,GAAG7F,UAAU,sBAAuB,CAAC,IAAIoa,oBAAAmB,kBAAkB56B,KAAKmsB,OAAO,GAAGS,MAAO5sB,KAAM,yBAC5FA,KAAK6rC,mCAAqC,OAGlD,GAAItqC,OAAS,iBAAmBA,OAAS,eAAgB,CACrD,GAAIvB,KAAKmsB,OAAO,IAAMnsB,KAAKmsB,OAAO,GAAGS,OACjC5sB,KAAKmsB,OAAO,GAAGS,MAAM6N,YAAc,GACnCz6B,KAAKmsB,OAAO,GAAGS,MAAM8N,SAAW,OAChC16B,KAAKmsB,OAAO,GAAGS,MAAM+N,QAAU,OAC/B36B,KAAKmsB,OAAO,GAAGS,MAAMrC,aAAe,EAAG,CACvCvqB,KAAKklB,GAAG7F,UAAU,gBAAiB,CAAC,IAAIinB,qBAAAsB,mBAAmB5nC,KAAM,gBAAiBG,aAClFH,KAAKklB,GAAG7F,UAAU,eAAgB,CAAC,IAAIoa,oBAAAmB,kBAAkB56B,KAAKmsB,OAAO,GAAGS,MAAO5sB,KAAM,mBAG7F,GAAIuB,OAAS,2BAA6BvB,KAAK8H,OAAOmc,SAAU,CAC5DjkB,KAAK8H,OAAO0/B,wBAAwB,OAExC,OAAOxnC,MAMXw9B,cAAAz+B,UAAAkB,KAAA,SAAKsB,KAAcU,SAEfy3B,OAAA36B,UAAMumB,QAAOnnB,KAAA6B,KAACuB,KAAM,UAAYA,KAAO,yBAA2BvB,KAAKiqC,OAAS,aAAe,aAAe,IAAKhoC,SAEnH,GAAIV,OAAS,sBAAuB,CAChC,KAAMvB,KAAK8H,QAAU9H,KAAK6rC,mCAAoC,CAC1D7rC,KAAKklB,GAAG7F,UAAU,sBAAuB,CAAC,IAAIoa,oBAAAmB,kBAAkB56B,KAAKmsB,OAAO,GAAGS,MAAO5sB,KAAM,0BAGpG,GAAIuB,OAAS,iBAAmBA,OAAS,eAAgB,CACrD,GAAIvB,KAAKmsB,OAAO,IAAMnsB,KAAKmsB,OAAO,GAAGS,OACjC5sB,KAAKmsB,OAAO,GAAGS,MAAM6N,YAAc,GACnCz6B,KAAKmsB,OAAO,GAAGS,MAAM8N,SAAW,OAChC16B,KAAKmsB,OAAO,GAAGS,MAAM+N,QAAU,OAC/B36B,KAAKmsB,OAAO,GAAGS,MAAMrC,aAAe,EAAG,CACvCvqB,KAAKklB,GAAG7F,UAAU,gBAAiB,CAAC,IAAIinB,qBAAAsB,mBAAmB5nC,KAAM,gBAAiBG,aAClFH,KAAKklB,GAAG7F,UAAU,eAAgB,CAAC,IAAIoa,oBAAAmB,kBAAkB56B,KAAKmsB,OAAO,GAAGS,MAAO5sB,KAAM,mBAG7F,GAAIuB,OAAS,2BAA6BvB,KAAK8H,OAAOmc,SAAU,CAC5DjkB,KAAK8H,OAAO+/B,4BAA4B,OAE5C,OAAO7nC,MAMXw9B,cAAAz+B,UAAAmF,IAAA,SAAI3C,KAAcU,SAEdy3B,OAAA36B,UAAMmF,IAAG/F,KAAA6B,KAACuB,KAAMU,SAEhB,GAAIV,OAAS,0BAA2B,CACpC,IAAI2qC,8BAAgClsC,KAAKklB,GAAGjH,aAAa1c,MAAMnD,OAC/D,GAAI8tC,gCAAkC,EAAG,CACrClsC,KAAK8H,OAAOggC,yBAAyB,QAI7C,OAAO9nC,MAcXw9B,cAAAz+B,UAAAotC,gBAAA,SAAgBvf,OAEZ5sB,KAAKosC,0BAA0Bxf,OAE/B,GAAI5sB,KAAK8H,OAAOigC,WAAa/nC,KAAK8H,OAAOsyB,kBAAmB,CACxD,GAAIxN,MAAMyQ,YAAcr9B,KAAK8H,OAAOuf,iBAAkB,CAClDuF,MAAMyQ,UAAYr9B,KAAK8H,OAAOuf,kBAKtC,IAAgB,IAAA8C,GAAA,EAAAC,GAAApqB,KAAKmsB,OAALhC,GAAAC,GAAAhsB,OAAA+rB,KAAa,CAAxB,IAAM/Q,EAACgR,GAAAD,IACR,GAAI/Q,EAAEwT,QAAUA,MAAO,CACnB,OAAO,GAIf,IAAIyf,aAAe,EAEnB,IAA4B,IAAA5Z,GAAA,EAAA6Z,GAAAtsC,KAAK8H,OAAOoa,QAAQic,eAApB1L,GAAA6Z,GAAAluC,OAAAq0B,KAAoC,CAA3D,IAAMlM,cAAa+lB,GAAA7Z,IACpB,GAAIlM,cAAcgmB,kBAAkB3f,OAAQ,CACxCyf,cAAgB,EAChB,OAIRrsC,KAAK8H,OAAOoa,QAAQic,eAAera,SAAQ,SAAAyC,eACvCA,cAAcgmB,kBAAkB3f,UAGpC5sB,KAAKwsC,0BAA0B,CAC3B5f,MAAKA,MACLpK,GAAIoK,MAAMpK,GACVupB,qBAAsB,QAG1BjqB,OAAOoB,KAAK,mCAAoCljB,MAEhD,OAAOqsC,cAeX7O,cAAAz+B,UAAAq+B,mBAAA,SAAmBlP,cAAsCO,YACrD,IAAImL,OACJ,UAAW1L,gBAAkB,SAAU,CACnC0L,OAASjqB,SAASgZ,eAAeuF,eACjC,IAAK0L,OAAQ,CACT,MAAM,IAAI77B,MAAM,0EAA4EmwB,qBAE7F,GAAIA,yBAAyB4d,YAAa,CAC7ClS,OAAS1L,kBACN,CACH,MAAM,IAAInwB,MAAM,0EAA4EmwB,eAGhG,IAAMtB,MAAQ5sB,KAAKysC,cACnBzsC,KAAKosC,0BAA0Bxf,OAE/B,IAAI8f,UAAYje,WAAaA,WAAapD,kBAAAqD,gBAAgBC,OAC1D,OAAQ+d,SACJ,KAAKrhB,kBAAAqD,gBAAgBie,MACjB/S,OAAOgT,WAAaC,aAAajgB,MAAOgN,OAAOkT,aAC/C,MACJ,KAAKzhB,kBAAAqD,gBAAgBC,OACjBiL,OAAOhR,YAAYgE,OACnB,MACJ,KAAKvB,kBAAAqD,gBAAgBqe,OACjBnT,OAAOgT,WAAaC,aAAajgB,MAAOgN,QACxC,MACJ,KAAKvO,kBAAAqD,gBAAgBse,QACjBpT,OAAOiT,aAAajgB,MAAOgN,OAAOqT,WAAW,IAC7C,MACJ,KAAK5hB,kBAAAqD,gBAAgBwe,QACjBtT,OAAOgT,WAAaO,aAAavgB,MAAOgN,QACxC,MACJ,QACI8S,QAAUrhB,kBAAAqD,gBAAgBC,OAC1BiL,OAAOhR,YAAYgE,OACnB,MAGR,IAAMxT,EAAwB,CAC1B8U,cAAe0L,OACfhN,MAAKA,MACL6B,WAAYie,QACZlqB,GAAIoK,MAAMpK,GACVupB,qBAAsB,OAE1B/rC,KAAKwsC,0BAA0BpzB,GAE/BpZ,KAAKklB,GAAG7F,UAAU,sBAAuB,CAAC,IAAIoa,oBAAAmB,kBAAkBxhB,EAAEwT,MAAO5sB,KAAM,yBAC/EA,KAAK6rC,qCAAuC7rC,KAAK67B,kBAEjD,OAAOjP,OAYX4Q,cAAAz+B,UAAAquC,qCAAA,SAAqCzE,gCACjC,IAAM0E,qBAAuBrtC,KAAK8H,OAAO4gC,YAAc1oC,KAAK8H,OAAO4gC,YAAe1oC,KAAK8H,OAAOoa,QAAQqB,SAASsI,sBAAsB8c,gCAAkC,GACvK,IAAM2E,mBAAsB3E,+BAA+BzgC,WAAa,SACpEygC,+BAA+BzgC,gBAAoBmlC,mBAAmBnlC,WAAa,SAAYmlC,mBAAmBnlC,SAAW,IACjI,IAAMqlC,oBAAuB5E,+BAA+BxgC,YAAc,SACtEwgC,+BAA+BxgC,iBAAqBklC,mBAAmBllC,YAAc,SAAYklC,mBAAmBllC,WAAa,GACrInI,KAAK8H,OAAO4gC,YAAc,CACtBxgC,SAAUolC,YACVnlC,UAAWolC,cAEf,KAAMvtC,KAAK8H,OAAOq/B,YAAa,CAC3BnnC,KAAK8H,OAAOq/B,YAAY19B,YAAY6jC,aACpCttC,KAAK8H,OAAOq/B,YAAY39B,aAAa+jC,gBAS7C/P,cAAAz+B,UAAAqtC,0BAAA,SAA0Bxf,OACtB,KAAM5sB,KAAK8H,OAAOigC,WAAa/nC,KAAK8H,OAAOsyB,mBAAoB,CAE3D,GAAIxN,MAAMyQ,YAAcr9B,KAAK8H,OAAOuf,iBAAkB,CAElDuF,MAAMyQ,UAAYr9B,KAAK8H,OAAOuf,kBAGtCuF,MAAMrE,SAAW,KACjBqE,MAAM4gB,SAAW,MAEjB,GAAI34B,SAAS2T,kBAAmB,CAC5BoE,MAAMnE,aAAa,cAAe,QAGtC,IAAKmE,MAAMpK,GAAI,CACXoK,MAAMpK,IAAMxiB,KAAKiqC,OAAS,UAAY,UAAY,SAAWjqC,KAAK8H,OAAO+c,SAEzE,IAAK7kB,KAAKwiB,MAAQxiB,KAAKkuB,cAAe,CAClCluB,KAAKwiB,GAAKoK,MAAMpK,IAIxB,IAAKxiB,KAAKiqC,SAAWjqC,KAAK8H,OAAOsyB,kBAAmB,CAChDxN,MAAM6gB,MAAQ,KACd,GAAI7gB,MAAMxD,MAAMskB,YAAc,oBAAsB1tC,KAAK8H,OAAOwb,mBAAmBgQ,oBAAoB1E,OAAQ,CAE3G5uB,KAAK2tC,kBAAkB/gB,YACpB,GAAI5sB,KAAK8H,OAAOwb,mBAAmBgQ,oBAAoB1E,SAAW5uB,KAAK8H,OAAOi0B,eAAgB,CACjG/7B,KAAK4tC,YAAYhhB,UAQ7B4Q,cAAAz+B,UAAA+gC,gBAAA,WAAA,IAAAjc,MAAA7jB,KACI,IAAK,IAAIvC,EAAIuC,KAAK8H,OAAOoa,QAAQic,eAAe//B,OAAS,EAAGX,GAAK,IAAKA,EAAG,CACrE,GAAIuC,KAAK8H,OAAOoa,QAAQic,eAAe1gC,KAAOuC,KAAM,CAChDA,KAAK8H,OAAOoa,QAAQic,eAAer3B,OAAOrJ,EAAG,IAIrDuC,KAAKmsB,OAAOrI,SAAQ,SAAA+pB,oBAEhB,KAAKA,mBAAmBjhB,SAAWihB,mBAAmBjhB,MAAM9mB,oBAAoB,CAC5E+nC,mBAAmBjhB,MAAM9mB,oBAAoB,UAAW+d,MAAKooB,iBACpD4B,mBAAmB9B,qBAAuB,MACvD,KAAM8B,mBAAmB3f,cAAe,CAGpC2f,mBAAmBjhB,MAAMggB,WAAYjjB,YAAYkkB,mBAAmBjhB,OACpE/I,MAAKqB,GAAG7F,UAAU,wBAAyB,CAAC,IAAIoa,oBAAAmB,kBAAkBiT,mBAAmBjhB,MAAO/I,MAAM,2BAGtGA,MAAKiqB,gBAAgBD,oBAErBhqB,MAAKsI,OAAO3H,QAAO,SAAApL,GAAK,OAACA,EAAE8U,qBAOnCsP,cAAAz+B,UAAAwtC,kBAAA,SAAkB3f,OACd,IAAImhB,cAAgB,MACpB,IAAK,IAAItwC,EAAI,EAAGA,EAAIuC,KAAKmsB,OAAO/tB,OAAQX,IAAK,CACzC,GAAIuC,KAAKmsB,OAAO1uB,GAAGmvB,QAAUA,MAAO,CAChC5sB,KAAKmsB,OAAO1uB,GAAGmvB,MAAM9mB,oBAAoB,UAAW9F,KAAKisC,iBACzDjsC,KAAKmsB,OAAOrlB,OAAOrJ,EAAG,GACtBswC,cAAgB,KAChBjsB,OAAOoB,KAAK,oCAAqCljB,MACjD,OAGR,OAAO+tC,eAMXvQ,cAAAz+B,UAAAm+B,yBAAA,WACI,KAAOl9B,KAAKmsB,OAAO,MAAUnsB,KAAKmsB,OAAO,GAAGS,QAAY5sB,KAAKmsB,OAAO,GAAG4f,qBAAuB,CAC1F/rC,KAAKmsB,OAAO,GAAGS,MAAMhnB,iBAAiB,UAAW5F,KAAKisC,iBACtDjsC,KAAKmsB,OAAO,GAAG4f,qBAAuB,OAO9CvO,cAAAz+B,UAAA+nC,kBAAA,SAAkBhU,aACd9yB,KAAKmsB,OAAOrI,SAAQ,SAAA+pB,oBAChBA,mBAAmBjhB,MAAMyQ,UAAYvK,YACrC,GAAIje,SAAS6X,aAAc,CAGvB,IAAMshB,QAAUH,mBAAmBjhB,MAAMxE,cACzC,IAAM6lB,SAAWJ,mBAAmBjhB,MACpCohB,QAAUb,aAAac,SAAUJ,mBAAmBjhB,OACpDihB,mBAAmBjhB,MAAQqhB,cAQvCzQ,cAAAz+B,UAAAsgB,UAAA,SAAU9d,KAAc4hC,YACpBnjC,KAAKklB,GAAG7F,UAAU9d,KAAM4hC,aAM5B3F,cAAAz+B,UAAA0tC,YAAA,WACI,OAAO98B,SAAS2Y,cAAc,UAMlCkV,cAAAz+B,UAAA+uC,gBAAA,SAAgBD,oBACZA,mBAAmBjhB,MAAMyQ,UAAY,MAK/BG,cAAAz+B,UAAAytC,0BAAV,SAAoCqB,oBAChC7tC,KAAKmsB,OAAO1qB,KAAKosC,oBACjB7tC,KAAKk9B,2BACL,GAAIl9B,KAAK8H,OAAOoa,QAAQic,eAAetzB,QAAQ7K,SAAW,EAAG,CACzDA,KAAK8H,OAAOoa,QAAQic,eAAe18B,KAAKzB,QAIxCw9B,cAAAz+B,UAAA6uC,YAAR,SAAoBhhB,OAChB,IAAK/X,SAAS6X,aAAc,CACxBE,MAAMxD,MAAMskB,UAAY,kBACxB9gB,MAAMxD,MAAM8kB,gBAAkB,oBAI9B1Q,cAAAz+B,UAAA4uC,kBAAR,SAA0B/gB,OACtBA,MAAMxD,MAAMskB,UAAY,QACxB9gB,MAAMxD,MAAM8kB,gBAAkB,SAGtC,OAAA1Q,cAvdA,CAAmCI,kBAAA7Y,iBAAtB7mB,QAAAs/B,cAAAA,g1BCnCb,IAAAjE,gBAAA37B,QAAA,mBAEA,IAAAikB,iBAAAjkB,QAAA,6CAKA,IAAMkkB,OAAyBD,iBAAAE,eAAeC,cAK9C,IAAAyd,WAAA,SAAA/F,QAAgCC,UAAA8F,WAAA/F,QAU5B,SAAA+F,WAAY33B,OAAgB8xB,OAA8BvL,YAA1D,IAAAxK,MACI6V,OAAAv7B,KAAA6B,KAAM8H,OAAQ8xB,SAAO55B,KACrB6jB,MAAKmoB,QAAUnoB,MAAKqK,cACpBrK,MAAK/b,OAASA,OACd+b,MAAKwK,WAAaA,wBAOtBoR,WAAA1gC,UAAAugC,iBAAA,SAAiBz/B,OACbG,KAAK8H,OAAOuf,iBAAiB6K,iBAAiBpO,SAAQ,SAACqO,OACnDA,MAAMmI,QAAUz6B,SAEpBG,KAAK8H,OAAOqc,YAActkB,MAC1BiiB,OAAOoB,KAAK,qBAAuBrjB,MAAQ,gBAAkB,qBAAuB,qBACpF,OAAOG,MAOXy/B,WAAA1gC,UAAAwgC,iBAAA,SAAiB1/B,OACbG,KAAK8H,OAAOuf,iBAAiB4F,iBAAiBnJ,SAAQ,SAACqO,OACnDA,MAAMmI,QAAUz6B,SAEpBG,KAAK8H,OAAOsc,YAAcvkB,MAC1BiiB,OAAOoB,KAAK,qBAAuBrjB,MAAQ,gBAAkB,qBAAuB,qBACpF,OAAOG,MAGf,OAAAy/B,WA3CA,CAAgClG,gBAAAiE,eAAnBt/B,QAAAuhC,WAAAA,gOCbb,IAAY3Y,oBAAZ,SAAYA,oBACRA,mBAAA,SAAA,QACAA,mBAAA,aAAA,YACAA,mBAAA,UAAA,SACAA,mBAAA,YAAA,YAJJ,CAAYA,mBAAA5oB,QAAA4oB,qBAAA5oB,QAAA4oB,mBAAkB,4KCG9B,IAAYb,mBAAZ,SAAYA,mBAMRA,kBAAA,yBAAA,wBAMAA,kBAAA,wBAAA,uBAQAA,kBAAA,yBAAA,wBAMAA,kBAAA,yBAAA,wBAMAA,kBAAA,gCAAA,+BAMAA,kBAAA,kCAAA,iCAMAA,kBAAA,6BAAA,4BAMAA,kBAAA,gCAAA,+BAMAA,kBAAA,gCAAA,+BAMAA,kBAAA,oCAAA,mCAMAA,kBAAA,uBAAA,sBAOAA,kBAAA,8BAAA,6BAMAA,kBAAA,8BAAA,6BAKAA,kBAAA,0BAAA,yBAKAA,kBAAA,iBAAA,iBA3FJ,CAAYA,kBAAA/nB,QAAA+nB,oBAAA/nB,QAAA+nB,kBAAiB,KAiG7B,IAAAD,cAAA,WAQI,SAAAA,cAAYljB,KAAyBf,SACjC/B,KAAK8C,KAAOA,KACZ9C,KAAK+B,QAAUA,QAGvB,OAAAikB,cAbA,GAAa9nB,QAAA8nB,cAAAA,6JCjGb,IAAY0I,iBAAZ,SAAYA,iBAKRA,gBAAA,SAAA,QAIAA,gBAAA,UAAA,SAIAA,gBAAA,UAAA,SAIAA,gBAAA,WAAA,UAIAA,gBAAA,WAAA,WArBJ,CAAYA,gBAAAxwB,QAAAwwB,kBAAAxwB,QAAAwwB,gBAAe,2kBCH3B,IAAAyf,QAAAvwC,QAAA,WAUA,IAAAwjC,gBAAA,SAAA1H,QAAqCC,UAAAyH,gBAAA1H,QAsBjC,SAAA0H,gBAAYgN,WAAqBzvC,OAAiB4C,KAAcyiB,WAAwB6J,QAAxF,IAAAhK,MACI6V,OAAAv7B,KAAA6B,KAAMouC,WAAYzvC,OAAQ4C,OAAKvB,KAC/B6jB,MAAKG,WAAaA,WAClBH,MAAKgK,OAASA,oBAOlBuT,gBAAAriC,UAAAu6B,oBAAA,aAEJ,OAAA8H,gBAlCA,CAAqC+M,QAAAE,OAAxBnwC,QAAAkjC,gBAAAA,inBCRb,IAAA+M,QAAAvwC,QAAA,WAeA,IAAAikC,+BAAA,SAAAnI,QAAoDC,UAAAkI,+BAAAnI,QAyBhD,SAAAmI,+BAAYljC,OAAiBqlB,WAAwBsqB,gBAAyB1gB,SAAkBzH,UAAhG,IAAAtC,MACI6V,OAAAv7B,KAAA6B,KAAM,MAAOrB,OAAQ,8BAA4BqB,KACjD6jB,MAAKG,WAAaA,WAClBH,MAAKyqB,gBAAkBA,gBACvBzqB,MAAK+J,SAAWA,SAChB/J,MAAKsC,SAAWA,sBAOpB0b,+BAAA9iC,UAAAu6B,oBAAA,aAEJ,OAAAuI,+BAvCA,CAAoDsM,QAAAE,OAAvCnwC,QAAA2jC,+BAAAA,gLCbb,IAAAwM,MAAA,WAyBI,SAAAA,MAAYD,WAAqBzvC,OAA0C4C,MAL3EvB,KAAAuuC,iBAAmB,MAMfvuC,KAAKouC,WAAaA,WAClBpuC,KAAKrB,OAASA,OACdqB,KAAKuB,KAAOA,KAMhB8sC,MAAAtvC,UAAAyvC,mBAAA,WACI,OAAOxuC,KAAKuuC,kBAiBhBF,MAAAtvC,UAAA0vC,eAAA,WAEIzuC,KAAKs5B,oBAAsB,aAC3Bt5B,KAAKuuC,iBAAmB,MAQhC,OAAAF,MA/DA,GAAsBnwC,QAAAmwC,MAAAA,wkBCJtB,IAAAF,QAAAvwC,QAAA,WAOA,IAAAklC,YAAA,SAAApJ,QAAiCC,UAAAmJ,YAAApJ,QAU7B,SAAAoJ,YAAYnkC,OAAgB6nB,UAAmB5Z,MAA/C,IAAAiX,MACI6V,OAAAv7B,KAAA6B,KAAM,MAAOrB,OAAQ6nB,YAAUxmB,KAC/B6jB,MAAKjX,KAAOA,kBAOhBk2B,YAAA/jC,UAAAu6B,oBAAA,aAEJ,OAAAwJ,YArBA,CAAiCqL,QAAAE,OAApBnwC,QAAA4kC,YAAAA,8mBCPb,IAAAqL,QAAAvwC,QAAA,WAUA,IAAAkkC,gCAAA,SAAApI,QAAqDC,UAAAmI,gCAAApI,QAoBjD,SAAAoI,gCAAYnjC,OAAiBivB,SAAkBzH,SAAkBnC,YAAjE,IAAAH,MACI6V,OAAAv7B,KAAA6B,KAAM,MAAOrB,OAAQ,+BAA6BqB,KAClD6jB,MAAK+J,SAAWA,SAChB/J,MAAKsC,SAAWA,SAChBtC,MAAKG,WAAaA,wBAOtB8d,gCAAA/iC,UAAAu6B,oBAAA,aAEJ,OAAAwI,gCAjCA,CAAqDqM,QAAAE,OAAxCnwC,QAAA4jC,gCAAAA,ynBCVb,IAAAqM,QAAAvwC,QAAA,WAcA,IAAA0pC,uBAAA,SAAA5N,QAA4CC,UAAA2N,uBAAA5N,QAexC,SAAA4N,uBAAY3oC,OAAiB4C,KAAcyiB,WAAwBa,UAAnE,IAAAhB,MACI6V,OAAAv7B,KAAA6B,KAAM,MAAOrB,OAAQ4C,OAAKvB,KAC1B6jB,MAAKtiB,KAAOA,KACZsiB,MAAKG,WAAaA,WAClBH,MAAKgB,SAAWA,sBAOpByiB,uBAAAvoC,UAAAu6B,oBAAA,aAEJ,OAAAgO,uBA5BA,CAA4C6G,QAAAE,OAA/BnwC,QAAAopC,uBAAAA,wmBCdb,IAAA6G,QAAAvwC,QAAA,WASA,IAAAilC,eAAA,SAAAnJ,QAAoCC,UAAAkJ,eAAAnJ,QA+BhC,SAAAmJ,eAAYlkC,OAAiB4C,KAAcihB,GAAY1f,KAAc+qB,QAArE,IAAAhK,MACI6V,OAAAv7B,KAAA6B,KAAM,MAAOrB,OAAQ4C,OAAKvB,KAC1B6jB,MAAKrB,GAAKA,GACV,GAAI1f,OAAS0f,GAAI,CACbqB,MAAK/gB,KAAOA,KAEhB+gB,MAAKgK,OAASA,oBAOlBgV,eAAA9jC,UAAAu6B,oBAAA,aAEJ,OAAAuJ,eA9CA,CAAoCsL,QAAAE,OAAvBnwC,QAAA2kC,eAAAA,0mBCTb,IAAAsL,QAAAvwC,QAAA,WAEA,IAAAikB,iBAAAjkB,QAAA,4BAKA,IAAMkkB,OAAyBD,iBAAAE,eAAeC,cAM9C,IAAAqX,yBAAA,SAAAK,QAA8CC,UAAAN,yBAAAK,QAiB1C,SAAAL,yBAAY16B,OAAiBkvB,QAA7B,IAAAhK,MACI6V,OAAAv7B,KAAA6B,KAAM,KAAMrB,OAAQ,wBAAsBqB,KAC1C6jB,MAAKgK,OAASA,oBAMlBwL,yBAAAt6B,UAAAu6B,oBAAA,WAEIxX,OAAOoB,KAAK,kCAAoCljB,KAAKuB,KAAO,mCAE5D,IAAM2gB,QAAmBliB,KAAKrB,OAG9BujB,QAAQqc,kBAAkBza,SAAQ,SAAA4c,8CAC9B,IAAMne,aAAeme,iBAAiBne,aACtC,OAAK6H,GAAClI,QAAQqc,kBAAkB39B,IAAI2hB,iBAAa,MAAA6H,UAAA,OAAA,EAAAA,GAAEtiB,QAAQ,EACvD2qB,GAAAvQ,QAAQqc,kBAAkB39B,IAAI2hB,iBAAa,MAAAkQ,UAAA,OAAA,EAAAA,GAAE3qB,OAAQ83B,qBACrD0M,GAAApqB,QAAQqc,kBAAkB39B,IAAI2hB,iBAAa,MAAA+pB,UAAA,OAAA,EAAAA,GAAExkC,OAAQ+3B,qBACrD,IAAA6O,GAAIxsB,QAAQqc,kBAAkB39B,IAAI2hB,iBAAa,MAAAmsB,UAAA,OAAA,EAAAA,GAAE5mC,OAAQye,cAAe,EACpEooB,GAAAzsB,QAAQqc,kBAAkB39B,IAAI2hB,iBAAa,MAAAosB,UAAA,OAAA,EAAAA,GAAE7mC,OAAQye,cAAcuZ,kBAEvE,IAAMjb,UAAQ+pB,IAAAC,GAAG3sB,QAAQqc,kBAAkB39B,IAAI2hB,iBAAa,MAAAssB,UAAA,OAAA,EAAAA,GAAE/mC,UAAM,MAAA8mC,UAAA,OAAA,EAAAA,GAAE/pB,SACtE,KAAMA,SAAU,CACZ3C,QAAQkc,qBAAqBhZ,OAAOP,WAExCiqB,GAAA5sB,QAAQqc,kBAAkB39B,IAAI2hB,iBAAa,MAAAusB,UAAA,OAAA,EAAAA,GAAEhqB,UAEjD5C,QAAQqc,kBAAkBnZ,OAAO7C,kBAI7C,OAAA8W,yBAlDA,CAA8C8U,QAAAE,OAAjCnwC,QAAAm7B,yBAAAA,qoBCbb,IAAA8U,QAAAvwC,QAAA,WAUA,IAAAgkC,YAAA,SAAAlI,QAAiCC,UAAAiI,YAAAlI,QA0B7B,SAAAkI,YAAYjjC,OAAiB4C,KAAcqL,KAAe+0B,MAA1D,IAAA9d,MACI6V,OAAAv7B,KAAA6B,KAAM,MAAOrB,OAAQ,WAASqB,KAC9B,KAAMuB,KAAM,CACRsiB,MAAKtiB,KAAO,UAAYA,KAE5BsiB,MAAKjX,KAAOA,KACZiX,MAAK8d,KAAOA,kBAOhBC,YAAA7iC,UAAAu6B,oBAAA,aAEJ,OAAAsI,YAzCA,CAAiCuM,QAAAE,OAApBnwC,QAAA0jC,YAAAA,0lBCVb,IAAAuM,QAAAvwC,QAAA,WACA,IAAAstB,YAAAttB,QAAA,4BACA,IAAAutB,UAAAvtB,QAAA,0BAEA,IAAAikB,iBAAAjkB,QAAA,4BAKA,IAAMkkB,OAAyBD,iBAAAE,eAAeC,cAO9C,IAAAkY,YAAA,SAAAR,QAAiCC,UAAAO,YAAAR,QA0B7B,SAAAQ,YAAYkU,WAAqBzvC,OAA6B4C,KAAcuG,OAAgB+lB,QAA5F,IAAAhK,MACI6V,OAAAv7B,KAAA6B,KAAMouC,WAAYzvC,OAAQ4C,OAAKvB,KAC/B6jB,MAAK/b,OAASA,OACd+b,MAAKgK,OAASA,oBAMlBqM,YAAAn7B,UAAAu6B,oBAAA,WACI,GAAIt5B,KAAKuB,OAAS,kBAAmB,CAEjC,GAAIvB,KAAKrB,kBAAkBwsB,UAAA6C,QAAS,CAEhClM,OAAOoB,KAAK,kCAAoCljB,KAAKuB,KAAO,mCAC5DvB,KAAK8H,OAAO83B,yBACT,GAAI5/B,KAAKrB,kBAAkBusB,YAAA8D,UAAW,CAEzClN,OAAOoB,KAAK,kCAAoCljB,KAAKuB,KAAO,qCAC5D46B,cAA0Bn8B,KAAKrB,OAAQ49B,2BACvCv8B,KAAK8H,OAAOm0B,4BAA8B,MAG1C,IAAM8S,mBAAiC/uC,KAAKrB,OAAQ4kB,SAASmI,WAC7D,IAAK,IAAIjuB,EAAI,EAAGA,EAAIsxC,mBAAmB3wC,OAAQX,IAAK,CAChD,GAAIsxC,mBAAmBtxC,KAAmBuC,KAAKrB,OAAS,CACpDowC,mBAAmBjoC,OAAOrJ,EAAG,GAC7B,QAMZuC,KAAK8H,OAAO+3B,qBAIZ,GAAI7/B,KAAK8H,OAAOye,cAAevmB,KAAK8H,OAAOye,cAAcuZ,kBAGzD9/B,KAAK8H,OAAOoa,QAAQkc,qBAAqBhZ,OAAOplB,KAAK8H,OAAO+c,UAG5D,IAAM6b,iBAAmB1gC,KAAK8H,OAAOoa,QAAQqc,kBAAkB39B,IAAIZ,KAAK8H,OAAOkc,WAAWzB,cAC1F,KAAMme,oBAAsBA,iBAAiB3d,cAAe,CACxD,IAAMisB,oBAAsBtO,iBAAiB3d,cAAcC,QAC3D,IAAK,IAAIvlB,EAAIuxC,oBAAoB5wC,OAAS,EAAGX,GAAK,IAAKA,EAAG,CACtD,GAAIuxC,oBAAoBvxC,GAAG+kB,KAAOxiB,KAAK8H,OAAO+c,SAAU,CACpDmqB,oBAAoBloC,OAAOrJ,EAAG,QAQtD,OAAAy8B,YAlFA,CAAiCiU,QAAAE,OAApBnwC,QAAAg8B,YAAAA,yrBChBb,IAAAiU,QAAAvwC,QAAA,WAWA,IAAAgqC,mBAAA,SAAAlO,QAAwCC,UAAAiO,mBAAAlO,QAcpC,SAAAkO,mBAAYjpC,OAAuB4C,KAAc1B,OAAjD,IAAAgkB,MACI6V,OAAAv7B,KAAA6B,KAAM,MAAOrB,OAAQ4C,OAAKvB,KAC1B6jB,MAAKhkB,MAAQA,mBAOjB+nC,mBAAA7oC,UAAAu6B,oBAAA,aAEJ,OAAAsO,mBAzBA,CAAwCuG,QAAAE,OAA3BnwC,QAAA0pC,mBAAAA,gnBCXb,IAAAuG,QAAAvwC,QAAA,WAUA,IAAA0oB,2BAAA,SAAAoT,QAAgDC,UAAArT,2BAAAoT,QAkC5C,SAAApT,2BAAY3nB,OAAiCmJ,OAAgBwmC,gBAAyB1gB,SAAkBzH,SAAkB0H,QAA1H,IAAAhK,MACI6V,OAAAv7B,KAAA6B,KAAM,MAAOrB,OAAQ,0BAAwBqB,KAC7C6jB,MAAK/b,OAASA,OACd+b,MAAKyqB,gBAAkBA,gBACvBzqB,MAAK+J,SAAWA,SAChB/J,MAAKsC,SAAWA,SAChBtC,MAAKgK,OAASA,oBAOlBvH,2BAAAvnB,UAAAu6B,oBAAA,aAEJ,OAAAhT,2BAjDA,CAAgD6nB,QAAAE,OAAnCnwC,QAAAooB,2BAAAA,+mBCVb,IAAA6nB,QAAAvwC,QAAA,WAUA,IAAAg9B,kBAAA,SAAAlB,QAAuCC,UAAAiB,kBAAAlB,QAUnC,SAAAkB,kBAAYoR,QAA2BrtC,OAAuB4C,MAA9D,IAAAsiB,MACI6V,OAAAv7B,KAAA6B,KAAM,MAAOrB,OAAQ4C,OAAKvB,KAC1B6jB,MAAKmoB,QAAUA,qBAOnBpR,kBAAA77B,UAAAu6B,oBAAA,aAEJ,OAAAsB,kBArBA,CAAuCuT,QAAAE,OAA1BnwC,QAAA08B,kBAAAA,wEC3Bb,SAASqU,SAEP,IAAIC,QAAU,GAGdlvC,KAAK8jB,QAAU,SAAS/V,UAEtB,IAAI,IAAI1J,OAAO6qC,QACf,CACE,IAAIC,OAASD,QAAQ7qC,KAErB,IAAI,IAAI+qC,QAAQD,OACdphC,SAASohC,OAAOC,SAItBpvC,KAAKY,IAAM,SAAS4hB,GAAI2sB,QAEtB,IAAIE,IAAMH,QAAQC,QAClB,GAAGE,KAAOlvC,UACR,OAAOA,UAET,OAAOkvC,IAAI7sB,KAGbxiB,KAAKif,OAAS,SAASuD,GAAI2sB,QAEzB,IAAIE,IAAMH,QAAQC,QAClB,GAAGE,KAAOlvC,UACR,cAEKkvC,IAAI7sB,IAGX,IAAI,IAAI/kB,KAAK4xC,IAAI,CAAC,OAAO,aAElBH,QAAQC,SAGjBnvC,KAAKa,IAAM,SAAShB,MAAO2iB,GAAI2sB,QAE7B,GAAGtvC,OAASM,UACV,OAAOH,KAAKif,OAAOuD,GAAI2sB,QAEzB,IAAIE,IAAMH,QAAQC,QAClB,GAAGE,KAAOlvC,UACR+uC,QAAQC,QAAUE,IAAM,GAE1BA,IAAI7sB,IAAM3iB,OAKdovC,OAAOlwC,UAAUkG,IAAM,SAASud,GAAI2sB,QAElC,IAAItvC,MAAQG,KAAKY,IAAI4hB,GAAI2sB,QACzB,GAAGtvC,OAASM,UACV,OAAOA,UAETH,KAAKif,OAAOuD,GAAI2sB,QAEhB,OAAOtvC,OAITvB,OAAOJ,QAAU+wC,iDChDjB,IAAItY,cAAiB/4B,QAAQ,mBAG7BM,QAAQy4B,cAAiBA,4ECHzB,IAAInL,WAAa5tB,QAAQ,OACzB,IAAI0xC,0BAA4B1xC,QAAQ,0CACxC,IAAImkB,eAAiBnkB,QAAQ,kCAAkCmkB,eAE/DxG,KAAKC,IAAMD,KAAKC,KAAO,WACnB,OAAQ,IAAID,MAGhB,IAAIg0B,cAAgB,IAEpB,IAAIC,aAAe,eACnB,IAAIC,UAAY,YAChB,IAAIC,aAAe,eAEnB,IAAIC,OAAS5tB,eAAeC,cAqB5B,SAAS2U,cAActD,eAEnB,IAAIznB,KAAO5L,KAEX,IAAI4vC,SAAWvc,cAAcY,GAE7B,IAAI4b,2BAA6B,EAEjC,IAAIC,YAAc,EAClB,IAAIC,aAAe,KACnB,IAAIC,gBAAkB,MACtB,IAAIC,aAEJ,IAAIzlB,OAASklB,aAEb,IAAInb,eAAiBqb,SAASrb,eAC9B,IAAIE,cAAgBmb,SAASnb,cAC7B,IAAIL,YAAcwb,SAASxb,YAC3B,IAAI5M,QAAUooB,SAASpoB,QAEvB6L,cAAcsB,IAAIub,KAAO,SAAUrqB,OAAQsqB,SACvCA,QAAQC,MAAM,KAAM,SAGxBR,SAASrb,eAAiB,WACtBob,OAAOtsB,MAAM,wCACb,GAAImH,SAAWglB,aAAc,CACzBG,OAAO/tC,MAAM,oGACb,OAGJyuC,WAEA7lB,OAASglB,aACT,GAAIjb,eAAgB,CAChBA,mBAIRqb,SAASnb,cAAgB,WACrBkb,OAAOtsB,MAAM,uCACb,GAAImH,SAAWilB,UAAW,CACtBE,OAAO/tC,MAAM,gGACb,OAEJ4oB,OAASilB,UAETa,+BAEA,GAAI7b,cAAe,CACfA,kBAIRmb,SAASxb,YAAc,WACnBub,OAAOtsB,MAAM,qCACb,GAAImH,SAAWilB,UAAW,CACtBE,OAAO/tC,MAAM,8FACb,OAEJ4oB,OAASilB,UAETM,aAAe,KACfQ,UAEA,GAAInc,YAAa,CACbA,gBAIRwb,SAASpoB,QAAU,SAAU5lB,OACzB+tC,OAAOtsB,MAAM,iCAEbmH,OAASklB,aAETW,WAEA,GAAI7oB,QAAS,CACTA,QAAQ5lB,SAIhB,IAAIqyB,GAAK,IAAIqb,0BAA0BM,UAEvCD,OAAOtsB,MAAM,gCAAkCusB,SAAS1b,KAExD,IAAIsc,kBAAoB,CACpBC,gBAAiBpd,cAAcsB,IAAIC,eACnC8b,qBAAsBrd,cAAcsB,IAAIgc,yBAG5C,IAAIhc,IAAM,IAAInJ,WAAWA,WAAWolB,QAAQC,QAASL,kBAAmBvc,IACpE,SAAUkc,SAENR,OAAOtsB,MAAM,qBAAuBO,KAAKlJ,UAAUy1B,UAEnD,IACI,IAAI/yB,KAAOiW,cAAcsB,IAAIwb,QAAQvqB,QAErC,GAAIxI,OAASjd,UAAW,CACpBwvC,OAAO/tC,MAAM,UAAYuuC,QAAQvqB,OAAS,iCACvC,CACHxI,KAAK+yB,QAAQtqB,OAAQsqB,UAE3B,MAAOruC,KACL6tC,OAAO/tC,MAAM,iCAAmCgiB,KAAKlJ,UAAUy1B,UAC/DR,OAAO/tC,MAAME,SAIzB9B,KAAK0qB,KAAO,SAAU9E,OAAQC,OAAQ9X,UAClC,GAAI6X,SAAW,OAAQ,CACnB+pB,OAAOtsB,MAAM,mBAAqBuC,OAAS,WAAahC,KAAKlJ,UAAUmL,SAG3E,IAAIirB,YAAcv1B,KAAKC,MAEvBmZ,IAAIoc,OAAOnrB,OAAQC,QAAQ,SAAUjkB,MAAOgS,QACxC,GAAIhS,MAAO,CACP,IACI+tC,OAAO/tC,MAAM,SAAWA,MAAMG,QAAU,uBACpC6jB,OAAS,WAAahC,KAAKlJ,UAAUmL,QAAU,YAC/CjkB,MAAMuuC,SACV,GAAIvuC,MAAMgL,KAAM,CACZ+iC,OAAO/tC,MAAM,cAAgBgiB,KAAKlJ,UAAU9Y,MAAMgL,QAExD,MAAOvP,IACTuE,MAAMkvC,YAAcA,YAExB,GAAI/iC,SAAU,CACV,GAAI6F,QAAUzT,WAAayT,OAAO/T,QAAU,OAAQ,CAChD8vC,OAAOtsB,MAAM,aAAeO,KAAKlJ,UAAU9G,SAE/C7F,SAASnM,MAAOgS,aAK5B,SAAS08B,+BACLX,OAAOtsB,MAAM,+BAAiCysB,YAAc,SACxDD,0BAA4B,KAChCA,0BAA4BC,YAGhC,SAASkB,WACL,GAAIjB,aAAc,CACd,IAAIlqB,OAAS,KACb,GAAIiqB,aAAe,GAAKA,aAAeD,0BAA2B,CAC9DhqB,OAAS,CACL3d,SAAUmrB,cAAcW,WAAaub,eAG7CO,cAEAlkC,KAAK8e,KAAK,OAAQ7E,OAAQ,SAAWorB,SACjC,OAAO,SAAUrvC,MAAOgS,QACpB,GAAIhS,MAAO,CACP+tC,OAAOtsB,MAAM,0BAA4B4tB,QAAU,KAC/CrvC,MAAMG,QAAU,KACpB,GAAIkvC,QAAUpB,0BAA2B,CACrCE,aAAe,MACfO,+BACAX,OAAOtsB,MAAM,2CACT4tB,QAAU,sBACdhd,GAAGid,iBAVO,CAcvBpB,kBACA,CACHH,OAAOtsB,MAAM,iDAQrB,SAASktB,UACL,IAAKP,gBAAiB,CAClBL,OAAOtsB,MAAM,iCACb2sB,gBAAkB,KAElB,GAAI3c,cAAcW,WAAa7zB,UAAW,CACtC8vC,aAAexmC,YAAYunC,SAAU3d,cAAcW,WACnDgd,aAKZ,SAASX,WACLlU,cAAc8T,cACdD,gBAAkB,MAClBD,aAAe,MACfD,aAAe,EACfnb,IAAIwc,SAGRnxC,KAAK62B,MAAQ,SAAU74B,KAAM6vB,QACzB8hB,OAAOtsB,MAAM,uBAAyBrlB,KAAO,aAAe6vB,QAC5D,GAAIoiB,cAAgB9vC,UAAW,CAC3BwvC,OAAOtsB,MAAM,0BACb8Y,cAAc8T,cAElBD,gBAAkB,MAClBD,aAAe,MACf9b,GAAG4C,MAAM74B,KAAM6vB,SAInB7tB,KAAKoxC,WAAa,SAAUC,QACxBpd,GAAGmd,WAAWC,SAGlBrxC,KAAK4oC,UAAY,WACb3U,GAAGid,eAGPlxC,KAAKk5B,UAAY,WACb6W,aAAe,KACfD,YAAc,EACdS,WAKRjyC,OAAOJ,QAAUy4B,gJCrQjB,IAAI2Y,0BAA6B1xC,QAAQ,+BAGzCM,QAAQoxC,0BAA6BA,oGCJrC,aAEA,IAAIK,OAASnwC,QAEb,IAAI8xC,YAAc,IAClB,IAAIC,cAAgB,IAEpB,IAAIC,WAAa,EACjB,IAAIC,KAAO,EACX,IAAIC,QAAU,EACd,IAAIC,OAAS,EAWb,SAASrC,0BAA0Bvb,QAC/B,IAAI6d,QAAU,MACd,IAAIC,uBACJ,IAAI1d,MAAQJ,OAAOG,IACnB,IAAI4d,aAAe,MAEnB,IAAI7d,GAAK,IAAI8d,UAAU5d,OAEvBF,GAAG+d,OAAS,WACRrC,OAAOtsB,MAAM,0BAA4B8Q,OACzC,GAAIJ,OAAOK,YAAa,CACpBL,OAAOK,gBAIfH,GAAGzM,QAAU,SAAA5lB,OACT+tC,OAAO/tC,MACH,wBAA0BuyB,MAAQ,iCAClCvyB,OAEJ,GAAImyB,OAAOvM,QAAS,CAChBuM,OAAOvM,QAAQ5lB,SAIvB,IAAIqwC,oBAAsB,WACtB,GAAIhe,GAAG1J,aAAeonB,OAAQ,CAC1B,GAAIC,QAAS,CACTjC,OAAOtsB,MAAM,iCACV,CACHssB,OAAOtsB,MAAM,mDACbulB,UAAU0I,YAAa,QAExB,CACH3B,OAAOtsB,MAAM,yDAIrB4Q,GAAGie,QAAUD,oBAEb,SAASrJ,UAAUuJ,WAAYC,YAC3BzC,OAAOtsB,MACH,uBAAyB+uB,WAAa,SAAWD,WAAa,KAElE,GAAIC,aAAe,EAAG,CAClB,GAAIN,aAAc,CACdnC,OAAOlwC,KACH,gFAEJ,WACG,CACHqyC,aAAe,KAEnB,GAAI/d,OAAOQ,eAAgB,CACvBR,OAAOQ,kBAGf8d,aAAaF,WAAYC,YAG7B,SAASC,aAAaF,WAAYC,YAC9BzC,OAAOtsB,MAAM,yBAA2B+uB,YACxCne,GAAG4C,QACH5C,GAAK,IAAI8d,UAAU5d,OAEnBF,GAAG+d,OAAS,WACRrC,OAAOtsB,MACH,kBAAoB8Q,MAAQ,UAAYie,WAAa,gBAEzDN,aAAe,MACfD,yBACA,GAAI9d,OAAOU,gBAAiB,CACxBV,OAAOU,gBAEXR,GAAGie,QAAUD,qBAGjBhe,GAAGzM,QAAU,SAAA5lB,OACT+tC,OAAOlwC,KAAK,uBAAwBmC,OACpC,GAAIwwC,aAAeD,WAAY,CAC3B,GAAIpe,OAAOM,aAAc,CACrBN,OAAOM,oBAER,CACHvqB,YAAW,WACP8+B,UAAUuJ,WAAYC,WAAa,KACpCb,iBAKfvxC,KAAK62B,MAAQ,WACT+a,QAAU,KACV3d,GAAG4C,SAGP72B,KAAKkxC,YAAc,WACfvB,OAAOtsB,MAAM,eACbulB,UAAU0I,YAAa,IAG3BtxC,KAAK0qB,KAAO,SAAA3oB,SACRkyB,GAAGvJ,KAAK3oB,UAGZ/B,KAAK4F,iBAAmB,SAACrE,KAAMwM,UAC3B8jC,uBAAyB,WACrB5d,GAAGruB,iBAAiBrE,KAAMwM,WAE9B8jC,0BAIRvzC,OAAOJ,QAAUoxC,oECpIjB,IAAIgD,mBAAqB,MACzB,GAAGpzC,OAAOwB,eACV,CACE,IAEExB,OAAOwB,eAAe,GAAI,IAAK,IAEjC,MAAMrD,GAEJi1C,mBAAqB,MAKzB,IAAKxzC,SAASC,UAAU4E,KAAM,CAC5B7E,SAASC,UAAU4E,KAAO,SAAS4uC,OACjC,UAAWvyC,OAAS,WAAY,CAG9B,MAAM,IAAIS,UAAU,wEAGtB,IAAI+xC,MAAUztC,MAAMhG,UAAUyG,MAAMrH,KAAKqD,UAAW,GAChDixC,QAAUzyC,KACV0yC,KAAU,aACVC,OAAU,WACR,OAAOF,QAAQ/zC,MAAMsB,gBAAgB0yC,MAAQH,MACpCvyC,KACAuyC,MACFC,MAAMnzC,OAAO0F,MAAMhG,UAAUyG,MAAMrH,KAAKqD,cAGrDkxC,KAAK3zC,UAAYiB,KAAKjB,UACtB4zC,OAAO5zC,UAAY,IAAI2zC,KAEvB,OAAOC,QAKX,IAAI7yC,aAAelC,QAAQ,UAAUkC,aAErC,IAAIkK,SAAWpM,QAAQ,YAEvB,IAAIgzC,QAAUhzC,QAAQ,aACtB,IAAIqxC,OAASrxC,QAAQ,YAGrB,IAAIg1C,aAAe,IAGnB,SAASC,qBAAqBC,iBAE5B,IAAIA,gBAAiB,MAAO,GAE5B,IAAI,IAAIzuC,OAAOyuC,gBACf,CACE,IAAIjzC,MAAQizC,gBAAgBzuC,KAE5B,UAAUxE,OAAS,SACjBizC,gBAAgBzuC,KAChB,CACE+Z,SAAUve,OAIhB,OAAOizC,gBAGT,SAASC,eAAeC,WAEtB,IAAIA,UAAW,OAGf,GAAGA,qBAAqBl0C,SACtB,MAAO,CAAC4rB,KAAMsoB,WAGhB,GAAGA,UAAUtoB,gBAAgB5rB,SAC3B,OAAOk0C,UAGT,GAAGA,UAAUC,uBAAuBn0C,SACpC,CACEk0C,UAAUtoB,KAAOsoB,UAAUC,YAC3B,OAAOD,UAIT,GAAGA,UAAUE,iBAAiBp0C,SAC9B,CACEk0C,UAAUtoB,KAAOsoB,UAAUE,MAC3B,OAAOF,UAIT,GAAGA,UAAUG,YAAchzC,UAAW,OACtC,GAAG6yC,UAAU/qB,iBAAiBnpB,SAAU,OAExC,MAAM,IAAIs0C,YAAY,kDAcxB,SAASC,gBAAgBztB,OAAQC,QAE/B,GAAGysB,mBACH,CACEtyC,KAAK4lB,OAASA,OACd5lB,KAAK6lB,OAASA,WAGhB,CACE3mB,OAAOwB,eAAeV,KAAM,SAAU,CAACH,MAAO+lB,OAAQjlB,WAAY,OAClEzB,OAAOwB,eAAeV,KAAM,SAAU,CAACH,MAAOgmB,OAAQllB,WAAY,QAkBtE,SAAS6qB,WAAW8nB,OAAQvrC,QAASirC,UAAWO,WAE9C,IAAI3nC,KAAO5L,KAEX,IAAIszC,OACF,MAAM,IAAIF,YAAY,yBAExB,IAAIE,OAAOE,OAASF,OAAOG,OACzB,MAAM,IAAIL,YAAY,qBAExB,IAAIN,gBAAkBD,qBAAqBS,OAAOR,iBAGlD,GAAG/qC,mBAAmBjJ,SACtB,CACE,GAAGk0C,WAAa7yC,UACd,MAAM,IAAIizC,YAAY,6CAExBG,UAAYxrC,QACZirC,UAAY7yC,UACZ4H,QAAY5H,UAGd,GAAG4H,SAAWA,QAAQ2iB,gBAAgB5rB,SACtC,CACE,GAAGk0C,aAAeA,qBAAqBl0C,UACrC,MAAM,IAAIs0C,YAAY,0CAExBG,UAAYP,UACZA,UAAYjrC,QACZA,QAAY5H,UAGd,GAAG6yC,qBAAqBl0C,SACxB,CACE,GAAGy0C,WAAapzC,UACd,MAAM,IAAIizC,YAAY,6CAExBG,UAAYP,UACZA,UAAY7yC,UAGd,GAAG6yC,WAAaA,UAAUtoB,gBAAgB5rB,SACxC,GAAGy0C,aAAeA,qBAAqBz0C,UACrC,MAAM,IAAIs0C,YAAY,0CAE1BrrC,QAAUA,SAAW,GAGrBjI,aAAa3B,KAAK6B,MAElB,GAAGuzC,UACDvzC,KAAKkD,GAAG,UAAWqwC,WAGrB,GAAGjB,mBACDtyC,KAAK0zC,OAAS3rC,QAAQ2rC,YAEtBx0C,OAAOwB,eAAeV,KAAM,SAAU,CAACH,MAAOkI,QAAQ2rC,SAExD,IAAIC,YAAc5rC,QAAQ4rC,aAAe,EAGzC,SAASC,iBAAiB92B,OAExBlR,KAAKioC,OAAO/2B,MAAMlQ,MAAQkQ,OAG5B9c,KAAK8zC,aAAe,WAElB,OAAOd,WAEThzC,KAAK+zC,aAAe,SAASl0C,OAG3B,GAAGmzC,UACH,CAEE,GAAGA,UAAUltC,oBACXktC,UAAUltC,oBAAoB,UAAW8tC,uBAGtC,GAAGZ,UAAU1vC,eAChB0vC,UAAU1vC,eAAe,OAAQswC,kBAIrC,GAAG/zC,MACH,CAEE,GAAGA,MAAM+F,iBACP/F,MAAM+F,iBAAiB,UAAWguC,uBAG/B,GAAG/zC,MAAMoD,YACZpD,MAAMoD,YAAY,OAAQ2wC,kBAG9BZ,UAAYD,eAAelzC,QAG7B,IAAIyyC,mBACFpzC,OAAOwB,eAAeV,KAAM,YAC5B,CACEY,IAAKZ,KAAK8zC,aAAanwC,KAAK3D,MAC5Ba,IAAKb,KAAK+zC,aAAapwC,KAAK3D,QAGhCA,KAAK+zC,aAAaf,WAGlB,IAAIvC,gBAAuB1oC,QAAQ0oC,iBAAwBmC,aAC3D,IAAIlC,qBAAuB3oC,QAAQ2oC,sBAAwBD,gBAC3D,IAAIuD,iBAAuBjsC,QAAQisC,kBAAwBpB,aAC3D,IAAIqB,mBAAuBlsC,QAAQksC,oBAAwBrB,aAG3D,IAAIsB,UAAY,EAEhB,IAAIC,SAAY,IAAIlF,OACpB,IAAImF,UAAY,IAAInF,OACpB,IAAIoF,mBAAqB,IAAIpF,OAE7B,IAAIqF,YAAc,GAMlB,SAASC,cAAcxyC,QAASygB,GAAIgyB,MAElC,IAAIp2B,SACJ,CACErc,QAASA,QAET0yC,QAAS3qC,YAAW,WAElBsqC,UAAUn1B,OAAOuD,GAAIgyB,QAEvBR,mBAGFI,UAAUvzC,IAAIud,SAAUoE,GAAIgyB,MAM9B,SAASE,uBAAuBC,IAAKhT,MAEnC,IAAI8S,QAAU3qC,YAAW,WAEvBuqC,mBAAmBp1B,OAAO01B,IAAKhT,QAEjCsS,oBAEAI,mBAAmBxzC,IAAI4zC,QAASE,IAAKhT,MAiBvC,SAASiT,WAAWhvB,OAAQC,OAAQrD,GAAImf,KAAMqR,WAE5CK,gBAAgBl1C,KAAK6B,KAAM4lB,OAAQC,QAEnC7lB,KAAK8zC,aAAe,WAElB,OAAOd,WAEThzC,KAAK+zC,aAAe,SAASl0C,OAE3BmzC,UAAYD,eAAelzC,QAG7B,IAAIyyC,mBACFpzC,OAAOwB,eAAeV,KAAM,YAC5B,CACEY,IAAKZ,KAAK8zC,aAAanwC,KAAK3D,MAC5Ba,IAAKb,KAAK+zC,aAAapwC,KAAK3D,QAGhC,IAAIoe,SAAWg2B,UAAUxzC,IAAI4hB,GAAImf,MAKjC,KAAKqR,WAAapnC,KAAKkoC,gBACvB,CACE,GAAGxB,mBACDtyC,KAAK60C,WAAaC,QAAQ12B,eAE1Blf,OAAOwB,eAAeV,KAAM,aAC5B,CACEH,MAAOi1C,QAAQ12B,YAIrB,IAAI22B,eAAiBjC,gBAAgBltB,QAErC5lB,KAAKwzC,KAAOF,OAAOE,KAAK7vC,KAAK2vC,OAAQtzC,KAAMwiB,IAU3CxiB,KAAKowC,MAAQ,SAASxuC,MAAOgS,OAAQo/B,WAGnC,GAAGpxC,iBAAiB9C,UAAY8C,OAASA,MAAM8oB,gBAAgB5rB,SAC/D,CACE,GAAG8U,QAAUzT,UACX,MAAM,IAAIizC,YAAY,4CAExBJ,UAAYpxC,MACZgS,OAAS,KACThS,MAAQzB,eAGL,GAAGyT,kBAAkB9U,UACvB8U,QAAUA,OAAO8W,gBAAgB5rB,SACpC,CACE,GAAGk0C,WAAa7yC,UACd,MAAM,IAAIizC,YAAY,4CAExBJ,UAAYp/B,OACZA,OAAS,KAGXo/B,UAAYD,eAAeC,WAG3B,GAAG50B,SACDuP,aAAavP,SAASq2B,SAExB,GAAG9S,MAAQxhC,UACX,CACE,GAAGyB,MACDA,MAAM4yC,KAAO7S,KAEf,GAAG/tB,OACDA,OAAO4gC,KAAO7S,KAGlB,IAAI5/B,QAGJ,GAAGH,OAASgS,QAAUzT,UACtB,CACE,GAAGyL,KAAK8nC,QAAUvzC,UAClB,CACE,GAAGyB,MACDA,MAAM+/B,KAAO/1B,KAAK8nC,YAElB9/B,OAAO+tB,KAAO/1B,KAAK8nC,OAIvB,GAAGqB,eACH,CACE,GAAGA,eAAenzC,OAASzB,WAAayB,MACtCG,QACA,CACEH,MAAOA,WAIX,CACE,IAAIgkB,OAAShkB,MACAmzC,eAAenzC,MACfmzC,eAAe32B,SAE5Brc,QACA,CACE6jB,OAAQA,OACRC,OAAQjkB,OAASgS,cAKrB7R,QACA,CACEH,MAAQA,MACRgS,OAAQA,QAGZ7R,QAAUuxC,OAAOE,KAAKzxC,QAASygB,SAI5B,GAAGpE,SACNrc,QAAUqc,SAASrc,aAInBA,QAAUuxC,OAAOE,KAAK,CAAC5/B,OAAQ,MAAO4O,IAGxC+xB,cAAcxyC,QAASygB,GAAImf,MAG3BqR,UAAYA,WAAahzC,KAAK8zC,gBAAkBloC,KAAKkoC,eAErD,GAAGd,UACD,OAAOA,UAAUtoB,KAAK3oB,SAExB,OAAOA,SAGXiI,SAAS4qC,WAAYvB,iBAGrB,SAASlC,OAAOpvC,SAEd,IAAIsC,IAAMiwC,YAAYvyC,SACtB,IAAIsC,IAAK,cAEFiwC,YAAYvyC,SAEnB,IAAIouC,QAAUgE,SAASlvC,IAAIZ,IAAIme,GAAIne,IAAImwC,MACvC,IAAIrE,QAAS,OAEbxiB,aAAawiB,QAAQsE,SAGrBC,uBAAuBrwC,IAAIme,GAAIne,IAAImwC,MAQrCx0C,KAAKmxC,OAAS,SAASpvC,SAErB,GAAGA,QAAS,OAAOovC,OAAOpvC,SAE1B,IAAI,IAAIA,WAAWuyC,YACjBnD,OAAOpvC,UAIX/B,KAAK62B,MAAQ,WAGX,IAAImc,UAAYhzC,KAAK8zC,eACrB,GAAGd,WAAaA,UAAUnc,MACxBmc,UAAUnc,MAAM,KAAM,kBAGxB72B,KAAKmxC,SAELkD,mBAAmBvwB,QAAQ6J,cAG3BymB,UAAUtwB,SAAQ,SAAS1F,UAEzBuP,aAAavP,SAASq2B,aAiB1Bz0C,KAAK+wC,OAAS,SAASnrB,OAAQC,OAAQ2uB,KAAMxB,UAAWjlC,UAGtD,GAAG8X,kBAAkB/mB,SACrB,CACE,GAAG01C,MAAQr0C,UACT,MAAM,IAAIizC,YAAY,4CAExBrlC,SAAY8X,OACZmtB,UAAY7yC,UACZq0C,KAAYr0C,UACZ0lB,OAAY1lB,eAGT,GAAGq0C,gBAAgB11C,SACxB,CACE,GAAGk0C,WAAa7yC,UACd,MAAM,IAAIizC,YAAY,4CAExBrlC,SAAYymC,KACZxB,UAAY7yC,UACZq0C,KAAYr0C,eAGT,GAAG6yC,qBAAqBl0C,SAC7B,CACE,GAAGiP,UAAY5N,UACb,MAAM,IAAIizC,YAAY,4CAExBrlC,SAAYilC,UACZA,UAAY7yC,UAGd,GAAGyL,KAAK8nC,QAAUvzC,UAClB,CACE0lB,OAASA,QAAU,GAEnBA,OAAO8b,KAAO/1B,KAAK8nC,OAGrB,GAAGc,MAAQr0C,UACX,CACE0lB,OAASA,QAAU,GAEnBA,OAAO2uB,KAAOA,KAIhB,IAAIzyC,QACJ,CACE6jB,OAAQA,OACRC,OAAQA,QAGV,GAAG9X,SACH,CACE,IAAIyU,GAAK0xB,YACT,IAAIc,QAAU,EAEdjzC,QAAUuxC,OAAOE,KAAKzxC,QAASygB,IAE/B,SAASyyB,iBAAiBrzC,MAAOgS,QAE/BhI,KAAKulC,OAAOpvC,SAEZgM,SAASnM,MAAOgS,QAGlB,IAAIu8B,QACJ,CACEpuC,QAAiBA,QACjBgM,SAAiBknC,iBACjBnC,gBAAiBA,gBAAgBltB,SAAW,IAG9C,IAAIsvB,iBAAmBnC,eAAeC,WAEtC,SAASxvB,YAAYwvB,WAEnB,IAAImC,GAAMvvB,SAAW,OAAS8qB,qBAAuBD,gBACrDN,QAAQsE,QAAU3qC,WAAW2qC,QAASU,GAAGvuC,KAAKkF,IAAI,EAAGkpC,YACrDV,YAAYvyC,SAAW,CAACygB,GAAIA,GAAIgyB,KAAMA,MACtCL,SAAStzC,IAAIsvC,QAAS3tB,GAAIgyB,MAE1BxB,UAAYA,WAAakC,kBAAoBtpC,KAAKkoC,eAClD,GAAGd,UACD,OAAOA,UAAUtoB,KAAK3oB,SAExB,OAAOA,QAGT,SAASqzC,MAAMpC,WAEbA,UAAYD,eAAeC,WAE3BxzC,QAAQC,KAAKu1C,QAAQ,8BAA8BjzC,SAEnD,IAAI0yC,QAAUJ,mBAAmBpvC,IAAIud,GAAIgyB,MACzC7mB,aAAa8mB,SAEb,OAAOjxB,YAAYwvB,WAGrB,SAASyB,UAEP,GAAGO,QAAUrB,YACX,OAAOyB,MAAMpC,WAEf,IAAIpxC,MAAQ,IAAI7D,MAAM,yBAClB6D,MAAMuuC,QAAUpuC,QAEpBH,MAAMwzC,MAAQA,MAEdH,iBAAiBrzC,OAGnB,OAAO4hB,YAAYwvB,WAIrBjxC,QAAUuxC,OAAOE,KAAKzxC,SAEtBixC,UAAYA,WAAahzC,KAAK8zC,eAC9B,GAAGd,UACD,OAAOA,UAAUtoB,KAAK3oB,SAExB,OAAOA,SAcT/B,KAAK6zC,OAAS,SAAS9xC,QAASixC,WAE9B,IAAIjxC,QACF,MAAM,IAAItB,UAAU,0BAEtB,IAEEsB,QAAUuxC,OAAOG,OAAO1xC,SAE1B,MAAM1E,GAGJ,OAAOmC,QAAQ6jB,MAAMhmB,EAAG0E,SAG1B,IAAIygB,GAASzgB,QAAQygB,GACrB,IAAImyB,IAAS5yC,QAAQ4yC,IACrB,IAAI/uB,OAAS7jB,QAAQ6jB,OACrB,IAAIC,OAAS9jB,QAAQ8jB,QAAU,GAE/B,IAAI8b,KAAO9b,OAAO8b,KAClB,IAAI6S,KAAO3uB,OAAO2uB,KAGlB,GAAG5oC,KAAK8nC,QAAUvzC,WAAawhC,MAAQ/1B,KAAK8nC,OAAQ,OAGpD,GAAGlxB,IAAMriB,WAAaw0C,KAAOx0C,UAC7B,CACE,IAAIk1C,aAAe,IAAIhC,gBAAgBztB,OAAQC,QAE/C,GAAGja,KAAKtK,KAAK,UAAW+zC,cAAe,OACvC,OAAOA,aAIT,SAASC,iBAGPtC,UAAYD,eAAeC,YAAcpnC,KAAKkoC,eAC9C,GAAGd,UACH,CACE,IAAI50B,SAAWg2B,UAAUxzC,IAAI4hB,GAAImf,MACjC,GAAGvjB,SACD,OAAO40B,UAAUtoB,KAAKtM,SAASrc,SAGnC,IAAIwzC,MAAS/yB,IAAMriB,UAAaqiB,GAAKmyB,IACrC,IAAIxE,QAAU,IAAIyE,WAAWhvB,OAAQC,OAAQ0vB,MAAO5T,KAAMqR,WAE1D,GAAGpnC,KAAKtK,KAAK,UAAW6uC,SAAU,OAClC,OAAOA,QAGT,SAASqF,gBAAgBrF,QAASvuC,MAAOgS,QAEvCu8B,QAAQpiC,SAASnM,MAAOgS,QAG1B,SAAS6hC,mBAAmBhB,SAE1Bj1C,QAAQC,KAAK,6BAA8BsC,SAG3C4rB,aAAa8mB,SACbC,uBAAuBC,IAAKhT,MAK9B,GAAG/b,OACH,CAEE,GAAG4uB,MAAQr0C,WAAaq0C,MAAQ5oC,KAAK8nC,OACrC,CACE,IAAIvD,QAAUgE,SAASvzC,IAAI+zC,IAAKhT,MAChC,GAAGwO,QACH,CACE,IAAI2C,gBAAkB3C,QAAQ2C,gBAE9B,GAAGltB,QAAUktB,gBAAgBlxC,MAC3B,OAAO4zC,gBAAgBrF,QAAStqB,QAElC,GAAGD,QAAUktB,gBAAgB10B,SAC3B,OAAOo3B,gBAAgBrF,QAAS,KAAMtqB,QAExC,OAAOyvB,iBAGT,IAAII,UAAYrB,mBAAmBzzC,IAAI+zC,IAAKhT,MAC5C,GAAG+T,UACD,OAAOD,mBAAmBC,WAI9B,OAAOJ,iBAGT,IAAI1zC,MAASG,QAAQH,MACrB,IAAIgS,OAAS7R,QAAQ6R,OAGrB,GAAGhS,OAAUA,MAAM4yC,MAAS5yC,MAAM4yC,MAAS5oC,KAAK8nC,OAAQ,OACxD,GAAG9/B,QAAUA,OAAO4gC,MAAQ5gC,OAAO4gC,MAAQ5oC,KAAK8nC,OAAQ,OAGxD,IAAIvD,QAAUgE,SAASvzC,IAAI+zC,IAAKhT,MAChC,IAAIwO,QACJ,CACE,IAAIuF,UAAYrB,mBAAmBzzC,IAAI+zC,IAAKhT,MAC5C,GAAG+T,UACD,OAAOD,mBAAmBC,WAE5B,OAAOl2C,QAAQC,KAAK,2CAA4CsC,SAIlEyzC,gBAAgBrF,QAASvuC,MAAOgS,SAGpC5J,SAASwhB,WAAY1rB,cAGrB0rB,WAAW6nB,gBAAkBA,gBAG7B/0C,OAAOJ,QAAUstB,WAEjB,IAAIkL,QAAU94B,QAAQ,aACtB,IAAI+3C,WAAa/3C,QAAQ,wBAEzB4tB,WAAWkL,QAAUA,QACrBlL,WAAWkL,QAAQif,WAAaA,WAChCnqB,WAAWolB,QAAUA,2ICzyBrB,SAAS4C,KAAKzxC,QAASygB,IAErB,IAAI5O,OACJ,CACEgiC,QAAS,OAIX,GAAG7zC,QAAQ6jB,OACX,CACEhS,OAAOgS,OAAS7jB,QAAQ6jB,OAExB,GAAG7jB,QAAQ8jB,OACTjS,OAAOiS,OAAS9jB,QAAQ8jB,OAG1B,GAAGrD,IAAMriB,UACPyT,OAAO4O,GAAKA,QAIX,GAAGA,IAAMriB,UACd,CACE,GAAG4B,QAAQH,MACX,CACE,GAAGG,QAAQ6R,SAAWzT,UACpB,MAAM,IAAIM,UAAU,qCAEtBmT,OAAOhS,MAAQG,QAAQH,WAEpB,GAAGG,QAAQ6R,SAAWzT,UACzByT,OAAOA,OAAS7R,QAAQ6R,YAExB,MAAM,IAAInT,UAAU,iCAEtBmT,OAAO4O,GAAKA,GAGd,OAAOoB,KAAKlJ,UAAU9G,QAYxB,SAAS6/B,OAAO1xC,SAEd,IAAI6R,OAAS7R,QAEb,UAAUA,UAAY,UAAYA,mBAAmBc,OAAQ,CAC3D+Q,OAASgQ,KAAKpV,MAAMzM,SAKtB,IAAIoO,QAAUyD,OAAOgiC,QACrB,GAAGzlC,UAAY,MACb,MAAM,IAAI1P,UAAU,4BAA8B0P,QAAU,MAAQpO,SAGtE,GAAG6R,OAAOgS,QAAUzlB,UACpB,CACE,GAAGyT,OAAO4O,IAAMriB,UACd,MAAM,IAAIM,UAAU,oBAAoBsB,SAE1C,IAAI8zC,eAAiBjiC,OAAOA,SAAWzT,UACvC,IAAI21C,cAAiBliC,OAAOhS,QAAWzB,UAGvC,GAAG01C,gBAAkBC,cACnB,MAAM,IAAIr1C,UAAU,sCAAsCsB,SAE5D,IAAI8zC,iBAAmBC,cACrB,MAAM,IAAIr1C,UAAU,kCAAkCsB,SAExD6R,OAAO+gC,IAAM/gC,OAAO4O,UACb5O,OAAO4O,GAIhB,OAAO5O,OAIT1V,QAAQs1C,KAASA,KACjBt1C,QAAQu1C,OAASA,iDCtGjB,SAASD,KAAKzxC,SAEZ,MAAM,IAAItB,UAAU,uBAGtB,SAASgzC,OAAO1xC,SAEd,MAAM,IAAItB,UAAU,uBAItBvC,QAAQs1C,KAASA,KACjBt1C,QAAQu1C,OAASA,iDCZjB,IAAI5C,QAAUjzC,QAAQ,aACtB,IAAIm4C,OAAUn4C,QAAQ,YAGtBM,QAAQ2yC,QAAUA,QAClB3yC,QAAQ63C,OAAUA,iLCLlB,IAAAh0B,eAAA,WAOC,SAAAA,iBAJQ/hB,KAAA8hB,OAAkBpa,OAAOlI,QACzBQ,KAAAg2C,QAAU,CAACh2C,KAAK8hB,OAAOoF,IAAKlnB,KAAK8hB,OAAOuB,MAAOrjB,KAAK8hB,OAAOoB,KAAMljB,KAAK8hB,OAAOriB,KAAMO,KAAK8hB,OAAOlgB,OAC/F5B,KAAAi2C,WAAa,MAIdl0B,eAAAC,YAAP,WACC,IAAID,eAAem0B,SAAS,CAC3Bn0B,eAAem0B,SAAW,IAAIn0B,eAE/B,OAAOA,eAAem0B,UAGvBn0B,eAAAhjB,UAAAmoB,IAAA,WAAI,IAAAroB,KAAA,OAAA,IAAAsrB,GAAA,EAAAA,GAAA3oB,UAAApD,OAAA+rB,KAAc,CAAdtrB,KAAAsrB,IAAA3oB,UAAA2oB,IACH,IAAKnqB,KAAKi2C,WAAY,CACrBj2C,KAAKg2C,QAAQ,GAAGt3C,MAAMsB,KAAK8hB,OAAQtgB,aAIrCugB,eAAAhjB,UAAAskB,MAAA,WAAM,IAAAxkB,KAAA,OAAA,IAAAsrB,GAAA,EAAAA,GAAA3oB,UAAApD,OAAA+rB,KAAc,CAAdtrB,KAAAsrB,IAAA3oB,UAAA2oB,IACL,IAAKnqB,KAAKi2C,WAAY,CACrBj2C,KAAKg2C,QAAQ,GAAGt3C,MAAMsB,KAAK8hB,OAAQtgB,aAIrCugB,eAAAhjB,UAAAmkB,KAAA,WAAK,IAAArkB,KAAA,OAAA,IAAAsrB,GAAA,EAAAA,GAAA3oB,UAAApD,OAAA+rB,KAAc,CAAdtrB,KAAAsrB,IAAA3oB,UAAA2oB,IACJ,IAAKnqB,KAAKi2C,WAAY,CACrBj2C,KAAKg2C,QAAQ,GAAGt3C,MAAMsB,KAAK8hB,OAAQtgB,aAIrCugB,eAAAhjB,UAAAU,KAAA,WAAK,IAAAZ,KAAA,OAAA,IAAAsrB,GAAA,EAAAA,GAAA3oB,UAAApD,OAAA+rB,KAAc,CAAdtrB,KAAAsrB,IAAA3oB,UAAA2oB,IACJ,IAAKnqB,KAAKi2C,WAAY,CACrBj2C,KAAKg2C,QAAQ,GAAGt3C,MAAMsB,KAAK8hB,OAAQtgB,aAIrCugB,eAAAhjB,UAAA6C,MAAA,WAAM,IAAA/C,KAAA,OAAA,IAAAsrB,GAAA,EAAAA,GAAA3oB,UAAApD,OAAA+rB,KAAc,CAAdtrB,KAAAsrB,IAAA3oB,UAAA2oB,IACLnqB,KAAKg2C,QAAQ,GAAGt3C,MAAMsB,KAAK8hB,OAAQtgB,YAGpCugB,eAAAhjB,UAAAo0B,eAAA,WACCnzB,KAAKi2C,WAAa,MAEpB,OAAAl0B,eA/CA,GAAa7jB,QAAA6jB,eAAAA,yDCyBbra,OAAOixB,YAAc,SAAUD,cAAe3qB,SAAUooC,kBACpD,GAAIvnC,UAAUC,UAAUhE,QAAQ,WAAa,MAAQ+D,UAAUwnC,oBAAsBxnC,UAAUynC,YAAa,CAExGtoC,SAAS,CACL6e,MAAO,OAEX,OAMJ,KAAMhe,UAAU0nC,gBAAiB,CAC7BvoC,SAAS,KAAM,UAAW,CACtB6e,MAAO,CACH2pB,eAAgB7d,cAChB8d,YAAa9d,iBAGrB,OAGJhxB,OAAO9B,iBAAiB,UAAW6wC,kBAEnC,SAASA,iBAAiB35B,OACtB,IAAKA,MAAMlQ,KAAM,OAEjB,GAAIkQ,MAAMlQ,KAAKmrB,oBAAqB,CAChC,GAAIjb,MAAMlQ,KAAKmrB,sBAAwB,wBAAyB,CAC5DhqB,SAAS,yBACN,CACHA,SAAS,KAAM+O,MAAMlQ,KAAKmrB,oBAAqBE,qBAAqB,KAAMnb,MAAMlQ,KAAKmrB,oBAAqBjb,MAAMlQ,KAAK8pC,uBAIzHhvC,OAAO5B,oBAAoB,UAAW2wC,kBAG1C,GAAI35B,MAAMlQ,KAAK+pC,sBAAuB,CAClC5oC,SAAS+O,MAAMlQ,KAAK+pC,sBAAuB,KAAM1e,qBAAqBnb,MAAMlQ,KAAK+pC,wBAGjFjvC,OAAO5B,oBAAoB,UAAW2wC,mBAI9C,IAAKN,iBAAkB,CACnBrsC,WAAW8sC,uBAAwB,SAElC,CACD9sC,YAAW,WACP8sC,uBAAuBT,oBACxB,OAIX,SAASle,qBAAqBr2B,MAAOg3B,SAAU8d,sBAC3C,IAAIG,mBAAqB,CACrB/kB,MAAO,MACPlF,MAAO,CACHiL,UAAW,CACPC,kBAAmBl2B,MAAQ,SAAW,UACtCk1C,SAAUpvC,OAAO0/B,OAAO9a,MAAQ,KAAO5kB,OAAO0/B,OAAO9a,MAAQ,KAC7DyqB,UAAWrvC,OAAO0/B,OAAO5a,OAAS,KAAO9kB,OAAO0/B,OAAO5a,OAAS,MAEpEwqB,SAAU,KAIlB,KAAMN,qBAAsB,CACxBG,mBAAmB/kB,MAAQ,CACvB+F,UAAW,CACPC,kBAAmBl2B,MAAQ,SAAW,WAG1Co1C,SAAU,IAIlB,GAAIpe,SAAU,CACVie,mBAAmBjqB,MAAMiL,UAAUE,oBAAsBa,SAEzD,GAAIie,mBAAmB/kB,OAAS+kB,mBAAmB/kB,MAAM+F,UAAW,CAChEgf,mBAAmB/kB,MAAM+F,UAAUE,oBAAsBa,UAIjE,OAAOie,mBAGX,SAASD,uBAAuBT,kBAC5B,IAAKc,OAAQ,CACTC,YAAW,WACPN,uBAAuBT,qBAE3B,OAGJ,IAAKc,OAAOE,SAAU,CAClBrtC,YAAW,WACP8sC,uBAAuBT,oBACxB,KACH,OAGJ,IAAKA,iBAAkB,CACnBc,OAAOG,cAAcnE,YAAY,CAC7BoE,gBAAiB,MAClB,UAEF,KAAMlB,iBAAiBryB,QAAS,CACjCmzB,OAAOG,cAAcnE,YAAY,CAC7BqE,sBAAuBnB,kBACxB,SAEF,CACDc,OAAOG,cAAcnE,YAAY,CAC7BsE,yBAA0B,MAC3B,MAIX,IAAIN,OAGJvvC,OAAOuwB,qBAAuB,SAAUlqB,UACpCmpC,YAAW,WACPve,aAAY,SAAU/2B,MAAOg3B,SAAUie,oBACnC,IAAKA,mBAAoB,CACrBA,mBAAqB,CACjBjqB,MAAO,MAIf7e,SAASnM,MAAOi1C,mBAAmBjqB,cAK/C,SAASsqB,WAAWM,cAChB,GAAIP,OAAQ,CACRO,eACA,OAGJP,OAAStnC,SAAS2Y,cAAc,UAChC2uB,OAAOQ,OAAS,WACZR,OAAOE,SAAW,KAClBK,gBAEJP,OAAOpuB,IAAM,uEACbouB,OAAO7tB,MAAMC,QAAU,QACtB1Z,SAAS2Z,MAAQ3Z,SAAS+nC,iBAAiB9uB,YAAYquB,QAG5DvvC,OAAO2wB,yBAA2B,SAAUtqB,UAExC,KAAMa,UAAU0nC,gBAAiB,CAC7BvoC,SAAS,qBACT,OAGJrG,OAAO9B,iBAAiB,UAAW6wC,kBAEnC,SAASA,iBAAiB35B,OACtB,IAAKA,MAAMlQ,KAAM,OAEjB,GAAIkQ,MAAMlQ,KAAK+pC,sBAAuB,CAClC5oC,SAAS+O,MAAMlQ,KAAK+pC,uBAGpBjvC,OAAO5B,oBAAoB,UAAW2wC,mBAI9C3sC,WAAW6tC,oCAAqC,MAGpD,SAASA,sCACL,IAAKV,OAAQ,CACTC,WAAWS,qCACX,OAGJ,IAAKV,OAAOE,SAAU,CAClBrtC,WAAW6tC,oCAAqC,KAChD,OAGJV,OAAOG,cAAcnE,YAAY,CAC7B5a,yBAA0B,MAC3B,KAGPn6B,QAAQy6B,YAAcjxB,OAAOixB,sDC1N7B,IAAIb,kBAAoB,SACxB,IAAIc,SACJ,IAAIgf,eAEJ,UAAUlwC,SAAW,oBAAsBkH,YAAc,oBAAsBA,UAAUC,YAAc,YAAY,CAC/G,IAAIgpC,iBAAmBnwC,OAAOowC,iBAAmB,YACjD,IAAIC,UAAYrwC,OAAOkI,OAAShB,UAAUC,UAAUhE,QAAQ,UAAY,EACxE,IAAImtC,WAAatwC,OAAOuwC,SAAWF,QAEnCrwC,OAAO9B,iBAAiB,WAAW,SAAUkX,OACzC,GAAIA,MAAMo7B,QAAUxwC,OAAOywC,SAASD,OAAQ,CACxC,OAEJE,kBAAkBt7B,MAAMlQ,SAKhC,SAASwrC,kBAAkBxrC,MAEvB,GAAIA,MAAQ,wBAAyB,CACjC,GAAIgrC,eACA,OAAOA,eAAe,8BAEtB,MAAM,IAAI75C,MAAM,yBAGxB,GAAI6O,MAAQ,sCAAuC,CAC/CkrB,kBAAoB,UAGxB,GAAIlrB,KAAKgsB,UAAYgf,eAAgB,CACjCA,eAAehf,SAAWhsB,KAAKgsB,SAAUhsB,KAAK8pC,uBAAyB,OAK/E,SAAS2B,2BAA2BtqC,UAChC,IAAKA,SAAU,OACf,GAAI+pB,mBAAqB,UAAW,OAAO/pB,SAAS,MAGpDrG,OAAOurC,YAAY,gBAAiB,KACpCnpC,YAAW,WACP,GAAIguB,mBAAqB,SAAU,CAC/B/pB,SAAS,YACNA,SAAS,QACjB,KAIP,SAASuqC,YAAYvqC,UACjB,IAAKA,SACD,KAAM,qCACV,GAAI6qB,SACA,OAAO7qB,SAAS6qB,UACpBgf,eAAiB7pC,SACjBrG,OAAOurC,YAAY,eAAgB,KAIvC,SAASsF,kBAAkB1zC,IAAKkJ,UAC5B,IAAKlJ,MAAQA,IAAIif,QAAS,KAAM,wDAChC,IAAK/V,SAAU,KAAM,qCAErB,GAAI6qB,SAAU,OAAO7qB,SAAS6qB,UAE9Bgf,eAAiB7pC,SACjBrG,OAAOurC,YAAY,CACfuF,sBAAuB3zC,KACxB,KAIP,SAAS4zC,qBAAqB1qC,UAC1B,IAAKA,SAAU,KAAM,qCACrB,GAAI6qB,SAAU,OAAO7qB,SAAS6qB,UAE9Bgf,eAAiB7pC,SACjBrG,OAAOurC,YAAY,iBAAkB,KAGzC,SAAS5a,yBAAyBqgB,YAAa3qC,UAC3C,GAAI8pC,UACA,OAAO9pC,SAAS,cACpB,GAAIvM,UAAUpD,QAAU,EAAG,CACvB2P,SAAW2qC,YACXA,YAAc,mCAElB,IAAIC,MAAQhpC,SAAS2Y,cAAc,OACnCqwB,MAAM9vB,IAAM,sBAAwB6vB,YAAc,YAClDC,MAAMlB,OAAS,WACX3f,kBAAoB,SACpBpwB,OAAOurC,YAAY,gBAAiB,KACpCnpC,YAAW,WACP,GAAIguB,mBAAqB,SAAU,CAC/B/pB,SAAS,2BAETA,SAAS,uBACd,MAEP4qC,MAAMnxB,QAAU,WACZzZ,SAAS,kBAIjB,SAAS6qC,8BAA8B7qC,UACnCkqB,qBAAqBlqB,SAAU,MAInC,SAASkqB,qBAAqBlqB,SAAUwpC,0BACpC3e,SAAW,GACX,IAAIigB,yBAA2B,CAC3BtC,eAAgB,SAChBC,YAAa,UAEjB,GAAIqB,UACA,OAAO9pC,SAAS,KAAM8qC,0BAG1B,IAAIhC,mBAAqB,CACrBhf,UAAW,CACPC,kBAAmBA,kBACnBgf,SAAU1P,OAAO9a,MAAQ,KAAO8a,OAAO9a,MAAQ,KAC/CyqB,UAAW3P,OAAO5a,OAAS,KAAO4a,OAAO5a,OAAS,MAEtDwqB,SAAU,IAKd,GAAIlf,mBAAqB,YAAcc,SAAU,CAC7C,GAAI2e,yBAA0B,CAC1BkB,sBAAqB,SAAU7f,SAAU8d,sBACrCG,mBAAmBhf,UAAUE,oBAAsBa,SAEnD,GAAI8d,qBAAsB,CACtBG,mBAAmBH,qBAAuB,KAE9C3oC,SAAS6qB,UAAY,wBAA0BA,SAAW,KAAMie,2BAGnE,CACDyB,aAAY,SAAU1f,UAClBie,mBAAmBhf,UAAUE,oBAAsBa,SACnD7qB,SAAS6qB,UAAY,wBAA0BA,SAAW,KAAMie,uBAGxE,OAIJ,GAAI/e,mBAAqB,UAAW,CAChC+e,mBAAmBhf,UAAUE,oBAAsBa,SAIvD7qB,SAAS,KAAM8oC,oBAGnB34C,QAAQ+5B,qBAAuBA,qBAC/B/5B,QAAQ06C,8BAAgCA,8BACxC16C,QAAQm6C,2BAA6BA,2BACrCn6C,QAAQm6B,yBAA2BA,yBACnCn6B,QAAQo6C,YAAcA,yJCtKtB,IAAAzjC,SAAAjX,QAAA,YAEA,IAAAipB,cAAA,WAEC,SAAAA,iBAEOA,cAAA7E,YAAP,WACC,IAAKhiB,KAAKk2C,SAAU,CACnBl2C,KAAKk2C,SAAW,IAAIrvB,cAErB,OAAOA,cAAcqvB,UAGfrvB,cAAA9nB,UAAAywB,gBAAP,WACC,OAAO3a,SAAS/R,OAAS,UAMnB+jB,cAAA9nB,UAAAypB,gBAAP,WACC,OAAO3T,SAAS/R,OAAS,UAMnB+jB,cAAA9nB,UAAA0wB,sBAAP,WACC,OAAO5a,SAAS/R,OAAS,iBAMnB+jB,cAAA9nB,UAAAouB,iBAAP,WACC,OAAOtY,SAAS/R,OAAS,WAMnB+jB,cAAA9nB,UAAAquB,uBAAP,WACC,OAAOvY,SAAS/R,OAAS,kBAMnB+jB,cAAA9nB,UAAA2wB,eAAP,WACC,OAAO7a,SAAS/R,OAAS,SAMnB+jB,cAAA9nB,UAAA4wB,qBAAP,WACC,OAAO9a,SAAS/R,OAAS,gBAMnB+jB,cAAA9nB,UAAA6wB,cAAP,WACC,IAAMzf,SAAU0E,WAAQ,MAARA,gBAAQ,OAAA,EAARA,SAAU1E,SAAU8D,WAAWY,SAAS1E,UAAY,EACpE,OAAO0E,SAAS/R,OAAS,kBAAoBqN,SAAW,IAMlD0W,cAAA9nB,UAAA8wB,oBAAP,kBACC,IAAM1f,SAAU0E,WAAQ,MAARA,gBAAQ,OAAA,EAARA,SAAU1E,SAAU8D,WAAWY,SAAS1E,UAAY,EACpE,OAAO0E,SAAS/R,OAAS,oBAAoBsnB,GAAAvV,SAASpI,MAAE,MAAA2d,UAAA,OAAA,EAAAA,GAAEzU,UAAW,WAAaxF,QAAU,IAMtF0W,cAAA9nB,UAAA+wB,iBAAP,WACC,OAAOjb,SAAS/R,OAAS,mBAMnB+jB,cAAA9nB,UAAAgxB,WAAP,WACC,OAAOlb,SAAS/R,OAAS,YAMnB+jB,cAAA9nB,UAAAixB,iBAAP,WACC,OACCnb,SAAS/R,OAAS,2BAClB+R,SAAS/R,OAAS,oBAOb+jB,cAAA9nB,UAAAuwB,eAAP,WACC,IAAMzgB,YAAcgG,SAASpG,GAAKoG,SAASpG,GAAKG,UAAUC,UAE1D,IAAMiqC,YAAc,eAAgBnpC,SACpC,IAAMopC,OAAS,wBAAwBtrC,KAAKoB,YAAciqC,YAC1D,IAAME,SACL,qBAAqBvrC,KAAKoB,YAC1B,qBAAqBpB,KAAKoB,YAC1BiqC,YAED,OAAOC,QAAUC,UAMXnyB,cAAA9nB,UAAAwwB,gBAAP,WACC,IAAM1gB,YAAcgG,SAASpG,GAAKoG,SAASpG,GAAKG,UAAUC,UAC1D,MACC,oBAAoBpB,KAAKmB,UAAUqqC,SACnC,qBAAqBxrC,KAAKoB,aACzB,oBAAoBpB,KAAKoB,aACzB,oBAAoBpB,KAAKoB,YAOrBgY,cAAA9nB,UAAA2tB,WAAP,WACC,OAAO1sB,KAAKsvB,kBAAoBza,SAASpG,GAAK5D,QAAQ,aAAe,GAM/Dgc,cAAA9nB,UAAAyxB,eAAP,WACC,OACC3b,SAASpI,GAAKkJ,SAAW,WAAad,SAAS/R,MAAQ,mBAOlD+jB,cAAA9nB,UAAAitB,eAAP,WACC,OAAOnX,SAASpI,GAAKkJ,SAAW,OAASd,SAASpI,GAAKkJ,SAAW,WAM5DkR,cAAA9nB,UAAA2lC,cAAP,WACC,OAAO,OAMD7d,cAAA9nB,UAAAmxB,eAAP,WACC,IAAM/f,SAAU0E,WAAQ,MAARA,gBAAQ,OAAA,EAARA,SAAU1E,SAAU8D,WAAWY,SAAS1E,UAAY,EAEpE,GAAInQ,KAAKgsB,iBAAkB,CAC1B,OAAO,MAER,OACChsB,KAAKwvB,mBACLxvB,KAAKmtB,oBACLntB,KAAK0vB,kBACL1vB,KAAK+vB,cACL/vB,KAAK4vB,iBACJ5vB,KAAKwoB,mBAAqBrY,SAAW,IAOjC0W,cAAA9nB,UAAAwR,QAAP,WACC,OAAOsE,SAAS/R,MAAQ,IAMlB+jB,cAAA9nB,UAAA+U,WAAP,WACC,OAAOe,SAAS1E,SAAW,IAMrB0W,cAAA9nB,UAAAmgC,UAAP,WACC,OAAOrqB,SAASpI,GAAKkJ,QAAU,IAMzBkR,cAAA9nB,UAAAykC,eAAP,WACC,OAAO3uB,SAAS7E,aAAe,IAEjC,OAAA6W,cA1MA,GAAa3oB,QAAA2oB,cAAAA,0qBCeb,IAAA7gB,QAAApI,QAAA,WACA,IAAAub,KAAAvb,QAAA,QACA,IAAAikB,iBAAAjkB,QAAA,4BACA,IAAA8oB,WAAA9oB,QAAA,qBAKA,IAAMkkB,OAAyBD,iBAAAE,eAAeC,cAI9C,IAAInN,SAgBJ,IAAAqkC,WAAA,WAWI,SAAAA,WAAsB7lB,eAAtB,IAAAxP,MAAA7jB,KAAsBA,KAAAqzB,cAAAA,cAPtBrzB,KAAAqoC,sBAA2C,GAC3CroC,KAAAuoC,qBAA0C,GAE1CvoC,KAAAm5C,iBAAsC,GAE9Bn5C,KAAAo5C,uBAAyB,MAG7BvkC,SAAW6R,WAAAG,cAAc7E,cACzBhiB,KAAKqzB,cAAc4S,aAAgBjmC,KAAKqzB,cAAc4S,YAAcjmC,KAAKqzB,cAAc4S,WAAW7nC,OAAS,EAAK4B,KAAKqzB,cAAc4S,WAAajgC,UAEhJhG,KAAK8jC,GAAK,IAAIuV,kBAAkB,CAAEpT,WAAYjmC,KAAKqzB,cAAc4S,aACjEjmC,KAAKwiB,KAAO6Q,cAAc7Q,GAAK6Q,cAAc7Q,GAAKxiB,KAAKs5C,mBAEvDt5C,KAAK8jC,GAAGiF,eAAiB,SAAAjsB,OACrB,KAAMA,MAAMsG,UAAW,CACnB,IAAMA,UAA6BtG,MAAMsG,UACzC,GAAIA,UAAW,CACXS,MAAK0kB,qBAAqB9mC,KAAsB,CAAE2hB,UAAWA,UAAUA,YACvES,MAAKu1B,uBAAyB,MAC9Bv1B,MAAKwP,cAAc0V,eAAejsB,MAAMsG,gBACrC,IAAKS,MAAKu1B,uBAAwB,CACrCv1B,MAAKu1B,uBAAyB,QAK1Cp5C,KAAK8jC,GAAGyV,uBAAyB,WAC7B,GAAI11B,MAAKigB,GAAG0V,iBAAmB,SAAU,CACrC,MAAO31B,MAAKs1B,iBAAiB/6C,OAAS,EAAG,CACrC,IAAIglB,UAAYS,MAAKs1B,iBAAiBn1C,QACtC6f,MAAKigB,GAAGpB,gBAAiCtf,cAKrDpjB,KAAKsnB,QAUT4xB,WAAAn6C,UAAAuoB,MAAA,WAAA,IAAAzD,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzB,GAAIwe,MAAKigB,GAAG0V,iBAAmB,SAAU,CACrCn0C,OAAO,oJAEX,KAAMwe,MAAKwP,cAAcP,YAAa,CAClC,IAAoB,IAAA3I,GAAA,EAAAC,GAAAvG,MAAKwP,cAAcP,YAAY2mB,YAA/BtvB,GAAAC,GAAAhsB,OAAA+rB,KAA4C,CAA3D,IAAMgI,MAAK/H,GAAAD,IACZtG,MAAKigB,GAAG7R,SAASE,MAAOtO,MAAKwP,cAAcP,aAE/C1tB,eAQZ8zC,WAAAn6C,UAAA+lB,QAAA,WACIhD,OAAOuB,MAAM,wBACb,GAAIrjB,KAAK8jC,GAAI,CACT,GAAI9jC,KAAK8jC,GAAG0V,iBAAmB,SAAU,CACrC,OAEJx5C,KAAK8jC,GAAGjN,QACR72B,KAAKqoC,sBAAwB,GAC7BroC,KAAKuoC,qBAAuB,KAQpC2Q,WAAAn6C,UAAA4qC,cAAA,WAAA,IAAA9lB,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzB,IAAIq0C,WAAYC,WAAa,KAG7B,KAAM91B,MAAKwP,cAAcwG,iBAAkB,CACvC6f,kBAAqB71B,MAAKwP,cAAcwG,iBAAiB/H,QAAU,UAC/DjO,MAAKwP,cAAcwG,iBAAiB/H,MAAQ,KAChD6nB,kBAAqB91B,MAAKwP,cAAcwG,iBAAiBjN,QAAU,UAC/D/I,MAAKwP,cAAcwG,iBAAiBjN,MAAQ,KAGpD,IAAMgF,YAA+B,CACjCgoB,oBAAsB/1B,MAAKwP,cAAcwmB,OAAS,YAAcH,WAChEI,oBAAsBj2B,MAAKwP,cAAcwmB,OAAS,YAAcF,YAGpE73B,OAAOuB,MAAM,kCAAoCO,KAAKlJ,UAAUkX,cAEhE,GAAI/c,SAAS2T,oBAAsB3T,SAAS6X,aAAc,CAEtD,GAAIgtB,WAAY,CACZ71B,MAAKigB,GAAGiW,eAAe,QAAS,CAC5BC,UAAWn2B,MAAKwP,cAAcwmB,OAItC,GAAIF,WAAY,CACZ91B,MAAKigB,GAAGiW,eAAe,QAAS,CAC5BC,UAAWn2B,MAAKwP,cAAcwmB,OAItCh2B,MAAKigB,GACAmW,cACAhxB,MAAK,SAAAixB,OACFp4B,OAAOuB,MAAM,qBACb,OAAOQ,MAAKigB,GAAGqW,oBAAoBD,UAEtCjxB,MAAK,WACF,IAAMmxB,iBAAmBv2B,MAAKigB,GAAGsW,iBAEjC,KAAMA,iBAAkB,CACpBt4B,OAAOuB,MAAM,wBAAyB+2B,iBAAiBC,KACvDj1C,QAAQg1C,iBAAiBC,SACtB,CACHh1C,OAAO,wCAGd6jB,OAAM,SAAAtnB,OAAS,OAAAyD,OAAOzD,cAExB,CAGHiiB,MAAKigB,GAAGmW,YAAYroB,aAAa3I,MAAK,SAAAixB,OAClCp4B,OAAOuB,MAAM,qBACb,OAAOQ,MAAKigB,GAAGqW,oBAAoBD,UAElCjxB,MAAK,WACF,IAAMmxB,iBAAmBv2B,MAAKigB,GAAGsW,iBACjC,KAAMA,iBAAkB,CACpBt4B,OAAOuB,MAAM,wBAAyB+2B,iBAAiBC,KACvDj1C,QAAQg1C,iBAAiBC,SACtB,CACHh1C,OAAO,wCAGd6jB,OAAM,SAAAtnB,OAAS,OAAAyD,OAAOzD,eASvCs3C,WAAAn6C,UAAAqqC,cAAA,SAAcC,UAAmBS,6BAAjC,IAAAjmB,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzB,IAAMi1C,OAAoC,CACtC/4C,KAAM,SACN84C,IAAKhR,WAETvnB,OAAOuB,MAAM,mDAEb,GAAIQ,MAAKigB,GAAG0V,iBAAmB,SAAU,CACrCn0C,OAAO,+BAGXwe,MAAK02B,qBAAqBD,OAAQxQ,4BAA6B1kC,QAASC,YAQhF6zC,WAAAn6C,UAAAw7C,qBAAA,SAAqBD,OAAmCxQ,4BAAsC1kC,QAAqEC,QAAnK,IAAAwe,MAAA7jB,KACI,GAAI6U,SAAS6X,aAAc,CAEvB,GAAIod,4BAA6B,CAE7BhgC,YAAW,WACPgY,OAAOoB,KAAK,+DACZW,MAAKigB,GAAGyW,qBAAqB,IAAIC,sBAAsBF,SAASrxB,MAAK,WAAM,OAAA7jB,aAAW8jB,OAAM,SAAAtnB,OAAS,OAAAyD,OAAOzD,YAC7G,SACA,CAEH5B,KAAK8jC,GAAGyW,qBAAqB,IAAIC,sBAAsBF,SAASrxB,MAAK,WAAM,OAAA7jB,aAAW8jB,OAAM,SAAAtnB,OAAS,OAAAyD,OAAOzD,eAE7G,CAEH5B,KAAK8jC,GAAGyW,qBAAqBD,QAAQrxB,MAAK,WAAM,OAAA7jB,aAAW8jB,OAAM,SAAAtnB,OAAS,OAAAyD,OAAOzD,YAOzFs3C,WAAAn6C,UAAA2jC,gBAAA,SAAgBrM,cAAhB,IAAAxS,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzByc,OAAOuB,MAAM,gCAAiCgT,cAC9CxS,MAAKwkB,sBAAsB5mC,KAAK40B,cAChC,OAAQxS,MAAKigB,GAAG0V,gBACZ,IAAK,SACDn0C,OAAO,IAAItH,MAAM,oCACjB,MACJ,IAAK,SACD,KAAM8lB,MAAKigB,GAAG2W,kBAAmB,CAC7B52B,MAAKigB,GAAGpB,gBAAgBrM,cAAcpN,MAAK,WAAM,OAAA7jB,aAAW8jB,OAAM,SAAAtnB,OAAS,OAAAyD,OAAOzD,cAC/E,CACHiiB,MAAKs1B,iBAAiB13C,KAAK40B,cAC3BjxB,UAEJ,MACJ,QACIye,MAAKs1B,iBAAiB13C,KAAK40B,cAC3BjxB,eAKhB8zC,WAAAn6C,UAAA2qC,oCAAA,SAAoCgR,SAApC,IAAA72B,MAAA7jB,KACIA,KAAK8jC,GAAG6W,2BAA6B,WACjC,IAAMlS,mBAA4C5kB,MAAKigB,GAAG2E,mBAC1D,OAAQA,oBACJ,IAAK,eAED3mB,OAAOriB,KAAK,2CAA6CokB,MAAKrB,GAAK,KAAOk4B,QAAU,8DACpF,MACJ,IAAK,SACD54B,OAAOlgB,MAAM,2CAA6CiiB,MAAKrB,GAAK,KAAOk4B,QAAU,iBACrF,MACJ,IAAK,SACD54B,OAAOoF,IAAI,2CAA6CrD,MAAKrB,GAAK,KAAOk4B,QAAU,wBACnF,MACJ,IAAK,MACD54B,OAAOoF,IAAI,2CAA6CrD,MAAKrB,GAAK,KAAOk4B,QAAU,qBACnF,MACJ,IAAK,WACD54B,OAAOoF,IAAI,2CAA6CrD,MAAKrB,GAAK,KAAOk4B,QAAU,0BACnF,MACJ,IAAK,YACD54B,OAAOoF,IAAI,2CAA6CrD,MAAKrB,GAAK,KAAOk4B,QAAU,2BACnF,MACJ,IAAK,YACD54B,OAAOoF,IAAI,2CAA6CrD,MAAKrB,GAAK,KAAOk4B,QAAU,2BACnF,SAQhBxB,WAAAn6C,UAAAu6C,iBAAA,WACI,OAAOngC,KAAKmD,MAGpB,OAAA48B,WArQA,GAAah7C,QAAAg7C,WAAAA,WAwQb,IAAAnP,mBAAA,SAAArQ,QAAwCC,UAAAoQ,mBAAArQ,QACpC,SAAAqQ,mBAAY1W,eAAZ,IAAAxP,MAAA7jB,KACIqzB,cAAcwmB,KAAO,WACrBh2B,MAAA6V,OAAAv7B,KAAA6B,KAAMqzB,gBAAcrzB,kBAE5B,OAAA+pC,mBALA,CAAwCmP,YAA3Bh7C,QAAA6rC,mBAAAA,mBAOb,IAAAN,mBAAA,SAAA/P,QAAwCC,UAAA8P,mBAAA/P,QACpC,SAAA+P,mBAAYpW,eAAZ,IAAAxP,MAAA7jB,KACIqzB,cAAcwmB,KAAO,WACrBh2B,MAAA6V,OAAAv7B,KAAA6B,KAAMqzB,gBAAcrzB,kBAE5B,OAAAypC,mBALA,CAAwCyP,YAA3Bh7C,QAAAurC,mBAAAA,mBAOb,IAAAD,mBAAA,SAAA9P,QAAwCC,UAAA6P,mBAAA9P,QACpC,SAAA8P,mBAAYnW,eAAZ,IAAAxP,MAAA7jB,KACIqzB,cAAcwmB,KAAO,WACrBh2B,MAAA6V,OAAAv7B,KAAA6B,KAAMqzB,gBAAcrzB,kBAE5B,OAAAwpC,mBALA,CAAwC0P,YAA3Bh7C,QAAAsrC,mBAAAA,86DC/Sb,IAAA3nB,iBAAAjkB,QAAA,4BACA,IAAA8oB,WAAA9oB,QAAA,qBAIA,IAAMkkB,OAAyBD,iBAAAE,eAAeC,cAI9C,IAAInN,SA8CJ,IAAAq1B,YAAA,WASI,SAAAA,YAAoBpiC,QAAA9H,KAAA8H,OAAAA,OAPH9H,KAAA46C,gBAAkB,sBAE3B56C,KAAA66C,mBAAqB,MAErB76C,KAAA86C,cAAgB,EAIpBjmC,SAAW6R,WAAAG,cAAc7E,cAGtBkoB,YAAAnrC,UAAAorC,UAAP,WACI,OAAOnqC,KAAK66C,oBAGT3Q,YAAAnrC,UAAAwqC,gBAAP,WAAA,IAAA1lB,MAAA7jB,KAEI,IAAM+6C,UAAYC,aAAaC,QAAQj7C,KAAK46C,iBAE5C,KAAMG,UAAW,CACb/6C,KAAK66C,mBAAqB,KAC1B,IAAMK,kBAAuCt3B,KAAKpV,MAAMusC,WAExDj5B,OAAOriB,KAAK,mCAAqCO,KAAK8H,OAAO+c,SAAW,kBAAoB7kB,KAAK8H,OAAOkc,WAAWzB,cACnHT,OAAOriB,KAAK,sBAAwBmkB,KAAKlJ,UAAUwgC,oBAEnDl7C,KAAKm7C,SAAWD,kBAAkBE,aAClCp7C,KAAK86C,cAAgBI,kBAAkBhzC,SAEvClI,KAAKq7C,sBAAwB5xC,aAAY,WAAA,OAAAo6B,UAAAhgB,WAAA,OAAA,GAAA,yEACrC,MAAA,CAAA,EAAM7jB,KAAKs7C,kCAAXlxB,GAAA8Z,0BACDlkC,KAAK86C,cAAgB,SAEtB,CACFh5B,OAAOuB,MAAM,8BAKd6mB,YAAAnrC,UAAAmpC,4BAAP,WAAA,IAAArkB,MAAA7jB,KACI,OAAO,IAAImF,SAAQ,SAACC,QAASC,QACzBwe,MAAKmgB,WAAW/a,MACZ,SAACmb,OACG,GAAIvvB,SAAS2a,mBAAqB3a,SAAS4a,yBAA2B5a,SAAS6a,kBAAoB7a,SAAS8a,uBAAwB,CAChI,IAAI4rB,sBAAgB,EAAEC,uBAAiB,EAAEC,uBAAiB,EAC1D,IAAMC,gBAAkB,GACxB,IAAMC,iBAAmB,GACzB,IAAK,IAAMt3C,OAAO+/B,MAAO,CACrB,IAAMwX,KAAOxX,MAAM//B,KACnB,GAAIu3C,KAAKr6C,OAAS,iBAAkB,CAChCm6C,gBAAgBE,KAAKp5B,IAAMo5B,UACxB,GAAIA,KAAKr6C,OAAS,kBAAmB,CACxCo6C,iBAAiBC,KAAKp5B,IAAMo5B,UACzB,GAAIA,KAAKr6C,OAAS,qBAAwBq6C,KAAKC,uBAAyB,OAAS,CACpFJ,kBAAoBG,KACpBL,iBAAmBK,KAAKL,iBACxBC,kBAAoBI,KAAKJ,mBAGjC,IAAIM,sBAAsBJ,gBAAgBH,kBAC1C,KAAMO,sBAAqB,CACvB,IAAMC,SAAWl4B,MAAK/b,OAAOwgC,2BAC7B,IAAM0T,KAAOD,SAASv3B,QAAO,SAAC7mB,GAC1B,QAAUA,EAAEylB,WACRzlB,EAAEylB,UAAUvY,QAAQixC,sBAAoBG,YAAc,GACtDt+C,EAAEylB,UAAUvY,QAAQixC,sBAAoBI,aAAe,GACvDv+C,EAAEylB,UAAUvY,QAAQixC,sBAAoB5Z,WAAa,KAE7D4Z,sBAAoBK,MAAQH,KAAK,GAAKA,KAAK,GAAG54B,UAAY,wEACvD,CACH04B,sBAAsB,uEAG1B,IAAIM,uBAAuBT,iBAAiBH,mBAC5C,KAAMY,uBAAsB,CACxB,IAAML,SAAWl4B,MAAK/b,OAAOsgC,4BAC7B,IAAM4T,KAAOD,SAASv3B,QAAO,SAAC7mB,GAC1B,QAAUA,EAAEylB,WACRzlB,EAAEylB,UAAUvY,QAAQuxC,uBAAqBH,YAAc,GACvDt+C,EAAEylB,UAAUvY,QAAQuxC,uBAAqBF,aAAe,GACxDv+C,EAAEylB,UAAUvY,QAAQuxC,uBAAqBla,WAAa,KAE9Dka,uBAAqBD,MAAQH,KAAK,GAAKA,KAAK,GAAG54B,UAAY,6EACxD,CACHg5B,uBAAuB,wEAG3Bh3C,QAAQ,CACJq2C,kBAAiBA,kBACjBY,eAAgBP,sBAChBQ,gBAAiBF,6BAElB,CACH/2C,OAAO,6DAEZ6jB,OAAM,SAACtnB,OACNyD,OAAOzD,cAKhBsoC,YAAAnrC,UAAAmoC,gBAAP,WACI,GAAIlnC,KAAK66C,mBAAoB,CACzB1e,cAAcn8B,KAAKq7C,uBACnBv5B,OAAOriB,KAAK,4CAA8CO,KAAK8H,OAAO+c,SAAW,kBAAoB7kB,KAAK8H,OAAOkc,WAAWzB,gBAItH2nB,YAAAnrC,UAAAw9C,UAAd,SAAwBv1C,IAAaoX,yKAEvBiV,cAA6B,CAC/BtJ,QAAS,CACLyyB,eAAgB,oBAEpBlzB,KAAM1F,KAAKlJ,UAAU0D,UACrBwH,OAAQ,QAEZ,MAAA,CAAA,EAAM62B,MAAMz1C,IAAKqsB,uBAAjBjJ,GAAA8Z,4CAGApiB,OAAOlgB,MAAMu2B,8CAIP+R,YAAAnrC,UAAAu8C,wBAAd,iLAE0C,MAAA,CAAA,EAAMt7C,KAAKgkC,mBAAvC0Y,YAA4BtyB,GAAA8Z,OAC5B9lB,SAAWpe,KAAK28C,0BAA0BD,aAChD,MAAA,CAAA,EAAM18C,KAAKu8C,UAAUv8C,KAAKm7C,SAAU/8B,kBAApCgM,GAAA8Z,4CAEApiB,OAAOoF,IAAIoR,8CAIL4R,YAAAnrC,UAAAilC,SAAd,gHAEI,MAAA,CAAA,EAAO,IAAI7+B,SAAQ,SAAOC,QAASC,QAAM,OAAAw+B,UAAAhgB,WAAA,OAAA,GAAA,2HACjChP,SAAS2a,mBAAqB3a,SAAS4a,yBAA2B5a,SAAS6a,kBAAoB7a,SAAS8a,wBAAxG,MAAA,CAAA,EAAA,GAEMmU,GAAU9jC,KAAK8H,OAAOozB,uBAC5B4I,GAAGE,UAAS,SAAC4Y,aACT,IAAMxY,MAAQwY,YAAYhpC,SAAS4Q,QAAO,SAACo3B,MAAS,OAAAA,KAAKr6C,OAAS,UAClE,IAAM6c,SAAWyF,MAAKg5B,0BAEtBzY,MAAMtgB,SAAQ,SAAA83B,MACV,IAAMkB,WAAuBlB,KAAKmB,QAClC,IAAMjS,UAAY8Q,KAAKA,KAAK,aAC5B,IAAMoB,QAAUlS,YAAc,SAAWgS,WAAWxrB,SAAS,oBAC7D,IAAM2rB,QAAUnS,YAAc,SAAWgS,WAAWxrB,SAAS,SAC7D,IAAM4rB,aAAeJ,WAAWxrB,SAAS,mBAAqB0rB,SAAWC,SACzE,IAAME,cAAgBL,WAAWxrB,SAAS,aAE1C,GAAG4rB,aAAa,CACZ9+B,SAASg/B,QAAQtS,WAAWY,cAAgB/rC,OAAOi8C,KAAKA,KAAK,kBAC7Dx9B,SAASg/B,QAAQtS,WAAWS,gBAAkB5rC,OAAOi8C,KAAKA,KAAK,oBAC/Dx9B,SAASg/B,QAAQtS,WAAWU,YAAc7rC,OAAOi8C,KAAKA,KAAK,gBAC3D,GAAG9Q,YAAc,QAAQ,CACrB1sB,SAASg/B,QAAQ,SAAS9R,cAAgB3rC,OAAOi8C,KAAKA,KAAK,kBAC3Dx9B,SAASg/B,QAAQ,SAASxS,UAAYjrC,OAAOi8C,KAAKA,KAAK,oBAGxD,GAAGuB,cAAe,CACrB/+B,SAASi/B,SAASvS,WAAWG,UAAYtrC,OAAOi8C,KAAKA,KAAK,cAC1Dx9B,SAASi/B,SAASvS,WAAWE,YAAcrrC,OAAOi8C,KAAKA,KAAK,gBAC5D,GAAG9Q,YAAc,QAAQ,CACrB1sB,SAASi/B,SAAS,SAAStS,cAAgBprC,OAAOi8C,KAAKA,KAAK,kBAC5Dx9B,SAASi/B,SAAS,SAASzS,UAAYjrC,OAAOi8C,KAAKA,KAAK,mBAIpEx2C,QAAQgZ,gCAIY,MAAA,CAAA,EAAMpe,KAAK8H,OAAOozB,uBAAuB8I,SAAS,cAApE4Y,YAAkBxyB,GAAA8Z,OAClBoZ,WAAWt9C,KAAK68C,0BACtBD,YAAY94B,SAAQ,SAAC83B,MAEjB,IAAM9Q,UAAY8Q,KAAK9Q,UAEvB,OAAQ8Q,KAAKr6C,MACT,IAAK,eACD+7C,WAASD,SAASvS,WAAWG,UAAYtrC,OAAOi8C,KAAK3Q,WACrDqS,WAASD,SAASvS,WAAWE,YAAcrrC,OAAOi8C,KAAK5Q,aACvD,GAAGF,YAAc,QAAQ,CACrBwS,WAASD,SAASvS,WAAWC,cAAgBprC,OAAOi8C,KAAK7Q,eAE7D,MACJ,IAAK,cACDuS,WAASF,QAAQtS,WAAWY,cAAgB/rC,OAAOi8C,KAAKlQ,eACxD4R,WAASF,QAAQtS,WAAWS,gBAAkB5rC,OAAOi8C,KAAKrQ,iBAC1D+R,WAASF,QAAQtS,WAAWU,YAAc7rC,OAAOi8C,KAAKpQ,aACtD,GAAIV,YAAc,QAAS,CACvBwS,WAASF,QAAQtS,WAAWQ,cAAgB3rC,OAAOi8C,KAAKtQ,eACxDgS,WAASF,QAAQtS,WAAWF,UAAYjrC,OAAOi8C,KAAKhR,WAExD,UAIZ,MAAA,CAAA,EAAOxlC,QAAQk4C,gDAOnBpT,YAAAnrC,UAAA49C,0BAAR,SAAkCvY,OAC9B,MAAO,CACHmZ,cAAc,IAAIhiC,MAAOiiC,cACzBC,eAAgBz9C,KAAK8H,OAAOkc,WAAWpX,KACvC8wC,WAAY19C,KAAK8H,OAAOoa,QAAQW,UAChChO,SAAUA,SAAStE,UACnBotC,qBAAsB9oC,SAAS2uB,iBAC/B17B,OAAQ,SACR81C,aAAcxZ,QAId8F,YAAAnrC,UAAA89C,wBAAR,WAEI,MAAO,CACHO,QAAS,CACLtrB,MAAO,GACPlF,MAAO,IAEXywB,SAAU,CACNvrB,MAAO,GACPlF,MAAO,MAMvB,OAAAsd,YA5OA,GAAahsC,QAAAgsC,YAAAA","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/* jshint node: true */\n'use strict';\n\nvar normalice = require('normalice');\n\n/**\n  # freeice\n\n  The `freeice` module is a simple way of getting random STUN or TURN server\n  for your WebRTC application.  The list of servers (just STUN at this stage)\n  were sourced from this [gist](https://gist.github.com/zziuni/3741933).\n\n  ## Example Use\n\n  The following demonstrates how you can use `freeice` with\n  [rtc-quickconnect](https://github.com/rtc-io/rtc-quickconnect):\n\n  <<< examples/quickconnect.js\n\n  As the `freeice` module generates ice servers in a list compliant with the\n  WebRTC spec you will be able to use it with raw `RTCPeerConnection`\n  constructors and other WebRTC libraries.\n\n  ## Hey, don't use my STUN/TURN server!\n\n  If for some reason your free STUN or TURN server ends up in the\n  list of servers ([stun](https://github.com/DamonOehlman/freeice/blob/master/stun.json) or\n  [turn](https://github.com/DamonOehlman/freeice/blob/master/turn.json))\n  that is used in this module, you can feel\n  free to open an issue on this repository and those servers will be removed\n  within 24 hours (or sooner).  This is the quickest and probably the most\n  polite way to have something removed (and provides us some visibility\n  if someone opens a pull request requesting that a server is added).\n\n  ## Please add my server!\n\n  If you have a server that you wish to add to the list, that's awesome! I'm\n  sure I speak on behalf of a whole pile of WebRTC developers who say thanks.\n  To get it into the list, feel free to either open a pull request or if you\n  find that process a bit daunting then just create an issue requesting\n  the addition of the server (make sure you provide all the details, and if\n  you have a Terms of Service then including that in the PR/issue would be\n  awesome).\n\n  ## I know of a free server, can I add it?\n\n  Sure, if you do your homework and make sure it is ok to use (I'm currently\n  in the process of reviewing the terms of those STUN servers included from\n  the original list).  If it's ok to go, then please see the previous entry\n  for how to add it.\n\n  ## Current List of Servers\n\n  * current as at the time of last `README.md` file generation\n\n  ### STUN\n\n  <<< stun.json\n\n  ### TURN\n\n  <<< turn.json\n\n**/\n\nvar freeice = function(opts) {\n  // if a list of servers has been provided, then use it instead of defaults\n  var servers = {\n    stun: (opts || {}).stun || require('./stun.json'),\n    turn: (opts || {}).turn || require('./turn.json')\n  };\n\n  var stunCount = (opts || {}).stunCount || 2;\n  var turnCount = (opts || {}).turnCount || 0;\n  var selected;\n\n  function getServers(type, count) {\n    var out = [];\n    var input = [].concat(servers[type]);\n    var idx;\n\n    while (input.length && out.length < count) {\n      idx = (Math.random() * input.length) | 0;\n      out = out.concat(input.splice(idx, 1));\n    }\n\n    return out.map(function(url) {\n        //If it's a not a string, don't try to \"normalice\" it otherwise using type:url will screw it up\n        if ((typeof url !== 'string') && (! (url instanceof String))) {\n            return url;\n        } else {\n            return normalice(type + ':' + url);\n        }\n    });\n  }\n\n  // add stun servers\n  selected = [].concat(getServers('stun', stunCount));\n\n  if (turnCount) {\n    selected = selected.concat(getServers('turn', turnCount));\n  }\n\n  return selected;\n};\n\nmodule.exports = freeice;","module.exports=[\n  \"stun.l.google.com:19302\",\n  \"stun1.l.google.com:19302\",\n  \"stun2.l.google.com:19302\",\n  \"stun3.l.google.com:19302\",\n  \"stun4.l.google.com:19302\",\n  \"stun.ekiga.net\",\n  \"stun.ideasip.com\",\n  \"stun.schlund.de\",\n  \"stun.stunprotocol.org:3478\",\n  \"stun.voiparound.com\",\n  \"stun.voipbuster.com\",\n  \"stun.voipstunt.com\",\n  \"stun.voxgratia.org\"\n]\n","module.exports=[]\n","var WildEmitter = require('wildemitter');\n\nfunction getMaxVolume (analyser, fftBins) {\n  var maxVolume = -Infinity;\n  analyser.getFloatFrequencyData(fftBins);\n\n  for(var i=4, ii=fftBins.length; i < ii; i++) {\n    if (fftBins[i] > maxVolume && fftBins[i] < 0) {\n      maxVolume = fftBins[i];\n    }\n  };\n\n  return maxVolume;\n}\n\n\nvar audioContextType;\nif (typeof window !== 'undefined') {\n  audioContextType = window.AudioContext || window.webkitAudioContext;\n}\n// use a single audio context due to hardware limits\nvar audioContext = null;\nmodule.exports = function(stream, options) {\n  var harker = new WildEmitter();\n\n  // make it not break in non-supported browsers\n  if (!audioContextType) return harker;\n\n  //Config\n  var options = options || {},\n      smoothing = (options.smoothing || 0.1),\n      interval = (options.interval || 50),\n      threshold = options.threshold,\n      play = options.play,\n      history = options.history || 10,\n      running = true;\n\n  // Ensure that just a single AudioContext is internally created\n  audioContext = options.audioContext || audioContext || new audioContextType();\n\n  var sourceNode, fftBins, analyser;\n\n  analyser = audioContext.createAnalyser();\n  analyser.fftSize = 512;\n  analyser.smoothingTimeConstant = smoothing;\n  fftBins = new Float32Array(analyser.frequencyBinCount);\n\n  if (stream.jquery) stream = stream[0];\n  if (stream instanceof HTMLAudioElement || stream instanceof HTMLVideoElement) {\n    //Audio Tag\n    sourceNode = audioContext.createMediaElementSource(stream);\n    if (typeof play === 'undefined') play = true;\n    threshold = threshold || -50;\n  } else {\n    //WebRTC Stream\n    sourceNode = audioContext.createMediaStreamSource(stream);\n    threshold = threshold || -50;\n  }\n\n  sourceNode.connect(analyser);\n  if (play) analyser.connect(audioContext.destination);\n\n  harker.speaking = false;\n\n  harker.suspend = function() {\n    return audioContext.suspend();\n  }\n  harker.resume = function() {\n    return audioContext.resume();\n  }\n  Object.defineProperty(harker, 'state', { get: function() {\n    return audioContext.state;\n  }});\n  audioContext.onstatechange = function() {\n    harker.emit('state_change', audioContext.state);\n  }\n\n  harker.setThreshold = function(t) {\n    threshold = t;\n  };\n\n  harker.setInterval = function(i) {\n    interval = i;\n  };\n\n  harker.stop = function() {\n    running = false;\n    harker.emit('volume_change', -100, threshold);\n    if (harker.speaking) {\n      harker.speaking = false;\n      harker.emit('stopped_speaking');\n    }\n    analyser.disconnect();\n    sourceNode.disconnect();\n  };\n  harker.speakingHistory = [];\n  for (var i = 0; i < history; i++) {\n      harker.speakingHistory.push(0);\n  }\n\n  // Poll the analyser node to determine if speaking\n  // and emit events if changed\n  var looper = function() {\n    setTimeout(function() {\n\n      //check if stop has been called\n      if(!running) {\n        return;\n      }\n\n      var currentVolume = getMaxVolume(analyser, fftBins);\n\n      harker.emit('volume_change', currentVolume, threshold);\n\n      var history = 0;\n      if (currentVolume > threshold && !harker.speaking) {\n        // trigger quickly, short history\n        for (var i = harker.speakingHistory.length - 3; i < harker.speakingHistory.length; i++) {\n          history += harker.speakingHistory[i];\n        }\n        if (history >= 2) {\n          harker.speaking = true;\n          harker.emit('speaking');\n        }\n      } else if (currentVolume < threshold && harker.speaking) {\n        for (var i = 0; i < harker.speakingHistory.length; i++) {\n          history += harker.speakingHistory[i];\n        }\n        if (history == 0) {\n          harker.speaking = false;\n          harker.emit('stopped_speaking');\n        }\n      }\n      harker.speakingHistory.shift();\n      harker.speakingHistory.push(0 + (currentVolume > threshold));\n\n      looper();\n    }, interval);\n  };\n  looper();\n\n  return harker;\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/**\n  # normalice\n\n  Normalize an ice server configuration object (or plain old string) into a format\n  that is usable in all browsers supporting WebRTC.  Primarily this module is designed\n  to help with the transition of the `url` attribute of the configuration object to\n  the `urls` attribute.\n\n  ## Example Usage\n\n  <<< examples/simple.js\n\n**/\n\nvar protocols = [\n  'stun:',\n  'turn:'\n];\n\nmodule.exports = function(input) {\n  var url = (input || {}).url || input;\n  var protocol;\n  var parts;\n  var output = {};\n\n  // if we don't have a string url, then allow the input to passthrough\n  if (typeof url != 'string' && (! (url instanceof String))) {\n    return input;\n  }\n\n  // trim the url string, and convert to an array\n  url = url.trim();\n\n  // if the protocol is not known, then passthrough\n  protocol = protocols[protocols.indexOf(url.slice(0, 5))];\n  if (! protocol) {\n    return input;\n  }\n\n  // now let's attack the remaining url parts\n  url = url.slice(5);\n  parts = url.split('@');\n\n  output.username = input.username;\n  output.credential = input.credential;\n  // if we have an authentication part, then set the credentials\n  if (parts.length > 1) {\n    url = parts[1];\n    parts = parts[0].split(':');\n\n    // add the output credential and username\n    output.username = parts[0];\n    output.credential = (input || {}).credential || parts[1] || '';\n  }\n\n  output.url = protocol + url;\n  output.urls = [ output.url ];\n\n  return output;\n};\n","/*!\n * Platform.js v1.3.6\n * Copyright 2014-2020 Benjamin Tan\n * Copyright 2011-2013 John-David Dalton\n * Available under MIT license\n */\n;(function() {\n  'use strict';\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used as a reference to the global object. */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Backup possible global object. */\n  var oldRoot = root;\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /**\n   * Used as the maximum length of an array-like object.\n   * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\n   * for more details.\n   */\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n\n  /** Regular expression to detect Opera. */\n  var reOpera = /\\bOpera/;\n\n  /** Possible global object. */\n  var thisBinding = this;\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /** Used to check for own properties of an object. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to resolve the internal `[[Class]]` of values. */\n  var toString = objectProto.toString;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Capitalizes a string value.\n   *\n   * @private\n   * @param {string} string The string to capitalize.\n   * @returns {string} The capitalized string.\n   */\n  function capitalize(string) {\n    string = String(string);\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  /**\n   * A utility function to clean up the OS name.\n   *\n   * @private\n   * @param {string} os The OS name to clean up.\n   * @param {string} [pattern] A `RegExp` pattern matching the OS name.\n   * @param {string} [label] A label for the OS.\n   */\n  function cleanupOS(os, pattern, label) {\n    // Platform tokens are defined at:\n    // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    var data = {\n      '10.0': '10',\n      '6.4':  '10 Technical Preview',\n      '6.3':  '8.1',\n      '6.2':  '8',\n      '6.1':  'Server 2008 R2 / 7',\n      '6.0':  'Server 2008 / Vista',\n      '5.2':  'Server 2003 / XP 64-bit',\n      '5.1':  'XP',\n      '5.01': '2000 SP1',\n      '5.0':  '2000',\n      '4.0':  'NT',\n      '4.90': 'ME'\n    };\n    // Detect Windows version from platform tokens.\n    if (pattern && label && /^Win/i.test(os) && !/^Windows Phone /i.test(os) &&\n        (data = data[/[\\d.]+$/.exec(os)])) {\n      os = 'Windows ' + data;\n    }\n    // Correct character case and cleanup string.\n    os = String(os);\n\n    if (pattern && label) {\n      os = os.replace(RegExp(pattern, 'i'), label);\n    }\n\n    os = format(\n      os.replace(/ ce$/i, ' CE')\n        .replace(/\\bhpw/i, 'web')\n        .replace(/\\bMacintosh\\b/, 'Mac OS')\n        .replace(/_PowerPC\\b/i, ' OS')\n        .replace(/\\b(OS X) [^ \\d]+/i, '$1')\n        .replace(/\\bMac (OS X)\\b/, '$1')\n        .replace(/\\/(\\d)/, ' $1')\n        .replace(/_/g, '.')\n        .replace(/(?: BePC|[ .]*fc[ \\d.]+)$/i, '')\n        .replace(/\\bx86\\.64\\b/gi, 'x86_64')\n        .replace(/\\b(Windows Phone) OS\\b/, '$1')\n        .replace(/\\b(Chrome OS \\w+) [\\d.]+\\b/, '$1')\n        .split(' on ')[0]\n    );\n\n    return os;\n  }\n\n  /**\n   * An iteration utility for arrays and objects.\n   *\n   * @private\n   * @param {Array|Object} object The object to iterate over.\n   * @param {Function} callback The function called per iteration.\n   */\n  function each(object, callback) {\n    var index = -1,\n        length = object ? object.length : 0;\n\n    if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {\n      while (++index < length) {\n        callback(object[index], index, object);\n      }\n    } else {\n      forOwn(object, callback);\n    }\n  }\n\n  /**\n   * Trim and conditionally capitalize string values.\n   *\n   * @private\n   * @param {string} string The string to format.\n   * @returns {string} The formatted string.\n   */\n  function format(string) {\n    string = trim(string);\n    return /^(?:webOS|i(?:OS|P))/.test(string)\n      ? string\n      : capitalize(string);\n  }\n\n  /**\n   * Iterates over an object's own properties, executing the `callback` for each.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} callback The function executed per own property.\n   */\n  function forOwn(object, callback) {\n    for (var key in object) {\n      if (hasOwnProperty.call(object, key)) {\n        callback(object[key], key, object);\n      }\n    }\n  }\n\n  /**\n   * Gets the internal `[[Class]]` of a value.\n   *\n   * @private\n   * @param {*} value The value.\n   * @returns {string} The `[[Class]]`.\n   */\n  function getClassOf(value) {\n    return value == null\n      ? capitalize(value)\n      : toString.call(value).slice(8, -1);\n  }\n\n  /**\n   * Host objects can return type values that are different from their actual\n   * data type. The objects we are concerned with usually return non-primitive\n   * types of \"object\", \"function\", or \"unknown\".\n   *\n   * @private\n   * @param {*} object The owner of the property.\n   * @param {string} property The property to check.\n   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\n   */\n  function isHostType(object, property) {\n    var type = object != null ? typeof object[property] : 'number';\n    return !/^(?:boolean|number|string|undefined)$/.test(type) &&\n      (type == 'object' ? !!object[property] : true);\n  }\n\n  /**\n   * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.\n   *\n   * @private\n   * @param {string} string The string to qualify.\n   * @returns {string} The qualified string.\n   */\n  function qualify(string) {\n    return String(string).replace(/([ -])(?!$)/g, '$1?');\n  }\n\n  /**\n   * A bare-bones `Array#reduce` like utility function.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function called per iteration.\n   * @returns {*} The accumulated result.\n   */\n  function reduce(array, callback) {\n    var accumulator = null;\n    each(array, function(value, index) {\n      accumulator = callback(accumulator, value, index, array);\n    });\n    return accumulator;\n  }\n\n  /**\n   * Removes leading and trailing whitespace from a string.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} The trimmed string.\n   */\n  function trim(string) {\n    return String(string).replace(/^ +| +$/g, '');\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a new platform object.\n   *\n   * @memberOf platform\n   * @param {Object|string} [ua=navigator.userAgent] The user agent string or\n   *  context object.\n   * @returns {Object} A platform object.\n   */\n  function parse(ua) {\n\n    /** The environment context object. */\n    var context = root;\n\n    /** Used to flag when a custom context is provided. */\n    var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String';\n\n    // Juggle arguments.\n    if (isCustomContext) {\n      context = ua;\n      ua = null;\n    }\n\n    /** Browser navigator object. */\n    var nav = context.navigator || {};\n\n    /** Browser user agent string. */\n    var userAgent = nav.userAgent || '';\n\n    ua || (ua = userAgent);\n\n    /** Used to flag when `thisBinding` is the [ModuleScope]. */\n    var isModuleScope = isCustomContext || thisBinding == oldRoot;\n\n    /** Used to detect if browser is like Chrome. */\n    var likeChrome = isCustomContext\n      ? !!nav.likeChrome\n      : /\\bChrome\\b/.test(ua) && !/internal|\\n/i.test(toString.toString());\n\n    /** Internal `[[Class]]` value shortcuts. */\n    var objectClass = 'Object',\n        airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',\n        enviroClass = isCustomContext ? objectClass : 'Environment',\n        javaClass = (isCustomContext && context.java) ? 'JavaPackage' : getClassOf(context.java),\n        phantomClass = isCustomContext ? objectClass : 'RuntimeObject';\n\n    /** Detect Java environments. */\n    var java = /\\bJava/.test(javaClass) && context.java;\n\n    /** Detect Rhino. */\n    var rhino = java && getClassOf(context.environment) == enviroClass;\n\n    /** A character to represent alpha. */\n    var alpha = java ? 'a' : '\\u03b1';\n\n    /** A character to represent beta. */\n    var beta = java ? 'b' : '\\u03b2';\n\n    /** Browser document object. */\n    var doc = context.document || {};\n\n    /**\n     * Detect Opera browser (Presto-based).\n     * http://www.howtocreate.co.uk/operaStuff/operaObject.html\n     * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini\n     */\n    var opera = context.operamini || context.opera;\n\n    /** Opera `[[Class]]`. */\n    var operaClass = reOpera.test(operaClass = (isCustomContext && opera) ? opera['[[Class]]'] : getClassOf(opera))\n      ? operaClass\n      : (opera = null);\n\n    /*------------------------------------------------------------------------*/\n\n    /** Temporary variable used over the script's lifetime. */\n    var data;\n\n    /** The CPU architecture. */\n    var arch = ua;\n\n    /** Platform description array. */\n    var description = [];\n\n    /** Platform alpha/beta indicator. */\n    var prerelease = null;\n\n    /** A flag to indicate that environment features should be used to resolve the platform. */\n    var useFeatures = ua == userAgent;\n\n    /** The browser/environment version. */\n    var version = useFeatures && opera && typeof opera.version == 'function' && opera.version();\n\n    /** A flag to indicate if the OS ends with \"/ Version\" */\n    var isSpecialCasedOS;\n\n    /* Detectable layout engines (order is important). */\n    var layout = getLayout([\n      { 'label': 'EdgeHTML', 'pattern': 'Edge' },\n      'Trident',\n      { 'label': 'WebKit', 'pattern': 'AppleWebKit' },\n      'iCab',\n      'Presto',\n      'NetFront',\n      'Tasman',\n      'KHTML',\n      'Gecko'\n    ]);\n\n    /* Detectable browser names (order is important). */\n    var name = getName([\n      'Adobe AIR',\n      'Arora',\n      'Avant Browser',\n      'Breach',\n      'Camino',\n      'Electron',\n      'Epiphany',\n      'Fennec',\n      'Flock',\n      'Galeon',\n      'GreenBrowser',\n      'iCab',\n      'Iceweasel',\n      'K-Meleon',\n      'Konqueror',\n      'Lunascape',\n      'Maxthon',\n      { 'label': 'Microsoft Edge', 'pattern': '(?:Edge|Edg|EdgA|EdgiOS)' },\n      'Midori',\n      'Nook Browser',\n      'PaleMoon',\n      'PhantomJS',\n      'Raven',\n      'Rekonq',\n      'RockMelt',\n      { 'label': 'Samsung Internet', 'pattern': 'SamsungBrowser' },\n      'SeaMonkey',\n      { 'label': 'Silk', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\n      'Sleipnir',\n      'SlimBrowser',\n      { 'label': 'SRWare Iron', 'pattern': 'Iron' },\n      'Sunrise',\n      'Swiftfox',\n      'Vivaldi',\n      'Waterfox',\n      'WebPositive',\n      { 'label': 'Yandex Browser', 'pattern': 'YaBrowser' },\n      { 'label': 'UC Browser', 'pattern': 'UCBrowser' },\n      'Opera Mini',\n      { 'label': 'Opera Mini', 'pattern': 'OPiOS' },\n      'Opera',\n      { 'label': 'Opera', 'pattern': 'OPR' },\n      'Chromium',\n      'Chrome',\n      { 'label': 'Chrome', 'pattern': '(?:HeadlessChrome)' },\n      { 'label': 'Chrome Mobile', 'pattern': '(?:CriOS|CrMo)' },\n      { 'label': 'Firefox', 'pattern': '(?:Firefox|Minefield)' },\n      { 'label': 'Firefox for iOS', 'pattern': 'FxiOS' },\n      { 'label': 'IE', 'pattern': 'IEMobile' },\n      { 'label': 'IE', 'pattern': 'MSIE' },\n      'Safari'\n    ]);\n\n    /* Detectable products (order is important). */\n    var product = getProduct([\n      { 'label': 'BlackBerry', 'pattern': 'BB10' },\n      'BlackBerry',\n      { 'label': 'Galaxy S', 'pattern': 'GT-I9000' },\n      { 'label': 'Galaxy S2', 'pattern': 'GT-I9100' },\n      { 'label': 'Galaxy S3', 'pattern': 'GT-I9300' },\n      { 'label': 'Galaxy S4', 'pattern': 'GT-I9500' },\n      { 'label': 'Galaxy S5', 'pattern': 'SM-G900' },\n      { 'label': 'Galaxy S6', 'pattern': 'SM-G920' },\n      { 'label': 'Galaxy S6 Edge', 'pattern': 'SM-G925' },\n      { 'label': 'Galaxy S7', 'pattern': 'SM-G930' },\n      { 'label': 'Galaxy S7 Edge', 'pattern': 'SM-G935' },\n      'Google TV',\n      'Lumia',\n      'iPad',\n      'iPod',\n      'iPhone',\n      'Kindle',\n      { 'label': 'Kindle Fire', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\n      'Nexus',\n      'Nook',\n      'PlayBook',\n      'PlayStation Vita',\n      'PlayStation',\n      'TouchPad',\n      'Transformer',\n      { 'label': 'Wii U', 'pattern': 'WiiU' },\n      'Wii',\n      'Xbox One',\n      { 'label': 'Xbox 360', 'pattern': 'Xbox' },\n      'Xoom'\n    ]);\n\n    /* Detectable manufacturers. */\n    var manufacturer = getManufacturer({\n      'Apple': { 'iPad': 1, 'iPhone': 1, 'iPod': 1 },\n      'Alcatel': {},\n      'Archos': {},\n      'Amazon': { 'Kindle': 1, 'Kindle Fire': 1 },\n      'Asus': { 'Transformer': 1 },\n      'Barnes & Noble': { 'Nook': 1 },\n      'BlackBerry': { 'PlayBook': 1 },\n      'Google': { 'Google TV': 1, 'Nexus': 1 },\n      'HP': { 'TouchPad': 1 },\n      'HTC': {},\n      'Huawei': {},\n      'Lenovo': {},\n      'LG': {},\n      'Microsoft': { 'Xbox': 1, 'Xbox One': 1 },\n      'Motorola': { 'Xoom': 1 },\n      'Nintendo': { 'Wii U': 1,  'Wii': 1 },\n      'Nokia': { 'Lumia': 1 },\n      'Oppo': {},\n      'Samsung': { 'Galaxy S': 1, 'Galaxy S2': 1, 'Galaxy S3': 1, 'Galaxy S4': 1 },\n      'Sony': { 'PlayStation': 1, 'PlayStation Vita': 1 },\n      'Xiaomi': { 'Mi': 1, 'Redmi': 1 }\n    });\n\n    /* Detectable operating systems (order is important). */\n    var os = getOS([\n      'Windows Phone',\n      'KaiOS',\n      'Android',\n      'CentOS',\n      { 'label': 'Chrome OS', 'pattern': 'CrOS' },\n      'Debian',\n      { 'label': 'DragonFly BSD', 'pattern': 'DragonFly' },\n      'Fedora',\n      'FreeBSD',\n      'Gentoo',\n      'Haiku',\n      'Kubuntu',\n      'Linux Mint',\n      'OpenBSD',\n      'Red Hat',\n      'SuSE',\n      'Ubuntu',\n      'Xubuntu',\n      'Cygwin',\n      'Symbian OS',\n      'hpwOS',\n      'webOS ',\n      'webOS',\n      'Tablet OS',\n      'Tizen',\n      'Linux',\n      'Mac OS X',\n      'Macintosh',\n      'Mac',\n      'Windows 98;',\n      'Windows '\n    ]);\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Picks the layout engine from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected layout engine.\n     */\n    function getLayout(guesses) {\n      return reduce(guesses, function(result, guess) {\n        return result || RegExp('\\\\b' + (\n          guess.pattern || qualify(guess)\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n\n    /**\n     * Picks the manufacturer from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An object of guesses.\n     * @returns {null|string} The detected manufacturer.\n     */\n    function getManufacturer(guesses) {\n      return reduce(guesses, function(result, value, key) {\n        // Lookup the manufacturer by product or scan the UA for the manufacturer.\n        return result || (\n          value[product] ||\n          value[/^[a-z]+(?: +[a-z]+\\b)*/i.exec(product)] ||\n          RegExp('\\\\b' + qualify(key) + '(?:\\\\b|\\\\w*\\\\d)', 'i').exec(ua)\n        ) && key;\n      });\n    }\n\n    /**\n     * Picks the browser name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected browser name.\n     */\n    function getName(guesses) {\n      return reduce(guesses, function(result, guess) {\n        return result || RegExp('\\\\b' + (\n          guess.pattern || qualify(guess)\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n\n    /**\n     * Picks the OS name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected OS name.\n     */\n    function getOS(guesses) {\n      return reduce(guesses, function(result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n        if (!result && (result =\n              RegExp('\\\\b' + pattern + '(?:/[\\\\d.]+|[ \\\\w.]*)', 'i').exec(ua)\n            )) {\n          result = cleanupOS(result, pattern, guess.label || guess);\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Picks the product name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected product name.\n     */\n    function getProduct(guesses) {\n      return reduce(guesses, function(result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n        if (!result && (result =\n              RegExp('\\\\b' + pattern + ' *\\\\d+[.\\\\w_]*', 'i').exec(ua) ||\n              RegExp('\\\\b' + pattern + ' *\\\\w+-[\\\\w]*', 'i').exec(ua) ||\n              RegExp('\\\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\\\d+|[^ ();-]*)', 'i').exec(ua)\n            )) {\n          // Split by forward slash and append product version if needed.\n          if ((result = String((guess.label && !RegExp(pattern, 'i').test(guess.label)) ? guess.label : result).split('/'))[1] && !/[\\d.]+/.test(result[0])) {\n            result[0] += ' ' + result[1];\n          }\n          // Correct character case and cleanup string.\n          guess = guess.label || guess;\n          result = format(result[0]\n            .replace(RegExp(pattern, 'i'), guess)\n            .replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ')\n            .replace(RegExp('(' + guess + ')[-_.]?(\\\\w)', 'i'), '$1 $2'));\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Resolves the version using an array of UA patterns.\n     *\n     * @private\n     * @param {Array} patterns An array of UA patterns.\n     * @returns {null|string} The detected version.\n     */\n    function getVersion(patterns) {\n      return reduce(patterns, function(result, pattern) {\n        return result || (RegExp(pattern +\n          '(?:-[\\\\d.]+/|(?: for [\\\\w-]+)?[ /-])([\\\\d.]+[^ ();/_-]*)', 'i').exec(ua) || 0)[1] || null;\n      });\n    }\n\n    /**\n     * Returns `platform.description` when the platform object is coerced to a string.\n     *\n     * @name toString\n     * @memberOf platform\n     * @returns {string} Returns `platform.description` if available, else an empty string.\n     */\n    function toStringPlatform() {\n      return this.description || '';\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Convert layout to an array so we can add extra details.\n    layout && (layout = [layout]);\n\n    // Detect Android products.\n    // Browsers on Android devices typically provide their product IDS after \"Android;\"\n    // up to \"Build\" or \") AppleWebKit\".\n    // Example:\n    // \"Mozilla/5.0 (Linux; Android 8.1.0; Moto G (5) Plus) AppleWebKit/537.36\n    // (KHTML, like Gecko) Chrome/70.0.3538.80 Mobile Safari/537.36\"\n    if (/\\bAndroid\\b/.test(os) && !product &&\n        (data = /\\bAndroid[^;]*;(.*?)(?:Build|\\) AppleWebKit)\\b/i.exec(ua))) {\n      product = trim(data[1])\n        // Replace any language codes (eg. \"en-US\").\n        .replace(/^[a-z]{2}-[a-z]{2};\\s*/i, '')\n        || null;\n    }\n    // Detect product names that contain their manufacturer's name.\n    if (manufacturer && !product) {\n      product = getProduct([manufacturer]);\n    } else if (manufacturer && product) {\n      product = product\n        .replace(RegExp('^(' + qualify(manufacturer) + ')[-_.\\\\s]', 'i'), manufacturer + ' ')\n        .replace(RegExp('^(' + qualify(manufacturer) + ')[-_.]?(\\\\w)', 'i'), manufacturer + ' $2');\n    }\n    // Clean up Google TV.\n    if ((data = /\\bGoogle TV\\b/.exec(product))) {\n      product = data[0];\n    }\n    // Detect simulators.\n    if (/\\bSimulator\\b/i.test(ua)) {\n      product = (product ? product + ' ' : '') + 'Simulator';\n    }\n    // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.\n    if (name == 'Opera Mini' && /\\bOPiOS\\b/.test(ua)) {\n      description.push('running in Turbo/Uncompressed mode');\n    }\n    // Detect IE Mobile 11.\n    if (name == 'IE' && /\\blike iPhone OS\\b/.test(ua)) {\n      data = parse(ua.replace(/like iPhone OS/, ''));\n      manufacturer = data.manufacturer;\n      product = data.product;\n    }\n    // Detect iOS.\n    else if (/^iP/.test(product)) {\n      name || (name = 'Safari');\n      os = 'iOS' + ((data = / OS ([\\d_]+)/i.exec(ua))\n        ? ' ' + data[1].replace(/_/g, '.')\n        : '');\n    }\n    // Detect Kubuntu.\n    else if (name == 'Konqueror' && /^Linux\\b/i.test(os)) {\n      os = 'Kubuntu';\n    }\n    // Detect Android browsers.\n    else if ((manufacturer && manufacturer != 'Google' &&\n        ((/Chrome/.test(name) && !/\\bMobile Safari\\b/i.test(ua)) || /\\bVita\\b/.test(product))) ||\n        (/\\bAndroid\\b/.test(os) && /^Chrome/.test(name) && /\\bVersion\\//i.test(ua))) {\n      name = 'Android Browser';\n      os = /\\bAndroid\\b/.test(os) ? os : 'Android';\n    }\n    // Detect Silk desktop/accelerated modes.\n    else if (name == 'Silk') {\n      if (!/\\bMobi/i.test(ua)) {\n        os = 'Android';\n        description.unshift('desktop mode');\n      }\n      if (/Accelerated *= *true/i.test(ua)) {\n        description.unshift('accelerated');\n      }\n    }\n    // Detect UC Browser speed mode.\n    else if (name == 'UC Browser' && /\\bUCWEB\\b/.test(ua)) {\n      description.push('speed mode');\n    }\n    // Detect PaleMoon identifying as Firefox.\n    else if (name == 'PaleMoon' && (data = /\\bFirefox\\/([\\d.]+)\\b/.exec(ua))) {\n      description.push('identifying as Firefox ' + data[1]);\n    }\n    // Detect Firefox OS and products running Firefox.\n    else if (name == 'Firefox' && (data = /\\b(Mobile|Tablet|TV)\\b/i.exec(ua))) {\n      os || (os = 'Firefox OS');\n      product || (product = data[1]);\n    }\n    // Detect false positives for Firefox/Safari.\n    else if (!name || (data = !/\\bMinefield\\b/i.test(ua) && /\\b(?:Firefox|Safari)\\b/.exec(name))) {\n      // Escape the `/` for Firefox 1.\n      if (name && !product && /[\\/,]|^[^(]+?\\)/.test(ua.slice(ua.indexOf(data + '/') + 8))) {\n        // Clear name of false positives.\n        name = null;\n      }\n      // Reassign a generic name.\n      if ((data = product || manufacturer || os) &&\n          (product || manufacturer || /\\b(?:Android|Symbian OS|Tablet OS|webOS)\\b/.test(os))) {\n        name = /[a-z]+(?: Hat)?/i.exec(/\\bAndroid\\b/.test(os) ? os : data) + ' Browser';\n      }\n    }\n    // Add Chrome version to description for Electron.\n    else if (name == 'Electron' && (data = (/\\bChrome\\/([\\d.]+)\\b/.exec(ua) || 0)[1])) {\n      description.push('Chromium ' + data);\n    }\n    // Detect non-Opera (Presto-based) versions (order is important).\n    if (!version) {\n      version = getVersion([\n        '(?:Cloud9|CriOS|CrMo|Edge|Edg|EdgA|EdgiOS|FxiOS|HeadlessChrome|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\\\d.]+$)|UCBrowser|YaBrowser)',\n        'Version',\n        qualify(name),\n        '(?:Firefox|Minefield|NetFront)'\n      ]);\n    }\n    // Detect stubborn layout engines.\n    if ((data =\n          layout == 'iCab' && parseFloat(version) > 3 && 'WebKit' ||\n          /\\bOpera\\b/.test(name) && (/\\bOPR\\b/.test(ua) ? 'Blink' : 'Presto') ||\n          /\\b(?:Midori|Nook|Safari)\\b/i.test(ua) && !/^(?:Trident|EdgeHTML)$/.test(layout) && 'WebKit' ||\n          !layout && /\\bMSIE\\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident') ||\n          layout == 'WebKit' && /\\bPlayStation\\b(?! Vita\\b)/i.test(name) && 'NetFront'\n        )) {\n      layout = [data];\n    }\n    // Detect Windows Phone 7 desktop mode.\n    if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\\d+)/i.exec(ua) || 0)[1])) {\n      name += ' Mobile';\n      os = 'Windows Phone ' + (/\\+$/.test(data) ? data : data + '.x');\n      description.unshift('desktop mode');\n    }\n    // Detect Windows Phone 8.x desktop mode.\n    else if (/\\bWPDesktop\\b/i.test(ua)) {\n      name = 'IE Mobile';\n      os = 'Windows Phone 8.x';\n      description.unshift('desktop mode');\n      version || (version = (/\\brv:([\\d.]+)/.exec(ua) || 0)[1]);\n    }\n    // Detect IE 11 identifying as other browsers.\n    else if (name != 'IE' && layout == 'Trident' && (data = /\\brv:([\\d.]+)/.exec(ua))) {\n      if (name) {\n        description.push('identifying as ' + name + (version ? ' ' + version : ''));\n      }\n      name = 'IE';\n      version = data[1];\n    }\n    // Leverage environment features.\n    if (useFeatures) {\n      // Detect server-side environments.\n      // Rhino has a global function while others have a global object.\n      if (isHostType(context, 'global')) {\n        if (java) {\n          data = java.lang.System;\n          arch = data.getProperty('os.arch');\n          os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');\n        }\n        if (rhino) {\n          try {\n            version = context.require('ringo/engine').version.join('.');\n            name = 'RingoJS';\n          } catch(e) {\n            if ((data = context.system) && data.global.system == context.system) {\n              name = 'Narwhal';\n              os || (os = data[0].os || null);\n            }\n          }\n          if (!name) {\n            name = 'Rhino';\n          }\n        }\n        else if (\n          typeof context.process == 'object' && !context.process.browser &&\n          (data = context.process)\n        ) {\n          if (typeof data.versions == 'object') {\n            if (typeof data.versions.electron == 'string') {\n              description.push('Node ' + data.versions.node);\n              name = 'Electron';\n              version = data.versions.electron;\n            } else if (typeof data.versions.nw == 'string') {\n              description.push('Chromium ' + version, 'Node ' + data.versions.node);\n              name = 'NW.js';\n              version = data.versions.nw;\n            }\n          }\n          if (!name) {\n            name = 'Node.js';\n            arch = data.arch;\n            os = data.platform;\n            version = /[\\d.]+/.exec(data.version);\n            version = version ? version[0] : null;\n          }\n        }\n      }\n      // Detect Adobe AIR.\n      else if (getClassOf((data = context.runtime)) == airRuntimeClass) {\n        name = 'Adobe AIR';\n        os = data.flash.system.Capabilities.os;\n      }\n      // Detect PhantomJS.\n      else if (getClassOf((data = context.phantom)) == phantomClass) {\n        name = 'PhantomJS';\n        version = (data = data.version || null) && (data.major + '.' + data.minor + '.' + data.patch);\n      }\n      // Detect IE compatibility modes.\n      else if (typeof doc.documentMode == 'number' && (data = /\\bTrident\\/(\\d+)/i.exec(ua))) {\n        // We're in compatibility mode when the Trident version + 4 doesn't\n        // equal the document mode.\n        version = [version, doc.documentMode];\n        if ((data = +data[1] + 4) != version[1]) {\n          description.push('IE ' + version[1] + ' mode');\n          layout && (layout[1] = '');\n          version[1] = data;\n        }\n        version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];\n      }\n      // Detect IE 11 masking as other browsers.\n      else if (typeof doc.documentMode == 'number' && /^(?:Chrome|Firefox)\\b/.test(name)) {\n        description.push('masking as ' + name + ' ' + version);\n        name = 'IE';\n        version = '11.0';\n        layout = ['Trident'];\n        os = 'Windows';\n      }\n      os = os && format(os);\n    }\n    // Detect prerelease phases.\n    if (version && (data =\n          /(?:[ab]|dp|pre|[ab]\\d+pre)(?:\\d+\\+?)?$/i.exec(version) ||\n          /(?:alpha|beta)(?: ?\\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) ||\n          /\\bMinefield\\b/i.test(ua) && 'a'\n        )) {\n      prerelease = /b/i.test(data) ? 'beta' : 'alpha';\n      version = version.replace(RegExp(data + '\\\\+?$'), '') +\n        (prerelease == 'beta' ? beta : alpha) + (/\\d+\\+?/.exec(data) || '');\n    }\n    // Detect Firefox Mobile.\n    if (name == 'Fennec' || name == 'Firefox' && /\\b(?:Android|Firefox OS|KaiOS)\\b/.test(os)) {\n      name = 'Firefox Mobile';\n    }\n    // Obscure Maxthon's unreliable version.\n    else if (name == 'Maxthon' && version) {\n      version = version.replace(/\\.[\\d.]+/, '.x');\n    }\n    // Detect Xbox 360 and Xbox One.\n    else if (/\\bXbox\\b/i.test(product)) {\n      if (product == 'Xbox 360') {\n        os = null;\n      }\n      if (product == 'Xbox 360' && /\\bIEMobile\\b/.test(ua)) {\n        description.unshift('mobile mode');\n      }\n    }\n    // Add mobile postfix.\n    else if ((/^(?:Chrome|IE|Opera)$/.test(name) || name && !product && !/Browser|Mobi/.test(name)) &&\n        (os == 'Windows CE' || /Mobi/i.test(ua))) {\n      name += ' Mobile';\n    }\n    // Detect IE platform preview.\n    else if (name == 'IE' && useFeatures) {\n      try {\n        if (context.external === null) {\n          description.unshift('platform preview');\n        }\n      } catch(e) {\n        description.unshift('embedded');\n      }\n    }\n    // Detect BlackBerry OS version.\n    // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp\n    else if ((/\\bBlackBerry\\b/.test(product) || /\\bBB10\\b/.test(ua)) && (data =\n          (RegExp(product.replace(/ +/g, ' *') + '/([.\\\\d]+)', 'i').exec(ua) || 0)[1] ||\n          version\n        )) {\n      data = [data, /BB10/.test(ua)];\n      os = (data[1] ? (product = null, manufacturer = 'BlackBerry') : 'Device Software') + ' ' + data[0];\n      version = null;\n    }\n    // Detect Opera identifying/masking itself as another browser.\n    // http://www.opera.com/support/kb/view/843/\n    else if (this != forOwn && product != 'Wii' && (\n          (useFeatures && opera) ||\n          (/Opera/.test(name) && /\\b(?:MSIE|Firefox)\\b/i.test(ua)) ||\n          (name == 'Firefox' && /\\bOS X (?:\\d+\\.){2,}/.test(os)) ||\n          (name == 'IE' && (\n            (os && !/^Win/.test(os) && version > 5.5) ||\n            /\\bWindows XP\\b/.test(os) && version > 8 ||\n            version == 8 && !/\\bTrident\\b/.test(ua)\n          ))\n        ) && !reOpera.test((data = parse.call(forOwn, ua.replace(reOpera, '') + ';'))) && data.name) {\n      // When \"identifying\", the UA contains both Opera and the other browser's name.\n      data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');\n      if (reOpera.test(name)) {\n        if (/\\bIE\\b/.test(data) && os == 'Mac OS') {\n          os = null;\n        }\n        data = 'identify' + data;\n      }\n      // When \"masking\", the UA contains only the other browser's name.\n      else {\n        data = 'mask' + data;\n        if (operaClass) {\n          name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));\n        } else {\n          name = 'Opera';\n        }\n        if (/\\bIE\\b/.test(data)) {\n          os = null;\n        }\n        if (!useFeatures) {\n          version = null;\n        }\n      }\n      layout = ['Presto'];\n      description.push(data);\n    }\n    // Detect WebKit Nightly and approximate Chrome/Safari versions.\n    if ((data = (/\\bAppleWebKit\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n      // Correct build number for numeric comparison.\n      // (e.g. \"532.5\" becomes \"532.05\")\n      data = [parseFloat(data.replace(/\\.(\\d)$/, '.0$1')), data];\n      // Nightly builds are postfixed with a \"+\".\n      if (name == 'Safari' && data[1].slice(-1) == '+') {\n        name = 'WebKit Nightly';\n        prerelease = 'alpha';\n        version = data[1].slice(0, -1);\n      }\n      // Clear incorrect browser versions.\n      else if (version == data[1] ||\n          version == (data[2] = (/\\bSafari\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n        version = null;\n      }\n      // Use the full Chrome version when available.\n      data[1] = (/\\b(?:Headless)?Chrome\\/([\\d.]+)/i.exec(ua) || 0)[1];\n      // Detect Blink layout engine.\n      if (data[0] == 537.36 && data[2] == 537.36 && parseFloat(data[1]) >= 28 && layout == 'WebKit') {\n        layout = ['Blink'];\n      }\n      // Detect JavaScriptCore.\n      // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi\n      if (!useFeatures || (!likeChrome && !data[1])) {\n        layout && (layout[1] = 'like Safari');\n        data = (data = data[0], data < 400 ? 1 : data < 500 ? 2 : data < 526 ? 3 : data < 533 ? 4 : data < 534 ? '4+' : data < 535 ? 5 : data < 537 ? 6 : data < 538 ? 7 : data < 601 ? 8 : data < 602 ? 9 : data < 604 ? 10 : data < 606 ? 11 : data < 608 ? 12 : '12');\n      } else {\n        layout && (layout[1] = 'like Chrome');\n        data = data[1] || (data = data[0], data < 530 ? 1 : data < 532 ? 2 : data < 532.05 ? 3 : data < 533 ? 4 : data < 534.03 ? 5 : data < 534.07 ? 6 : data < 534.10 ? 7 : data < 534.13 ? 8 : data < 534.16 ? 9 : data < 534.24 ? 10 : data < 534.30 ? 11 : data < 535.01 ? 12 : data < 535.02 ? '13+' : data < 535.07 ? 15 : data < 535.11 ? 16 : data < 535.19 ? 17 : data < 536.05 ? 18 : data < 536.10 ? 19 : data < 537.01 ? 20 : data < 537.11 ? '21+' : data < 537.13 ? 23 : data < 537.18 ? 24 : data < 537.24 ? 25 : data < 537.36 ? 26 : layout != 'Blink' ? '27' : '28');\n      }\n      // Add the postfix of \".x\" or \"+\" for approximate versions.\n      layout && (layout[1] += ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+'));\n      // Obscure version for some Safari 1-2 releases.\n      if (name == 'Safari' && (!version || parseInt(version) > 45)) {\n        version = data;\n      } else if (name == 'Chrome' && /\\bHeadlessChrome/i.test(ua)) {\n        description.unshift('headless');\n      }\n    }\n    // Detect Opera desktop modes.\n    if (name == 'Opera' &&  (data = /\\bzbov|zvav$/.exec(os))) {\n      name += ' ';\n      description.unshift('desktop mode');\n      if (data == 'zvav') {\n        name += 'Mini';\n        version = null;\n      } else {\n        name += 'Mobile';\n      }\n      os = os.replace(RegExp(' *' + data + '$'), '');\n    }\n    // Detect Chrome desktop mode.\n    else if (name == 'Safari' && /\\bChrome\\b/.exec(layout && layout[1])) {\n      description.unshift('desktop mode');\n      name = 'Chrome Mobile';\n      version = null;\n\n      if (/\\bOS X\\b/.test(os)) {\n        manufacturer = 'Apple';\n        os = 'iOS 4.3+';\n      } else {\n        os = null;\n      }\n    }\n    // Newer versions of SRWare Iron uses the Chrome tag to indicate its version number.\n    else if (/\\bSRWare Iron\\b/.test(name) && !version) {\n      version = getVersion('Chrome');\n    }\n    // Strip incorrect OS versions.\n    if (version && version.indexOf((data = /[\\d.]+$/.exec(os))) == 0 &&\n        ua.indexOf('/' + data + '-') > -1) {\n      os = trim(os.replace(data, ''));\n    }\n    // Ensure OS does not include the browser name.\n    if (os && os.indexOf(name) != -1 && !RegExp(name + ' OS').test(os)) {\n      os = os.replace(RegExp(' *' + qualify(name) + ' *'), '');\n    }\n    // Add layout engine.\n    if (layout && !/\\b(?:Avant|Nook)\\b/.test(name) && (\n        /Browser|Lunascape|Maxthon/.test(name) ||\n        name != 'Safari' && /^iOS/.test(os) && /\\bSafari\\b/.test(layout[1]) ||\n        /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|SRWare Iron|Vivaldi|Web)/.test(name) && layout[1])) {\n      // Don't add layout details to description if they are falsey.\n      (data = layout[layout.length - 1]) && description.push(data);\n    }\n    // Combine contextual information.\n    if (description.length) {\n      description = ['(' + description.join('; ') + ')'];\n    }\n    // Append manufacturer to description.\n    if (manufacturer && product && product.indexOf(manufacturer) < 0) {\n      description.push('on ' + manufacturer);\n    }\n    // Append product to description.\n    if (product) {\n      description.push((/^on /.test(description[description.length - 1]) ? '' : 'on ') + product);\n    }\n    // Parse the OS into an object.\n    if (os) {\n      data = / ([\\d.+]+)$/.exec(os);\n      isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';\n      os = {\n        'architecture': 32,\n        'family': (data && !isSpecialCasedOS) ? os.replace(data[0], '') : os,\n        'version': data ? data[1] : null,\n        'toString': function() {\n          var version = this.version;\n          return this.family + ((version && !isSpecialCasedOS) ? ' ' + version : '') + (this.architecture == 64 ? ' 64-bit' : '');\n        }\n      };\n    }\n    // Add browser/OS architecture.\n    if ((data = /\\b(?:AMD|IA|Win|WOW|x86_|x)64\\b/i.exec(arch)) && !/\\bi686\\b/i.test(arch)) {\n      if (os) {\n        os.architecture = 64;\n        os.family = os.family.replace(RegExp(' *' + data), '');\n      }\n      if (\n          name && (/\\bWOW64\\b/i.test(ua) ||\n          (useFeatures && /\\w(?:86|32)$/.test(nav.cpuClass || nav.platform) && !/\\bWin64; x64\\b/i.test(ua)))\n      ) {\n        description.unshift('32-bit');\n      }\n    }\n    // Chrome 39 and above on OS X is always 64-bit.\n    else if (\n        os && /^OS X/.test(os.family) &&\n        name == 'Chrome' && parseFloat(version) >= 39\n    ) {\n      os.architecture = 64;\n    }\n\n    ua || (ua = null);\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The platform object.\n     *\n     * @name platform\n     * @type Object\n     */\n    var platform = {};\n\n    /**\n     * The platform description.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.description = ua;\n\n    /**\n     * The name of the browser's layout engine.\n     *\n     * The list of common layout engines include:\n     * \"Blink\", \"EdgeHTML\", \"Gecko\", \"Trident\" and \"WebKit\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.layout = layout && layout[0];\n\n    /**\n     * The name of the product's manufacturer.\n     *\n     * The list of manufacturers include:\n     * \"Apple\", \"Archos\", \"Amazon\", \"Asus\", \"Barnes & Noble\", \"BlackBerry\",\n     * \"Google\", \"HP\", \"HTC\", \"LG\", \"Microsoft\", \"Motorola\", \"Nintendo\",\n     * \"Nokia\", \"Samsung\" and \"Sony\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.manufacturer = manufacturer;\n\n    /**\n     * The name of the browser/environment.\n     *\n     * The list of common browser names include:\n     * \"Chrome\", \"Electron\", \"Firefox\", \"Firefox for iOS\", \"IE\",\n     * \"Microsoft Edge\", \"PhantomJS\", \"Safari\", \"SeaMonkey\", \"Silk\",\n     * \"Opera Mini\" and \"Opera\"\n     *\n     * Mobile versions of some browsers have \"Mobile\" appended to their name:\n     * eg. \"Chrome Mobile\", \"Firefox Mobile\", \"IE Mobile\" and \"Opera Mobile\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.name = name;\n\n    /**\n     * The alpha/beta release indicator.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.prerelease = prerelease;\n\n    /**\n     * The name of the product hosting the browser.\n     *\n     * The list of common products include:\n     *\n     * \"BlackBerry\", \"Galaxy S4\", \"Lumia\", \"iPad\", \"iPod\", \"iPhone\", \"Kindle\",\n     * \"Kindle Fire\", \"Nexus\", \"Nook\", \"PlayBook\", \"TouchPad\" and \"Transformer\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.product = product;\n\n    /**\n     * The browser's user agent string.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.ua = ua;\n\n    /**\n     * The browser/environment version.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.version = name && version;\n\n    /**\n     * The name of the operating system.\n     *\n     * @memberOf platform\n     * @type Object\n     */\n    platform.os = os || {\n\n      /**\n       * The CPU architecture the OS is built for.\n       *\n       * @memberOf platform.os\n       * @type number|null\n       */\n      'architecture': null,\n\n      /**\n       * The family of the OS.\n       *\n       * Common values include:\n       * \"Windows\", \"Windows Server 2008 R2 / 7\", \"Windows Server 2008 / Vista\",\n       * \"Windows XP\", \"OS X\", \"Linux\", \"Ubuntu\", \"Debian\", \"Fedora\", \"Red Hat\",\n       * \"SuSE\", \"Android\", \"iOS\" and \"Windows Phone\"\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'family': null,\n\n      /**\n       * The version of the OS.\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'version': null,\n\n      /**\n       * Returns the OS string.\n       *\n       * @memberOf platform.os\n       * @returns {string} The OS string.\n       */\n      'toString': function() { return 'null'; }\n    };\n\n    platform.parse = parse;\n    platform.toString = toStringPlatform;\n\n    if (platform.version) {\n      description.unshift(version);\n    }\n    if (platform.name) {\n      description.unshift(name);\n    }\n    if (os && name && !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))) {\n      description.push(product ? '(' + os + ')' : 'on ' + os);\n    }\n    if (description.length) {\n      platform.description = description.join(' ');\n    }\n    return platform;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export platform.\n  var platform = parse();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose platform on the global object to prevent errors when platform is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    root.platform = platform;\n\n    // Define as an anonymous module so platform can be aliased through path mapping.\n    define(function() {\n      return platform;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for CommonJS support.\n    forOwn(platform, function(value, key) {\n      freeExports[key] = value;\n    });\n  }\n  else {\n    // Export to the global object.\n    root.platform = platform;\n  }\n}.call(this));\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nvar _default = md5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nconst getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nconst rnds8 = new Uint8Array(16);\n\nfunction rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.default)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.default)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nvar _default = version;\nexports.default = _default;","/*\nWildEmitter.js is a slim little event emitter by @henrikjoreteg largely based\non @visionmedia's Emitter from UI Kit.\n\nWhy? I wanted it standalone.\n\nI also wanted support for wildcard emitters like this:\n\nemitter.on('*', function (eventName, other, event, payloads) {\n\n});\n\nemitter.on('somenamespace*', function (eventName, payloads) {\n\n});\n\nPlease note that callbacks triggered by wildcard registered events also get\nthe event name as the first argument.\n*/\n\nmodule.exports = WildEmitter;\n\nfunction WildEmitter() { }\n\nWildEmitter.mixin = function (constructor) {\n    var prototype = constructor.prototype || constructor;\n\n    prototype.isWildEmitter= true;\n\n    // Listen on the given `event` with `fn`. Store a group name if present.\n    prototype.on = function (event, groupName, fn) {\n        this.callbacks = this.callbacks || {};\n        var hasGroup = (arguments.length === 3),\n            group = hasGroup ? arguments[1] : undefined,\n            func = hasGroup ? arguments[2] : arguments[1];\n        func._groupName = group;\n        (this.callbacks[event] = this.callbacks[event] || []).push(func);\n        return this;\n    };\n\n    // Adds an `event` listener that will be invoked a single\n    // time then automatically removed.\n    prototype.once = function (event, groupName, fn) {\n        var self = this,\n            hasGroup = (arguments.length === 3),\n            group = hasGroup ? arguments[1] : undefined,\n            func = hasGroup ? arguments[2] : arguments[1];\n        function on() {\n            self.off(event, on);\n            func.apply(this, arguments);\n        }\n        this.on(event, group, on);\n        return this;\n    };\n\n    // Unbinds an entire group\n    prototype.releaseGroup = function (groupName) {\n        this.callbacks = this.callbacks || {};\n        var item, i, len, handlers;\n        for (item in this.callbacks) {\n            handlers = this.callbacks[item];\n            for (i = 0, len = handlers.length; i < len; i++) {\n                if (handlers[i]._groupName === groupName) {\n                    //console.log('removing');\n                    // remove it and shorten the array we're looping through\n                    handlers.splice(i, 1);\n                    i--;\n                    len--;\n                }\n            }\n        }\n        return this;\n    };\n\n    // Remove the given callback for `event` or all\n    // registered callbacks.\n    prototype.off = function (event, fn) {\n        this.callbacks = this.callbacks || {};\n        var callbacks = this.callbacks[event],\n            i;\n\n        if (!callbacks) return this;\n\n        // remove all handlers\n        if (arguments.length === 1) {\n            delete this.callbacks[event];\n            return this;\n        }\n\n        // remove specific handler\n        i = callbacks.indexOf(fn);\n        if (i !== -1) {\n            callbacks.splice(i, 1);\n            if (callbacks.length === 0) {\n                delete this.callbacks[event];\n            }\n        }\n        return this;\n    };\n\n    /// Emit `event` with the given args.\n    // also calls any `*` handlers\n    prototype.emit = function (event) {\n        this.callbacks = this.callbacks || {};\n        var args = [].slice.call(arguments, 1),\n            callbacks = this.callbacks[event],\n            specialCallbacks = this.getWildcardCallbacks(event),\n            i,\n            len,\n            item,\n            listeners;\n\n        if (callbacks) {\n            listeners = callbacks.slice();\n            for (i = 0, len = listeners.length; i < len; ++i) {\n                if (!listeners[i]) {\n                    break;\n                }\n                listeners[i].apply(this, args);\n            }\n        }\n\n        if (specialCallbacks) {\n            len = specialCallbacks.length;\n            listeners = specialCallbacks.slice();\n            for (i = 0, len = listeners.length; i < len; ++i) {\n                if (!listeners[i]) {\n                    break;\n                }\n                listeners[i].apply(this, [event].concat(args));\n            }\n        }\n\n        return this;\n    };\n\n    // Helper for for finding special wildcard event handlers that match the event\n    prototype.getWildcardCallbacks = function (eventName) {\n        this.callbacks = this.callbacks || {};\n        var item,\n            split,\n            result = [];\n\n        for (item in this.callbacks) {\n            split = item.split('*');\n            if (item === '*' || (split.length === 2 && eventName.slice(0, split[0].length) === split[0])) {\n                result = result.concat(this.callbacks[item]);\n            }\n        }\n        return result;\n    };\n\n};\n\nWildEmitter.mixin(WildEmitter);\n","/*!\n * EventEmitter v5.2.9 - git.io/ee\n * Unlicense - http://unlicense.org/\n * Oliver Caldwell - https://oli.me.uk/\n * @preserve\n */\n\n;(function (exports) {\n    'use strict';\n\n    /**\n     * Class for managing events.\n     * Can be extended to provide event functionality in other classes.\n     *\n     * @class EventEmitter Manages event registering and emitting.\n     */\n    function EventEmitter() {}\n\n    // Shortcuts to improve speed and size\n    var proto = EventEmitter.prototype;\n    var originalGlobalValue = exports.EventEmitter;\n\n    /**\n     * Finds the index of the listener for the event in its storage array.\n     *\n     * @param {Function[]} listeners Array of listeners to search through.\n     * @param {Function} listener Method to look for.\n     * @return {Number} Index of the specified listener, -1 if not found\n     * @api private\n     */\n    function indexOfListener(listeners, listener) {\n        var i = listeners.length;\n        while (i--) {\n            if (listeners[i].listener === listener) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Alias a method while keeping the context correct, to allow for overwriting of target method.\n     *\n     * @param {String} name The name of the target method.\n     * @return {Function} The aliased method\n     * @api private\n     */\n    function alias(name) {\n        return function aliasClosure() {\n            return this[name].apply(this, arguments);\n        };\n    }\n\n    /**\n     * Returns the listener array for the specified event.\n     * Will initialise the event object and listener arrays if required.\n     * Will return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\n     * Each property in the object response is an array of listener functions.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Function[]|Object} All listener functions for the event.\n     */\n    proto.getListeners = function getListeners(evt) {\n        var events = this._getEvents();\n        var response;\n        var key;\n\n        // Return a concatenated array of all matching events if\n        // the selector is a regular expression.\n        if (evt instanceof RegExp) {\n            response = {};\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    response[key] = events[key];\n                }\n            }\n        }\n        else {\n            response = events[evt] || (events[evt] = []);\n        }\n\n        return response;\n    };\n\n    /**\n     * Takes a list of listener objects and flattens it into a list of listener functions.\n     *\n     * @param {Object[]} listeners Raw listener objects.\n     * @return {Function[]} Just the listener functions.\n     */\n    proto.flattenListeners = function flattenListeners(listeners) {\n        var flatListeners = [];\n        var i;\n\n        for (i = 0; i < listeners.length; i += 1) {\n            flatListeners.push(listeners[i].listener);\n        }\n\n        return flatListeners;\n    };\n\n    /**\n     * Fetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Object} All listener functions for an event in an object.\n     */\n    proto.getListenersAsObject = function getListenersAsObject(evt) {\n        var listeners = this.getListeners(evt);\n        var response;\n\n        if (listeners instanceof Array) {\n            response = {};\n            response[evt] = listeners;\n        }\n\n        return response || listeners;\n    };\n\n    function isValidListener (listener) {\n        if (typeof listener === 'function' || listener instanceof RegExp) {\n            return true\n        } else if (listener && typeof listener === 'object') {\n            return isValidListener(listener.listener)\n        } else {\n            return false\n        }\n    }\n\n    /**\n     * Adds a listener function to the specified event.\n     * The listener will not be added if it is a duplicate.\n     * If the listener returns true then it will be removed after it is called.\n     * If you pass a regular expression as the event name then the listener will be added to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListener = function addListener(evt, listener) {\n        if (!isValidListener(listener)) {\n            throw new TypeError('listener must be a function');\n        }\n\n        var listeners = this.getListenersAsObject(evt);\n        var listenerIsWrapped = typeof listener === 'object';\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key) && indexOfListener(listeners[key], listener) === -1) {\n                listeners[key].push(listenerIsWrapped ? listener : {\n                    listener: listener,\n                    once: false\n                });\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of addListener\n     */\n    proto.on = alias('addListener');\n\n    /**\n     * Semi-alias of addListener. It will add a listener that will be\n     * automatically removed after its first execution.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addOnceListener = function addOnceListener(evt, listener) {\n        return this.addListener(evt, {\n            listener: listener,\n            once: true\n        });\n    };\n\n    /**\n     * Alias of addOnceListener.\n     */\n    proto.once = alias('addOnceListener');\n\n    /**\n     * Defines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\n     * You need to tell it what event names should be matched by a regex.\n     *\n     * @param {String} evt Name of the event to create.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvent = function defineEvent(evt) {\n        this.getListeners(evt);\n        return this;\n    };\n\n    /**\n     * Uses defineEvent to define multiple events.\n     *\n     * @param {String[]} evts An array of event names to define.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvents = function defineEvents(evts) {\n        for (var i = 0; i < evts.length; i += 1) {\n            this.defineEvent(evts[i]);\n        }\n        return this;\n    };\n\n    /**\n     * Removes a listener function from the specified event.\n     * When passed a regular expression as the event name, it will remove the listener from all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to remove the listener from.\n     * @param {Function} listener Method to remove from the event.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListener = function removeListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var index;\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key)) {\n                index = indexOfListener(listeners[key], listener);\n\n                if (index !== -1) {\n                    listeners[key].splice(index, 1);\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeListener\n     */\n    proto.off = alias('removeListener');\n\n    /**\n     * Adds listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the first argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\n     * You can also pass it a regular expression to add the array of listeners to all events that match it.\n     * Yeah, this function does quite a bit. That's probably a bad thing.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add to multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListeners = function addListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(false, evt, listeners);\n    };\n\n    /**\n     * Removes listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the first argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be removed.\n     * You can also pass it a regular expression to remove the listeners from all events that match it.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListeners = function removeListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(true, evt, listeners);\n    };\n\n    /**\n     * Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\n     * The first argument will determine if the listeners are removed (true) or added (false).\n     * If you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be added/removed.\n     * You can also pass it a regular expression to manipulate the listeners of all events that match it.\n     *\n     * @param {Boolean} remove True if you want to remove listeners, false if you want to add.\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add/remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add/remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.manipulateListeners = function manipulateListeners(remove, evt, listeners) {\n        var i;\n        var value;\n        var single = remove ? this.removeListener : this.addListener;\n        var multiple = remove ? this.removeListeners : this.addListeners;\n\n        // If evt is an object then pass each of its properties to this method\n        if (typeof evt === 'object' && !(evt instanceof RegExp)) {\n            for (i in evt) {\n                if (evt.hasOwnProperty(i) && (value = evt[i])) {\n                    // Pass the single listener straight through to the singular method\n                    if (typeof value === 'function') {\n                        single.call(this, i, value);\n                    }\n                    else {\n                        // Otherwise pass back to the multiple function\n                        multiple.call(this, i, value);\n                    }\n                }\n            }\n        }\n        else {\n            // So evt must be a string\n            // And listeners must be an array of listeners\n            // Loop over it and pass each one to the multiple method\n            i = listeners.length;\n            while (i--) {\n                single.call(this, evt, listeners[i]);\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Removes all listeners from a specified event.\n     * If you do not specify an event then all listeners will be removed.\n     * That means every event will be emptied.\n     * You can also pass a regex to remove all events that match it.\n     *\n     * @param {String|RegExp} [evt] Optional name of the event to remove all listeners for. Will remove from every event if not passed.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeEvent = function removeEvent(evt) {\n        var type = typeof evt;\n        var events = this._getEvents();\n        var key;\n\n        // Remove different things depending on the state of evt\n        if (type === 'string') {\n            // Remove all listeners for the specified event\n            delete events[evt];\n        }\n        else if (evt instanceof RegExp) {\n            // Remove all events matching the regex.\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    delete events[key];\n                }\n            }\n        }\n        else {\n            // Remove all listeners in all events\n            delete this._events;\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeEvent.\n     *\n     * Added to mirror the node API.\n     */\n    proto.removeAllListeners = alias('removeEvent');\n\n    /**\n     * Emits an event of your choice.\n     * When emitted, every listener attached to that event will be executed.\n     * If you pass the optional argument array then those arguments will be passed to every listener upon execution.\n     * Because it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\n     * So they will not arrive within the array on the other side, they will be separate.\n     * You can also pass a regular expression to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {Array} [args] Optional array of arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emitEvent = function emitEvent(evt, args) {\n        var listenersMap = this.getListenersAsObject(evt);\n        var listeners;\n        var listener;\n        var i;\n        var key;\n        var response;\n\n        for (key in listenersMap) {\n            if (listenersMap.hasOwnProperty(key)) {\n                listeners = listenersMap[key].slice(0);\n\n                for (i = 0; i < listeners.length; i++) {\n                    // If the listener returns true then it shall be removed from the event\n                    // The function is executed either with a basic call or an apply if there is an args array\n                    listener = listeners[i];\n\n                    if (listener.once === true) {\n                        this.removeListener(evt, listener.listener);\n                    }\n\n                    response = listener.listener.apply(this, args || []);\n\n                    if (response === this._getOnceReturnValue()) {\n                        this.removeListener(evt, listener.listener);\n                    }\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of emitEvent\n     */\n    proto.trigger = alias('emitEvent');\n\n    /**\n     * Subtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\n     * As with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {...*} Optional additional arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emit = function emit(evt) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return this.emitEvent(evt, args);\n    };\n\n    /**\n     * Sets the current value to check against when executing listeners. If a\n     * listeners return value matches the one set here then it will be removed\n     * after execution. This value defaults to true.\n     *\n     * @param {*} value The new value to check for when executing listeners.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.setOnceReturnValue = function setOnceReturnValue(value) {\n        this._onceReturnValue = value;\n        return this;\n    };\n\n    /**\n     * Fetches the current value to check against when executing listeners. If\n     * the listeners return value matches this one then it should be removed\n     * automatically. It will return true by default.\n     *\n     * @return {*|Boolean} The current value to check for or the default, true.\n     * @api private\n     */\n    proto._getOnceReturnValue = function _getOnceReturnValue() {\n        if (this.hasOwnProperty('_onceReturnValue')) {\n            return this._onceReturnValue;\n        }\n        else {\n            return true;\n        }\n    };\n\n    /**\n     * Fetches the events object and creates one if required.\n     *\n     * @return {Object} The events storage object.\n     * @api private\n     */\n    proto._getEvents = function _getEvents() {\n        return this._events || (this._events = {});\n    };\n\n    /**\n     * Reverts the global {@link EventEmitter} to its previous value and returns a reference to this version.\n     *\n     * @return {Function} Non conflicting EventEmitter class.\n     */\n    EventEmitter.noConflict = function noConflict() {\n        exports.EventEmitter = originalGlobalValue;\n        return EventEmitter;\n    };\n\n    // Expose the class either via AMD, CommonJS or the global object\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return EventEmitter;\n        });\n    }\n    else if (typeof module === 'object' && module.exports){\n        module.exports = EventEmitter;\n    }\n    else {\n        exports.EventEmitter = EventEmitter;\n    }\n}(typeof window !== 'undefined' ? window : this || {}));\n","module.exports={\n    \"author\": \"OpenVidu\",\n    \"dependencies\": {\n        \"freeice\": \"2.2.2\",\n        \"hark\": \"1.2.3\",\n        \"platform\": \"1.3.6\",\n        \"uuid\": \"8.3.1\",\n        \"wolfy87-eventemitter\": \"5.2.9\"\n    },\n    \"description\": \"OpenVidu Browser\",\n    \"devDependencies\": {\n        \"@types/node\": \"14.14.7\",\n        \"@types/platform\": \"1.3.3\",\n        \"browserify\": \"17.0.0\",\n        \"grunt\": \"1.3.0\",\n        \"grunt-cli\": \"1.3.2\",\n        \"grunt-contrib-copy\": \"1.0.0\",\n        \"grunt-contrib-sass\": \"2.0.0\",\n        \"grunt-contrib-uglify\": \"5.0.0\",\n        \"grunt-contrib-watch\": \"1.1.0\",\n        \"grunt-postcss\": \"0.9.0\",\n        \"grunt-string-replace\": \"1.3.1\",\n        \"grunt-ts\": \"6.0.0-beta.22\",\n        \"terser\": \"5.3.8\",\n        \"tsify\": \"5.0.2\",\n        \"tslint\": \"6.1.3\",\n        \"typedoc\": \"0.19.2\",\n        \"typescript\": \"4.0.5\"\n    },\n    \"license\": \"Apache-2.0\",\n    \"main\": \"lib/index.js\",\n    \"name\": \"openvidu-browser\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"git://github.com/OpenVidu/openvidu\"\n    },\n    \"scripts\": {\n        \"browserify\": \"VERSION=${VERSION:-dev}; mkdir -p static/js/ && cd src && ../node_modules/browserify/bin/cmd.js Main.ts -p [ tsify ] --exclude kurento-browser-extensions --debug -o ../static/js/openvidu-browser-$VERSION.js -v\",\n        \"browserify-prod\": \"VERSION=${VERSION:-dev}; mkdir -p static/js/ && cd src && ../node_modules/browserify/bin/cmd.js --debug Main.ts -p [ tsify ] --exclude kurento-browser-extensions | ../node_modules/terser/bin/terser --source-map content=inline --output ../static/js/openvidu-browser-$VERSION.min.js\",\n        \"build\": \"cd src/OpenVidu && ./../../node_modules/typescript/bin/tsc && cd ../.. && ./node_modules/typescript/bin/tsc --declaration src/index.ts --outDir ./lib --sourceMap --lib dom,es5,es2015.promise,scripthost\",\n        \"docs\": \"./generate-docs.sh\"\n    },\n    \"types\": \"lib/index.d.ts\",\n    \"version\": \"2.17.0\"\n}\n","import { OpenVidu } from './OpenVidu/OpenVidu';\n\nif (window) {\n    window['OpenVidu'] = OpenVidu;\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Session } from './Session';\nimport { Stream } from './Stream';\nimport { LocalConnectionOptions } from '../OpenViduInternal/Interfaces/Private/LocalConnectionOptions';\nimport { RemoteConnectionOptions } from '../OpenViduInternal/Interfaces/Private/RemoteConnectionOptions';\nimport { InboundStreamOptions } from '../OpenViduInternal/Interfaces/Private/InboundStreamOptions';\nimport { StreamOptionsServer } from '../OpenViduInternal/Interfaces/Private/StreamOptionsServer';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n\n/**\n * Represents each one of the user's connection to the session (the local one and other user's connections).\n * Therefore each [[Session]] and [[Stream]] object has an attribute of type Connection\n */\nexport class Connection {\n\n    /**\n     * Unique identifier of the connection\n     */\n    connectionId: string;\n\n    /**\n     * Time when this connection was created in OpenVidu Server (UTC milliseconds)\n     */\n    creationTime: number;\n\n    /**\n     * Data associated to this connection (and therefore to certain user). This is an important field:\n     * it allows you to broadcast all the information you want for each user (a username, for example)\n     */\n    data: string;\n\n    /**\n     * Role of the connection.\n     * - `SUBSCRIBER`: can subscribe to published Streams of other users by calling [[Session.subscribe]]\n     * - `PUBLISHER`: SUBSCRIBER permissions + can publish their own Streams by calling [[Session.publish]]\n     * - `MODERATOR`: SUBSCRIBER + PUBLISHER permissions + can force the unpublishing or disconnection over a third-party Stream or Connection by call [[Session.forceUnpublish]] and [[Session.forceDisconnect]]\n     *\n     * **Only defined for the local connection. In remote connections will be `undefined`**\n     */\n    role: string;\n\n    /**\n     * Whether the streams published by this connection will be recorded or not. This only affects [INDIVIDUAL recording](/en/stable/advanced-features/recording#selecting-streams-to-be-recorded) <a href=\"https://docs.openvidu.io/en/stable/openvidu-pro/\" target=\"_blank\" style=\"display: inline-block; background-color: rgb(0, 136, 170); color: white; font-weight: bold; padding: 0px 5px; margin-right: 5px; border-radius: 3px; font-size: 13px; line-height:21px; font-family: Montserrat, sans-serif\">PRO</a>\n     *\n     * **Only defined for the local connection. In remote connections will be `undefined`**\n     */\n    record: boolean;\n\n    /**\n     * @hidden\n     */\n    stream?: Stream;\n\n    /**\n     * @hidden\n     */\n    localOptions: LocalConnectionOptions | undefined;\n\n    /**\n     * @hidden\n     */\n    remoteOptions: RemoteConnectionOptions | undefined;\n\n    /**\n     * @hidden\n     */\n    disposed = false;\n\n    /**\n     * @hidden\n     */\n    rpcSessionId: string;\n\n    /**\n     * @hidden\n     */\n    constructor(private session: Session, connectionOptions: LocalConnectionOptions | RemoteConnectionOptions) {\n        let msg = \"'Connection' created \";\n        if (!!(<LocalConnectionOptions>connectionOptions).role) {\n            // Connection is local\n            this.localOptions = <LocalConnectionOptions>connectionOptions;\n            this.connectionId = this.localOptions.id;\n            this.creationTime = this.localOptions.createdAt;\n            this.data = this.localOptions.metadata;\n            this.rpcSessionId = this.localOptions.sessionId;\n            this.role = this.localOptions.role;\n            this.record = this.localOptions.record;\n            msg += '(local)';\n        } else {\n            // Connection is remote\n            this.remoteOptions = <RemoteConnectionOptions>connectionOptions;\n            this.connectionId = this.remoteOptions.id;\n            this.creationTime = this.remoteOptions.createdAt;\n            if (this.remoteOptions.metadata) {\n                this.data = this.remoteOptions.metadata;\n            }\n            if (this.remoteOptions.streams) {\n                this.initRemoteStreams(this.remoteOptions.streams);\n            }\n            msg += \"(remote) with 'connectionId' [\" + this.remoteOptions.id + ']';\n        }\n        logger.info(msg);\n    }\n\n\n    /* Hidden methods */\n\n    /**\n     * @hidden\n     */\n    sendIceCandidate(candidate: RTCIceCandidate): void {\n\n        logger.debug((!!this.stream!.outboundStreamOpts ? 'Local' : 'Remote') + 'candidate for' +\n            this.connectionId, candidate);\n\n        this.session.openvidu.sendRequest('onIceCandidate', {\n            endpointName: this.connectionId,\n            candidate: candidate.candidate,\n            sdpMid: candidate.sdpMid,\n            sdpMLineIndex: candidate.sdpMLineIndex\n        }, (error, response) => {\n            if (error) {\n                logger.error('Error sending ICE candidate: '\n                    + JSON.stringify(error));\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    initRemoteStreams(options: StreamOptionsServer[]): void {\n\n        // This is ready for supporting multiple streams per Connection object. Right now the loop will always run just once\n        // this.stream should also be replaced by a collection of streams to support multiple streams per Connection\n        options.forEach(opts => {\n            const streamOptions: InboundStreamOptions = {\n                id: opts.id,\n                createdAt: opts.createdAt,\n                connection: this,\n                hasAudio: opts.hasAudio,\n                hasVideo: opts.hasVideo,\n                audioActive: opts.audioActive,\n                videoActive: opts.videoActive,\n                typeOfVideo: opts.typeOfVideo,\n                frameRate: opts.frameRate,\n                videoDimensions: !!opts.videoDimensions ? JSON.parse(opts.videoDimensions) : undefined,\n                filter: !!opts.filter ? opts.filter : undefined\n            };\n            const stream = new Stream(this.session, streamOptions);\n\n            this.addStream(stream);\n        });\n\n        logger.info(\"Remote 'Connection' with 'connectionId' [\" + this.connectionId + '] is now configured for receiving Streams with options: ', this.stream!.inboundStreamOpts);\n    }\n\n    /**\n     * @hidden\n     */\n    addStream(stream: Stream): void {\n        stream.connection = this;\n        this.stream = stream;\n    }\n\n    /**\n     * @hidden\n     */\n    removeStream(streamId: string): void {\n        delete this.stream;\n    }\n\n    /**\n     * @hidden\n     */\n    dispose(): void {\n        if (!!this.stream) {\n            delete this.stream;\n        }\n        this.disposed = true;\n    }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event as Event } from '../OpenViduInternal/Events/Event';\nimport EventEmitter = require('wolfy87-eventemitter');\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\nexport abstract class EventDispatcher {\n\n    /**\n     * @hidden\n     */\n    userHandlerArrowHandler: WeakMap<(event: Event) => void, (event: Event) => void> = new WeakMap();\n    /**\n     * @hidden\n     */\n    ee = new EventEmitter();\n\n    /**\n     * Adds function `handler` to handle event `type`\n     *\n     * @returns The EventDispatcher object\n     */\n    abstract on(type: string, handler: (event: Event) => void): EventDispatcher;\n\n    /**\n     * Adds function `handler` to handle event `type` just once. The handler will be automatically removed after first execution\n     *\n     * @returns The object that dispatched the event\n     */\n    abstract once(type: string, handler: (event: Event) => void): EventDispatcher;\n\n    /**\n     * Removes a `handler` from event `type`. If no handler is provided, all handlers will be removed from the event\n     *\n     * @returns The object that dispatched the event\n     */\n    off(type: string, handler?: (event: Event) => void): EventDispatcher {\n        if (!handler) {\n            this.ee.removeAllListeners(type);\n        } else {\n            // Must remove internal arrow function handler paired with user handler\n            const arrowHandler = this.userHandlerArrowHandler.get(handler);\n            if (!!arrowHandler) {\n                this.ee.off(type, arrowHandler);\n            }\n            this.userHandlerArrowHandler.delete(handler);\n        }\n        return this;\n    }\n\n    /**\n     * @hidden\n     */\n    onAux(type: string, message: string, handler: (event: Event) => void): EventDispatcher {\n        const arrowHandler = event => {\n            if (event) {\n                logger.info(message, event);\n            } else {\n                logger.info(message);\n            }\n            handler(event);\n        };\n        this.userHandlerArrowHandler.set(handler, arrowHandler);\n        this.ee.on(type, arrowHandler);\n        return this;\n    }\n\n    /**\n     * @hidden\n     */\n    onceAux(type: string, message: string, handler: (event: Event) => void): EventDispatcher {\n        const arrowHandler = event => {\n            if (event) {\n                logger.info(message, event);\n            } else {\n                logger.info(message);\n            }\n            handler(event);\n            // Remove handler from map after first and only execution\n            this.userHandlerArrowHandler.delete(handler);\n        };\n        this.userHandlerArrowHandler.set(handler, arrowHandler);\n        this.ee.once(type, arrowHandler);\n        return this;\n    }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Stream } from './Stream';\nimport { FilterEvent } from '../OpenViduInternal/Events/FilterEvent';\nimport { StreamPropertyChangedEvent } from '../OpenViduInternal/Events/StreamPropertyChangedEvent';\nimport { OpenViduError, OpenViduErrorName } from '../OpenViduInternal/Enums/OpenViduError';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * **WARNING**: experimental option. This interface may change in the near future\n *\n * Video/audio filter applied to a Stream. See [[Stream.applyFilter]]\n */\nexport class Filter {\n\n    /**\n     * Type of filter applied. This is the name of the remote class identifying the filter to apply in Kurento Media Server.\n     * For example: `\"FaceOverlayFilter\"`, `\"GStreamerFilter\"`.\n     *\n     * You can get this property in `*.kmd.json` files defining the Kurento filters. For example, for GStreamerFilter that's\n     * [here](https://github.com/Kurento/kms-filters/blob/53a452fac71d61795952e3d2202156c6b00f6d65/src/server/interface/filters.GStreamerFilter.kmd.json#L4)\n     */\n    type: string;\n\n    /**\n     * Parameters used to initialize the filter.\n     * These correspond to the constructor parameters used in the filter in Kurento Media Server (except for `mediaPipeline` parameter, which is never needed).\n     *\n     * For example: for `filter.type = \"GStreamerFilter\"` could be `filter.options = {\"command\": \"videobalance saturation=0.0\"}`\n     *\n     * You can get this property in `*.kmd.json` files defining the Kurento filters. For example, for GStreamerFilter that's\n     * [here](https://github.com/Kurento/kms-filters/blob/53a452fac71d61795952e3d2202156c6b00f6d65/src/server/interface/filters.GStreamerFilter.kmd.json#L13-L31)\n     */\n    options: Object;\n\n    /**\n     * Value passed the last time [[Filter.execMethod]] was called. If `undefined` this method has not been called yet.\n     *\n     * You can use this value to know the current status of any applied filter\n     */\n    lastExecMethod?: {\n        method: string, params: Object\n    };\n\n    /**\n     * @hidden\n     */\n    handlers: Map<string, (event: FilterEvent) => void> = new Map();\n\n    /**\n     * @hidden\n     */\n    stream: Stream;\n    private logger: OpenViduLogger;\n\n\n    /**\n     * @hidden\n     */\n    constructor(type: string, options: Object) {\n        this.type = type;\n        this.options = options;\n    }\n\n\n    /**\n     * Executes a filter method. Available methods are specific for each filter\n     *\n     * @param method Name of the method\n     * @param params Parameters of the method\n     */\n    execMethod(method: string, params: Object): Promise<any> {\n        return new Promise((resolve, reject) => {\n            logger.info('Executing filter method to stream ' + this.stream.streamId);\n            let stringParams;\n            if (typeof params !== 'string') {\n                try {\n                    stringParams = JSON.stringify(params);\n                } catch (error) {\n                    const errorMsg = \"'params' property must be a JSON formatted object\";\n                    logger.error(errorMsg);\n                    reject(errorMsg);\n                }\n            } else {\n                stringParams = <string>params;\n            }\n            this.stream.session.openvidu.sendRequest(\n                'execFilterMethod',\n                { streamId: this.stream.streamId, method, params: stringParams },\n                (error, response) => {\n                    if (error) {\n                        logger.error('Error executing filter method for Stream ' + this.stream.streamId, error);\n                        if (error.code === 401) {\n                            reject(new OpenViduError(OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to execute a filter method\"));\n                        } else {\n                            reject(error);\n                        }\n                    } else {\n                        logger.info('Filter method successfully executed on Stream ' + this.stream.streamId);\n                        const oldValue = (<any>Object).assign({}, this.stream.filter);\n                        this.stream.filter!.lastExecMethod = { method, params: JSON.parse(stringParams) };\n                        this.stream.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent(this.stream.session, this.stream, 'filter', this.stream.filter!, oldValue, 'execFilterMethod')]);\n                        this.stream.streamManager.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent(this.stream.streamManager, this.stream, 'filter', this.stream.filter!, oldValue, 'execFilterMethod')]);\n                        resolve();\n                    }\n                }\n            );\n        });\n    }\n\n\n    /**\n     * Subscribe to certain filter event. Available events are specific for each filter\n     *\n     * @param eventType Event to which subscribe to.\n     * @param handler Function to execute upon event dispatched. It receives as parameter a [[FilterEvent]] object\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the event listener was successfully attached to the filter and rejected with an Error object if not\n     */\n    addEventListener(eventType: string, handler: (event: FilterEvent) => void): Promise<any> {\n        return new Promise((resolve, reject) => {\n            logger.info('Adding filter event listener to event ' + eventType + ' to stream ' + this.stream.streamId);\n            this.stream.session.openvidu.sendRequest(\n                'addFilterEventListener',\n                { streamId: this.stream.streamId, eventType },\n                (error, response) => {\n                    if (error) {\n                        logger.error('Error adding filter event listener to event ' + eventType + 'for Stream ' + this.stream.streamId, error);\n                        if (error.code === 401) {\n                            reject(new OpenViduError(OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to add a filter event listener\"));\n                        } else {\n                            reject(error);\n                        }\n                    } else {\n                        this.handlers.set(eventType, handler);\n                        logger.info('Filter event listener to event ' + eventType + ' successfully applied on Stream ' + this.stream.streamId);\n                        resolve();\n                    }\n                }\n            );\n        });\n    }\n\n\n    /**\n     * Removes certain filter event listener previously set.\n     *\n     * @param eventType Event to unsubscribe from.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the event listener was successfully removed from the filter and rejected with an Error object in other case\n     */\n    removeEventListener(eventType: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            logger.info('Removing filter event listener to event ' + eventType + ' to stream ' + this.stream.streamId);\n            this.stream.session.openvidu.sendRequest(\n                'removeFilterEventListener',\n                { streamId: this.stream.streamId, eventType },\n                (error, response) => {\n                    if (error) {\n                        logger.error('Error removing filter event listener to event ' + eventType + 'for Stream ' + this.stream.streamId, error);\n                        if (error.code === 401) {\n                            reject(new OpenViduError(OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to add a filter event listener\"));\n                        } else {\n                            reject(error);\n                        }\n                    } else {\n                        this.handlers.delete(eventType);\n                        logger.info('Filter event listener to event ' + eventType + ' successfully removed on Stream ' + this.stream.streamId);\n                        resolve();\n                    }\n                }\n            );\n        });\n    }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Stream } from './Stream';\nimport { LocalRecorderState } from '../OpenViduInternal/Enums/LocalRecorderState';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\nimport { PlatformUtils } from '../OpenViduInternal/Utils/Platform';\n\n\n/**\n * @hidden\n */\ndeclare var MediaRecorder: any;\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\n\n/**\n * Easy recording of [[Stream]] objects straightaway from the browser. Initialized with [[OpenVidu.initLocalRecorder]] method\n *\n * > WARNINGS:\n * - Performing browser local recording of **remote streams** may cause some troubles. A long waiting time may be required after calling _LocalRecorder.stop()_ in this case\n * - Only Chrome and Firefox support local stream recording\n */\nexport class LocalRecorder {\n\n    state: LocalRecorderState;\n\n    private connectionId: string;\n    private mediaRecorder: any;\n    private chunks: any[] = [];\n    private blob?: Blob;\n    private id: string;\n    private videoPreviewSrc: string;\n    private videoPreview: HTMLVideoElement;\n\n    /**\n     * @hidden\n     */\n    constructor(private stream: Stream) {\n        platform = PlatformUtils.getInstance();\n        this.connectionId = (!!this.stream.connection) ? this.stream.connection.connectionId : 'default-connection';\n        this.id = this.stream.streamId + '_' + this.connectionId + '_localrecord';\n        this.state = LocalRecorderState.READY;\n    }\n\n\n    /**\n     * Starts the recording of the Stream. [[state]] property must be `READY`. After method succeeds is set to `RECORDING`\n     *\n     * @param mimeType The [MediaRecorder.mimeType](https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/mimeType) to be used to record this Stream.\n     * Make sure the platform supports it or the promise will return an error. If this parameter is not provided, the MediaRecorder will use the default codecs available in the platform\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the recording successfully started and rejected with an Error object if not\n     */\n    record(mimeType?: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            try {\n                if (typeof MediaRecorder === 'undefined') {\n                    logger.error('MediaRecorder not supported on your browser. See compatibility in https://caniuse.com/#search=MediaRecorder');\n                    throw (Error('MediaRecorder not supported on your browser. See compatibility in https://caniuse.com/#search=MediaRecorder'));\n                }\n                if (this.state !== LocalRecorderState.READY) {\n                    throw (Error('\\'LocalRecord.record()\\' needs \\'LocalRecord.state\\' to be \\'READY\\' (current value: \\'' + this.state + '\\'). Call \\'LocalRecorder.clean()\\' or init a new LocalRecorder before'));\n                }\n                logger.log(\"Starting local recording of stream '\" + this.stream.streamId + \"' of connection '\" + this.connectionId + \"'\");\n\n                let options = {};\n                if (typeof MediaRecorder.isTypeSupported === 'function') {\n                    if (!!mimeType) {\n                        if (!MediaRecorder.isTypeSupported(mimeType)) {\n                            reject(new Error('mimeType \"' + mimeType + '\" is not supported'));\n                        }\n                        options = { mimeType };\n                    } else {\n                        logger.log('No mimeType parameter provided. Using default codecs');\n                    }\n                } else {\n                    logger.warn('MediaRecorder#isTypeSupported is not supported. Using default codecs');\n                }\n\n                this.mediaRecorder = new MediaRecorder(this.stream.getMediaStream(), options);\n                this.mediaRecorder.start(10);\n\n            } catch (err) {\n                reject(err);\n            }\n\n            this.mediaRecorder.ondataavailable = (e) => {\n                this.chunks.push(e.data);\n            };\n\n            this.mediaRecorder.onerror = (e) => {\n                logger.error('MediaRecorder error: ', e);\n            };\n\n            this.mediaRecorder.onstart = () => {\n                logger.log('MediaRecorder started (state=' + this.mediaRecorder.state + ')');\n            };\n\n            this.mediaRecorder.onstop = () => {\n                this.onStopDefault();\n            };\n\n            this.mediaRecorder.onpause = () => {\n                logger.log('MediaRecorder paused (state=' + this.mediaRecorder.state + ')');\n            };\n\n            this.mediaRecorder.onresume = () => {\n                logger.log('MediaRecorder resumed (state=' + this.mediaRecorder.state + ')');\n            };\n\n            this.mediaRecorder.onwarning = (e) => {\n                logger.log('MediaRecorder warning: ' + e);\n            };\n\n            this.state = LocalRecorderState.RECORDING;\n            resolve();\n\n        });\n    }\n\n\n    /**\n     * Ends the recording of the Stream. [[state]] property must be `RECORDING` or `PAUSED`. After method succeeds is set to `FINISHED`\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the recording successfully stopped and rejected with an Error object if not\n     */\n    stop(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            try {\n                if (this.state === LocalRecorderState.READY || this.state === LocalRecorderState.FINISHED) {\n                    throw (Error('\\'LocalRecord.stop()\\' needs \\'LocalRecord.state\\' to be \\'RECORDING\\' or \\'PAUSED\\' (current value: \\'' + this.state + '\\'). Call \\'LocalRecorder.start()\\' before'));\n                }\n                this.mediaRecorder.onstop = () => {\n                    this.onStopDefault();\n                    resolve();\n                };\n                this.mediaRecorder.stop();\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n\n    /**\n     * Pauses the recording of the Stream. [[state]] property must be `RECORDING`. After method succeeds is set to `PAUSED`\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the recording was successfully paused and rejected with an Error object if not\n     */\n    pause(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            try {\n                if (this.state !== LocalRecorderState.RECORDING) {\n                    reject(Error('\\'LocalRecord.pause()\\' needs \\'LocalRecord.state\\' to be \\'RECORDING\\' (current value: \\'' + this.state + '\\'). Call \\'LocalRecorder.start()\\' or \\'LocalRecorder.resume()\\' before'));\n                }\n                this.mediaRecorder.pause();\n                this.state = LocalRecorderState.PAUSED;\n                resolve();\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n\n    /**\n     * Resumes the recording of the Stream. [[state]] property must be `PAUSED`. After method succeeds is set to `RECORDING`\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the recording was successfully resumed and rejected with an Error object if not\n     */\n    resume(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            try {\n                if (this.state !== LocalRecorderState.PAUSED) {\n                    throw (Error('\\'LocalRecord.resume()\\' needs \\'LocalRecord.state\\' to be \\'PAUSED\\' (current value: \\'' + this.state + '\\'). Call \\'LocalRecorder.pause()\\' before'));\n                }\n                this.mediaRecorder.resume();\n                this.state = LocalRecorderState.RECORDING;\n                resolve();\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n\n\n    /**\n     * Previews the recording, appending a new HTMLVideoElement to element with id `parentId`. [[state]] property must be `FINISHED`\n     */\n    preview(parentElement): HTMLVideoElement {\n\n        if (this.state !== LocalRecorderState.FINISHED) {\n            throw (Error('\\'LocalRecord.preview()\\' needs \\'LocalRecord.state\\' to be \\'FINISHED\\' (current value: \\'' + this.state + '\\'). Call \\'LocalRecorder.stop()\\' before'));\n        }\n\n        this.videoPreview = document.createElement('video');\n\n        this.videoPreview.id = this.id;\n        this.videoPreview.autoplay = true;\n\n        if (platform.isSafariBrowser()) {\n            this.videoPreview.setAttribute('playsinline', 'true');\n        }\n\n        if (typeof parentElement === 'string') {\n            const parentElementDom = document.getElementById(parentElement);\n            if (parentElementDom) {\n                this.videoPreview = parentElementDom.appendChild(this.videoPreview);\n            }\n        } else {\n            this.videoPreview = parentElement.appendChild(this.videoPreview);\n        }\n\n        this.videoPreview.src = this.videoPreviewSrc;\n\n        return this.videoPreview;\n    }\n\n\n    /**\n     * Gracefully stops and cleans the current recording (WARNING: it is completely dismissed). Sets [[state]] to `READY` so the recording can start again\n     */\n    clean(): void {\n        const f = () => {\n            delete this.blob;\n            this.chunks = [];\n            delete this.mediaRecorder;\n            this.state = LocalRecorderState.READY;\n        };\n        if (this.state === LocalRecorderState.RECORDING || this.state === LocalRecorderState.PAUSED) {\n            this.stop().then(() => f()).catch(() => f());\n        } else {\n            f();\n        }\n    }\n\n\n    /**\n     * Downloads the recorded video through the browser. [[state]] property must be `FINISHED`\n     */\n    download(): void {\n        if (this.state !== LocalRecorderState.FINISHED) {\n            throw (Error('\\'LocalRecord.download()\\' needs \\'LocalRecord.state\\' to be \\'FINISHED\\' (current value: \\'' + this.state + '\\'). Call \\'LocalRecorder.stop()\\' before'));\n        } else {\n            const a: HTMLAnchorElement = document.createElement('a');\n            a.style.display = 'none';\n            document.body.appendChild(a);\n\n            const url = window.URL.createObjectURL(this.blob);\n            a.href = url;\n            a.download = this.id + '.webm';\n            a.click();\n            window.URL.revokeObjectURL(url);\n\n            document.body.removeChild(a);\n        }\n    }\n\n    /**\n     * Gets the raw Blob file. Methods preview, download, uploadAsBinary and uploadAsMultipartfile use this same file to perform their specific actions. [[state]] property must be `FINISHED`\n     */\n    getBlob(): Blob {\n        if (this.state !== LocalRecorderState.FINISHED) {\n            throw (Error('Call \\'LocalRecord.stop()\\' before getting Blob file'));\n        } else {\n            return this.blob!;\n        }\n    }\n\n\n    /**\n     * Uploads the recorded video as a binary file performing an HTTP/POST operation to URL `endpoint`. [[state]] property must be `FINISHED`. Optional HTTP headers can be passed as second parameter. For example:\n     * ```\n     * var headers = {\n     *  \"Cookie\": \"$Version=1; Skin=new;\",\n     *  \"Authorization\":\"Basic QWxhZGpbjpuIHNlctZQ==\"\n     * }\n     * ```\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved with the `http.responseText` from server if the operation was successful and rejected with the failed `http.status` if not\n     */\n    uploadAsBinary(endpoint: string, headers?: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (this.state !== LocalRecorderState.FINISHED) {\n                reject(Error('\\'LocalRecord.uploadAsBinary()\\' needs \\'LocalRecord.state\\' to be \\'FINISHED\\' (current value: \\'' + this.state + '\\'). Call \\'LocalRecorder.stop()\\' before'));\n            } else {\n                const http = new XMLHttpRequest();\n                http.open('POST', endpoint, true);\n\n                if (typeof headers === 'object') {\n                    for (const key of Object.keys(headers)) {\n                        http.setRequestHeader(key, headers[key]);\n                    }\n                }\n\n                http.onreadystatechange = () => {\n                    if (http.readyState === 4) {\n                        if (http.status.toString().charAt(0) === '2') {\n                            // Success response from server (HTTP status standard: 2XX is success)\n                            resolve(http.responseText);\n                        } else {\n                            reject(http.status);\n                        }\n                    }\n                };\n                http.send(this.blob);\n            }\n        });\n    }\n\n\n    /**\n     * Uploads the recorded video as a multipart file performing an HTTP/POST operation to URL `endpoint`. [[state]] property must be `FINISHED`. Optional HTTP headers can be passed as second parameter. For example:\n     * ```\n     * var headers = {\n     *  \"Cookie\": \"$Version=1; Skin=new;\",\n     *  \"Authorization\":\"Basic QWxhZGpbjpuIHNlctZQ==\"\n     * }\n     * ```\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved with the `http.responseText` from server if the operation was successful and rejected with the failed `http.status` if not:\n     */\n    uploadAsMultipartfile(endpoint: string, headers?: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (this.state !== LocalRecorderState.FINISHED) {\n                reject(Error('\\'LocalRecord.uploadAsMultipartfile()\\' needs \\'LocalRecord.state\\' to be \\'FINISHED\\' (current value: \\'' + this.state + '\\'). Call \\'LocalRecorder.stop()\\' before'));\n            } else {\n                const http = new XMLHttpRequest();\n                http.open('POST', endpoint, true);\n\n                if (typeof headers === 'object') {\n                    for (const key of Object.keys(headers)) {\n                        http.setRequestHeader(key, headers[key]);\n                    }\n                }\n\n                const sendable = new FormData();\n                sendable.append('file', this.blob!, this.id + '.webm');\n\n                http.onreadystatechange = () => {\n                    if (http.readyState === 4) {\n                        if (http.status.toString().charAt(0) === '2') {\n                            // Success response from server (HTTP status standard: 2XX is success)\n                            resolve(http.responseText);\n                        } else {\n                            reject(http.status);\n                        }\n                    }\n                };\n\n                http.send(sendable);\n            }\n        });\n    }\n\n\n    /* Private methods */\n\n    private onStopDefault(): void {\n        logger.log('MediaRecorder stopped  (state=' + this.mediaRecorder.state + ')');\n\n        this.blob = new Blob(this.chunks, { type: 'video/webm' });\n        this.chunks = [];\n\n        this.videoPreviewSrc = window.URL.createObjectURL(this.blob);\n\n        this.state = LocalRecorderState.FINISHED;\n    }\n\n}\n","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { LocalRecorder } from './LocalRecorder';\nimport { Publisher } from './Publisher';\nimport { Session } from './Session';\nimport { Stream } from './Stream';\nimport { SessionDisconnectedEvent } from '../OpenViduInternal/Events/SessionDisconnectedEvent';\nimport { StreamPropertyChangedEvent } from '../OpenViduInternal/Events/StreamPropertyChangedEvent';\nimport { Device } from '../OpenViduInternal/Interfaces/Public/Device';\nimport { OpenViduAdvancedConfiguration } from '../OpenViduInternal/Interfaces/Public/OpenViduAdvancedConfiguration';\nimport { PublisherProperties } from '../OpenViduInternal/Interfaces/Public/PublisherProperties';\nimport { CustomMediaStreamConstraints } from '../OpenViduInternal/Interfaces/Private/CustomMediaStreamConstraints';\nimport { OpenViduError, OpenViduErrorName } from '../OpenViduInternal/Enums/OpenViduError';\nimport { VideoInsertMode } from '../OpenViduInternal/Enums/VideoInsertMode';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\nimport { PlatformUtils } from '../OpenViduInternal/Utils/Platform';\n\nimport * as screenSharingAuto from '../OpenViduInternal/ScreenSharing/Screen-Capturing-Auto';\nimport * as screenSharing from '../OpenViduInternal/ScreenSharing/Screen-Capturing';\n/**\n * @hidden\n */\nimport EventEmitter = require('wolfy87-eventemitter');\n/**\n * @hidden\n */\nimport RpcBuilder = require('../OpenViduInternal/KurentoUtils/kurento-jsonrpc');\n\n/**\n * @hidden\n */\nconst packageJson = require('../../package.json');\n/**\n * @hidden\n */\ndeclare var cordova: any;\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\n/**\n * Entrypoint of OpenVidu Browser library.\n * Use it to initialize objects of type [[Session]], [[Publisher]] and [[LocalRecorder]]\n */\nexport class OpenVidu {\n\n  private jsonRpcClient: any;\n\n  /**\n   * @hidden\n   */\n  session: Session;\n  /**\n   * @hidden\n   */\n  publishers: Publisher[] = [];\n  /**\n   * @hidden\n   */\n  wsUri: string;\n  /**\n   * @hidden\n   */\n  httpUri: string;\n  /**\n   * @hidden\n   */\n  secret = '';\n  /**\n   * @hidden\n   */\n  recorder = false;\n  /**\n   * @hidden\n   */\n  iceServers: RTCIceServer[];\n  /**\n   * @hidden\n   */\n  role: string;\n  /**\n   * @hidden\n   */\n  advancedConfiguration: OpenViduAdvancedConfiguration = {};\n  /**\n   * @hidden\n   */\n  webrtcStatsInterval: number = 0;\n  /**\n   * @hidden\n   */\n  libraryVersion: string;\n  /**\n   * @hidden\n   */\n  ee = new EventEmitter()\n\n  constructor() {\n    platform = PlatformUtils.getInstance();\n    this.libraryVersion = packageJson.version;\n    logger.info(\"'OpenVidu' initialized\");\n    logger.info(\"openvidu-browser version: \" + this.libraryVersion);\n\n    if (platform.isMobileDevice()) {\n      // Listen to orientationchange only on mobile devices\n      (<any>window).addEventListener('orientationchange', () => {\n        this.publishers.forEach(publisher => {\n          if (publisher.stream.isLocalStreamPublished && !!publisher.stream && !!publisher.stream.hasVideo && !!publisher.stream.streamManager.videos[0]) {\n\n            let attempts = 0;\n\n            const oldWidth = publisher.stream.videoDimensions.width;\n            const oldHeight = publisher.stream.videoDimensions.height;\n\n            const getNewVideoDimensions = (): Promise<{ newWidth: number, newHeight: number }> => {\n              return new Promise((resolve, reject) => {\n                if (platform.isIonicIos()) {\n                  // iOS Ionic. Limitation: must get new dimensions from an existing video element already inserted into DOM\n                  resolve({\n                    newWidth: publisher.stream.streamManager.videos[0].video.videoWidth,\n                    newHeight: publisher.stream.streamManager.videos[0].video.videoHeight\n                  });\n                } else {\n                  // Rest of platforms\n                  // New resolution got from different places for Chrome and Firefox. Chrome needs a videoWidth and videoHeight of a videoElement.\n                  // Firefox needs getSettings from the videoTrack\n                  const firefoxSettings = publisher.stream.getMediaStream().getVideoTracks()[0].getSettings();\n                  const newWidth = <number>((platform.isFirefoxBrowser() || platform.isFirefoxMobileBrowser()) ? firefoxSettings.width : publisher.videoReference.videoWidth);\n                  const newHeight = <number>((platform.isFirefoxBrowser() || platform.isFirefoxMobileBrowser()) ? firefoxSettings.height : publisher.videoReference.videoHeight);\n                  resolve({ newWidth, newHeight });\n                }\n              });\n            };\n\n            const repeatUntilChange = setInterval(() => {\n              getNewVideoDimensions().then(newDimensions => {\n                sendStreamPropertyChangedEvent(oldWidth, oldHeight, newDimensions.newWidth, newDimensions.newHeight);\n              });\n            }, 75);\n\n            const sendStreamPropertyChangedEvent = (oldWidth, oldHeight, newWidth, newHeight) => {\n              attempts++;\n              if (attempts > 10) {\n                clearTimeout(repeatUntilChange);\n              }\n              if (newWidth !== oldWidth || newHeight !== oldHeight) {\n                publisher.stream.videoDimensions = {\n                  width: newWidth || 0,\n                  height: newHeight || 0\n                };\n                this.sendRequest(\n                  'streamPropertyChanged',\n                  {\n                    streamId: publisher.stream.streamId,\n                    property: 'videoDimensions',\n                    newValue: JSON.stringify(publisher.stream.videoDimensions),\n                    reason: 'deviceRotated'\n                  },\n                  (error, response) => {\n                    if (error) {\n                      logger.error(\"Error sending 'streamPropertyChanged' event\", error);\n                    } else {\n                      this.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent(this.session, publisher.stream, 'videoDimensions', publisher.stream.videoDimensions, { width: oldWidth, height: oldHeight }, 'deviceRotated')]);\n                      publisher.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent(publisher, publisher.stream, 'videoDimensions', publisher.stream.videoDimensions, { width: oldWidth, height: oldHeight }, 'deviceRotated')]);\n                      this.session.sendVideoData(publisher);\n                    }\n                  });\n                clearTimeout(repeatUntilChange);\n              }\n            };\n          }\n        });\n      });\n    }\n  }\n\n\n  /**\n   * Returns new session\n   */\n  initSession(): Session {\n    this.session = new Session(this);\n    return this.session;\n  }\n\n\n  initPublisher(targetElement: string | HTMLElement): Publisher;\n  initPublisher(targetElement: string | HTMLElement, properties: PublisherProperties): Publisher;\n  initPublisher(targetElement: string | HTMLElement, completionHandler: (error: Error | undefined) => void): Publisher;\n  initPublisher(targetElement: string | HTMLElement, properties: PublisherProperties, completionHandler: (error: Error | undefined) => void): Publisher;\n\n  /**\n   * Returns a new publisher\n   *\n   * #### Events dispatched\n   *\n   * The [[Publisher]] object will dispatch an `accessDialogOpened` event, only if the pop-up shown by the browser to request permissions for the camera is opened. You can use this event to alert the user about granting permissions\n   * for your website. An `accessDialogClosed` event will also be dispatched after user clicks on \"Allow\" or \"Block\" in the pop-up.\n   *\n   * The [[Publisher]] object will dispatch an `accessAllowed` or `accessDenied` event once it has been granted access to the requested input devices or not.\n   *\n   * The [[Publisher]] object will dispatch a `videoElementCreated` event once a HTML video element has been added to DOM (only if you\n   * [let OpenVidu take care of the video players](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)). See [[VideoElementEvent]] to learn more.\n   *\n   * The [[Publisher]] object will dispatch a `streamPlaying` event once the local streams starts playing. See [[StreamManagerEvent]] to learn more.\n   *\n   * @param targetElement  HTML DOM element (or its `id` attribute) in which the video element of the Publisher will be inserted (see [[PublisherProperties.insertMode]]). If *null* or *undefined* no default video will be created for this Publisher.\n   * You can always call method [[Publisher.addVideoElement]] or [[Publisher.createVideoElement]] to manage the video elements on your own (see [Manage video players](/en/stable/cheatsheet/manage-videos) section)\n   * @param completionHandler `error` parameter is null if `initPublisher` succeeds, and is defined if it fails.\n   *                          `completionHandler` function is called before the Publisher dispatches an `accessAllowed` or an `accessDenied` event\n   */\n  initPublisher(targetElement: string | HTMLElement, param2?, param3?): Publisher {\n\n    let properties: PublisherProperties;\n\n    if (!!param2 && (typeof param2 !== 'function')) {\n\n      // Matches 'initPublisher(targetElement, properties)' or 'initPublisher(targetElement, properties, completionHandler)'\n\n      properties = (<PublisherProperties>param2);\n\n      properties = {\n        audioSource: (typeof properties.audioSource !== 'undefined') ? properties.audioSource : undefined,\n        frameRate: (typeof MediaStreamTrack !== 'undefined' && properties.videoSource instanceof MediaStreamTrack) ? undefined : ((typeof properties.frameRate !== 'undefined') ? properties.frameRate : undefined),\n        insertMode: (typeof properties.insertMode !== 'undefined') ? ((typeof properties.insertMode === 'string') ? VideoInsertMode[properties.insertMode] : properties.insertMode) : VideoInsertMode.APPEND,\n        mirror: (typeof properties.mirror !== 'undefined') ? properties.mirror : true,\n        publishAudio: (typeof properties.publishAudio !== 'undefined') ? properties.publishAudio : true,\n        publishVideo: (typeof properties.publishVideo !== 'undefined') ? properties.publishVideo : true,\n        resolution: (typeof MediaStreamTrack !== 'undefined' && properties.videoSource instanceof MediaStreamTrack) ? undefined : ((typeof properties.resolution !== 'undefined') ? properties.resolution : '640x480'),\n        videoSource: (typeof properties.videoSource !== 'undefined') ? properties.videoSource : undefined,\n        filter: properties.filter\n      };\n    } else {\n\n      // Matches 'initPublisher(targetElement)' or 'initPublisher(targetElement, completionHandler)'\n\n      properties = {\n        insertMode: VideoInsertMode.APPEND,\n        mirror: true,\n        publishAudio: true,\n        publishVideo: true,\n        resolution: '640x480'\n      };\n    }\n\n    const publisher: Publisher = new Publisher(targetElement, properties, this);\n\n    let completionHandler: (error: Error | undefined) => void;\n    if (!!param2 && (typeof param2 === 'function')) {\n      completionHandler = param2;\n    } else if (!!param3) {\n      completionHandler = param3;\n    }\n\n    publisher.initialize()\n      .then(() => {\n        if (completionHandler !== undefined) {\n          completionHandler(undefined);\n        }\n        publisher.emitEvent('accessAllowed', []);\n      }).catch((error) => {\n        if (completionHandler !== undefined) {\n          completionHandler(error);\n        }\n        publisher.emitEvent('accessDenied', [error]);\n      });\n\n    this.publishers.push(publisher);\n    return publisher;\n  }\n\n\n  /**\n   * Promisified version of [[OpenVidu.initPublisher]]\n   *\n   * > WARNING: events `accessDialogOpened` and `accessDialogClosed` will not be dispatched if using this method instead of [[OpenVidu.initPublisher]]\n   */\n  initPublisherAsync(targetElement: string | HTMLElement): Promise<Publisher>;\n  initPublisherAsync(targetElement: string | HTMLElement, properties: PublisherProperties): Promise<Publisher>;\n\n  initPublisherAsync(targetElement: string | HTMLElement, properties?: PublisherProperties): Promise<Publisher> {\n    return new Promise<Publisher>((resolve, reject) => {\n\n      let publisher: Publisher;\n\n      const callback = (error: Error) => {\n        if (!!error) {\n          reject(error);\n        } else {\n          resolve(publisher);\n        }\n      };\n\n      if (!!properties) {\n        publisher = this.initPublisher(targetElement, properties, callback);\n      } else {\n        publisher = this.initPublisher(targetElement, callback);\n      }\n    });\n  }\n\n\n  /**\n   * Returns a new local recorder for recording streams straight away from the browser\n   * @param stream  Stream to record\n   */\n  initLocalRecorder(stream: Stream): LocalRecorder {\n    return new LocalRecorder(stream);\n  }\n\n\n  /**\n   * Checks if the browser supports OpenVidu\n   * @returns 1 if the browser supports OpenVidu, 0 otherwise\n   */\n  checkSystemRequirements(): number {\n\n    if (platform.isIPhoneOrIPad()) {\n      if (platform.isIOSWithSafari() || platform.isIonicIos()) {\n        return 1;\n      }\n      return 0;\n    }\n\n    // Accept: Chrome (desktop and Android), Firefox (desktop and Android), Opera (desktop and Android),\n    // Safari (OSX and iOS), Edge Chromium (>= 80), Ionic (Android and iOS), Samsung Internet Browser (Android)\n    if (platform.isChromeBrowser() || platform.isChromeMobileBrowser() ||\n      platform.isFirefoxBrowser() || platform.isFirefoxMobileBrowser() || platform.isOperaBrowser() ||\n      platform.isOperaMobileBrowser() || platform.isEdgeBrowser() || platform.isEdgeMobileBrowser() ||\n      platform.isSafariBrowser() || platform.isAndroidBrowser() || platform.isElectron() || platform.isSamsungBrowser()\n    ) {\n      return 1;\n    }\n    // Reject iPhones and iPads if not Safari ('Safari' also covers Ionic for iOS)\n    // Reject others browsers not mentioned above\n    return 0;\n\n  }\n\n  /**\n   * Checks if the browser supports screen-sharing. Desktop Chrome, Firefox and Opera support screen-sharing\n   * @returns 1 if the browser supports screen-sharing, 0 otherwise\n   */\n  checkScreenSharingCapabilities(): boolean {\n    return platform.canScreenShare();\n  }\n\n\n  /**\n   * Collects information about the media input devices available on the system. You can pass property `deviceId` of a [[Device]] object as value of `audioSource` or `videoSource` properties in [[initPublisher]] method\n   */\n  getDevices(): Promise<Device[]> {\n    return new Promise<Device[]>((resolve, reject) => {\n      navigator.mediaDevices.enumerateDevices().then((deviceInfos) => {\n        const devices: Device[] = [];\n\n        // Ionic Android  devices\n        if (platform.isIonicAndroid() && typeof cordova != \"undefined\" && cordova?.plugins?.EnumerateDevicesPlugin) {\n          cordova.plugins.EnumerateDevicesPlugin.getEnumerateDevices().then((pluginDevices: Device[]) => {\n            let pluginAudioDevices: Device[] = [];\n            let videoDevices: Device[] = [];\n            let audioDevices: Device[] = [];\n            pluginAudioDevices = pluginDevices.filter((device: Device) => device.kind === 'audioinput');\n            videoDevices = deviceInfos.filter((device: Device) => device.kind === 'videoinput');\n            audioDevices = deviceInfos.filter((device: Device) => device.kind === 'audioinput');\n            videoDevices.forEach((deviceInfo, index) => {\n              if (!deviceInfo.label) {\n                let label = \"\";\n                if (index === 0) {\n                  label = \"Front Camera\";\n                } else if (index === 1) {\n                  label = \"Back Camera\";\n                } else {\n                  label = \"Unknown Camera\";\n                }\n                devices.push({\n                  kind: deviceInfo.kind,\n                  deviceId: deviceInfo.deviceId,\n                  label: label\n                });\n\n              } else {\n                devices.push({\n                  kind: deviceInfo.kind,\n                  deviceId: deviceInfo.deviceId,\n                  label: deviceInfo.label\n                });\n              }\n            });\n            audioDevices.forEach((deviceInfo, index) => {\n              if (!deviceInfo.label) {\n                let label = \"\";\n                switch (index) {\n                  case 0: // Default Microphone\n                    label = 'Default';\n                    break;\n                  case 1: // Microphone + Speakerphone\n                    const defaultMatch = pluginAudioDevices.filter((d) => d.label.includes('Built'))[0];\n                    label = defaultMatch ? defaultMatch.label : 'Built-in Microphone';\n                    break;\n                  case 2: // Headset Microphone\n                    const wiredMatch = pluginAudioDevices.filter((d) => d.label.includes('Wired'))[0];\n                    if (wiredMatch) {\n                      label = wiredMatch.label;\n                    } else {\n                      label = 'Headset earpiece';\n                    }\n                    break;\n                  case 3:\n                    const wirelessMatch = pluginAudioDevices.filter((d) => d.label.includes('Bluetooth'))[0];\n                    label = wirelessMatch ? wirelessMatch.label : 'Wireless';\n                    break;\n                  default:\n                    label = \"Unknown Microphone\";\n                    break;\n                }\n                devices.push({\n                  kind: deviceInfo.kind,\n                  deviceId: deviceInfo.deviceId,\n                  label: label\n                });\n\n              } else {\n                devices.push({\n                  kind: deviceInfo.kind,\n                  deviceId: deviceInfo.deviceId,\n                  label: deviceInfo.label\n                });\n              }\n            });\n            resolve(devices);\n          });\n        } else {\n\n          // Rest of platforms\n          deviceInfos.forEach(deviceInfo => {\n            if (deviceInfo.kind === 'audioinput' || deviceInfo.kind === 'videoinput') {\n              devices.push({\n                kind: deviceInfo.kind,\n                deviceId: deviceInfo.deviceId,\n                label: deviceInfo.label\n              });\n            }\n          });\n          resolve(devices);\n        }\n      }).catch((error) => {\n        logger.error('Error getting devices', error);\n        reject(error);\n      });\n    });\n  }\n\n\n\n  /**\n   * Get a MediaStream object that you can customize before calling [[initPublisher]] (pass _MediaStreamTrack_ property of the _MediaStream_ value resolved by the Promise as `audioSource` or `videoSource` properties in [[initPublisher]])\n   *\n   * Parameter `options` is the same as in [[initPublisher]] second parameter (of type [[PublisherProperties]]), but only the following properties will be applied: `audioSource`, `videoSource`, `frameRate`, `resolution`\n   *\n   * To customize the Publisher's video, the API for HTMLCanvasElement is very useful. For example, to get a black-and-white video at 10 fps and HD resolution with no sound:\n   * ```\n   * var OV = new OpenVidu();\n   * var FRAME_RATE = 10;\n   *\n   * OV.getUserMedia({\n   *    audioSource: false,\n   *    videoSource: undefined,\n   *    resolution: '1280x720',\n   *    frameRate: FRAME_RATE\n   * })\n   * .then(mediaStream => {\n   *\n   *    var videoTrack = mediaStream.getVideoTracks()[0];\n   *    var video = document.createElement('video');\n   *    video.srcObject = new MediaStream([videoTrack]);\n   *\n   *    var canvas = document.createElement('canvas');\n   *    var ctx = canvas.getContext('2d');\n   *    ctx.filter = 'grayscale(100%)';\n   *\n   *    video.addEventListener('play', () => {\n   *      var loop = () => {\n   *        if (!video.paused && !video.ended) {\n   *          ctx.drawImage(video, 0, 0, 300, 170);\n   *          setTimeout(loop, 1000/ FRAME_RATE); // Drawing at 10 fps\n   *        }\n   *      };\n   *      loop();\n   *    });\n   *    video.play();\n   *\n   *    var grayVideoTrack = canvas.captureStream(FRAME_RATE).getVideoTracks()[0];\n   *    var publisher = this.OV.initPublisher(\n   *      myHtmlTarget,\n   *      {\n   *        audioSource: false,\n   *        videoSource: grayVideoTrack\n   *      });\n   * });\n   * ```\n   */\n  getUserMedia(options: PublisherProperties): Promise<MediaStream> {\n    return new Promise<MediaStream>((resolve, reject) => {\n\n      const askForAudioStreamOnly = (previousMediaStream: MediaStream, constraints: MediaStreamConstraints) => {\n        const definedAudioConstraint = ((constraints.audio === undefined) ? true : constraints.audio);\n        const constraintsAux: MediaStreamConstraints = { audio: definedAudioConstraint, video: false };\n        navigator.mediaDevices.getUserMedia(constraintsAux)\n          .then(audioOnlyStream => {\n            previousMediaStream.addTrack(audioOnlyStream.getAudioTracks()[0]);\n            resolve(previousMediaStream);\n          })\n          .catch(error => {\n            previousMediaStream.getAudioTracks().forEach((track) => {\n              track.stop();\n            });\n            previousMediaStream.getVideoTracks().forEach((track) => {\n              track.stop();\n            });\n            reject(this.generateAudioDeviceError(error, constraintsAux));\n          });\n      }\n\n      this.generateMediaConstraints(options).then(myConstraints => {\n\n        if (!!myConstraints.videoTrack && !!myConstraints.audioTrack ||\n          !!myConstraints.audioTrack && myConstraints.constraints?.video === false ||\n          !!myConstraints.videoTrack && myConstraints.constraints?.audio === false) {\n\n          // No need to call getUserMedia at all. Both tracks provided, or only AUDIO track provided or only VIDEO track provided\n          resolve(this.addAlreadyProvidedTracks(myConstraints, new MediaStream()));\n\n        } else {\n          // getUserMedia must be called. AUDIO or VIDEO are requesting a new track\n\n          // Delete already provided constraints for audio or video\n          if (!!myConstraints.videoTrack) {\n            delete myConstraints.constraints!.video;\n          }\n          if (!!myConstraints.audioTrack) {\n            delete myConstraints.constraints!.audio;\n          }\n\n          let mustAskForAudioTrackLater = false;\n          if (typeof options.videoSource === 'string') {\n            // Video is deviceId or screen sharing\n            if (options.videoSource === 'screen' ||\n              options.videoSource === 'window' ||\n              (platform.isElectron() && options.videoSource.startsWith('screen:'))) {\n              // Video is screen sharing\n              mustAskForAudioTrackLater = !myConstraints.audioTrack && (options.audioSource !== null && options.audioSource !== false);\n              if (navigator.mediaDevices['getDisplayMedia'] && !platform.isElectron()) {\n                // getDisplayMedia supported\n                navigator.mediaDevices['getDisplayMedia']({ video: true })\n                  .then(mediaStream => {\n                    this.addAlreadyProvidedTracks(myConstraints, mediaStream);\n                    if (mustAskForAudioTrackLater) {\n                      askForAudioStreamOnly(mediaStream, <MediaStreamConstraints>myConstraints.constraints);\n                      return;\n                    } else {\n                      resolve(mediaStream);\n                    }\n                  })\n                  .catch(error => {\n                    let errorName: OpenViduErrorName = OpenViduErrorName.SCREEN_CAPTURE_DENIED;\n                    const errorMessage = error.toString();\n                    reject(new OpenViduError(errorName, errorMessage));\n                  });\n                return;\n              } else {\n                // getDisplayMedia NOT supported. Can perform getUserMedia below with already calculated constraints\n              }\n            } else {\n              // Video is deviceId. Can perform getUserMedia below with already calculated constraints\n            }\n          }\n          // Use already calculated constraints\n          const constraintsAux = mustAskForAudioTrackLater ? { video: myConstraints.constraints!.video } : myConstraints.constraints;\n          navigator.mediaDevices.getUserMedia(constraintsAux)\n            .then(mediaStream => {\n              this.addAlreadyProvidedTracks(myConstraints, mediaStream);\n              if (mustAskForAudioTrackLater) {\n                askForAudioStreamOnly(mediaStream, <MediaStreamConstraints>myConstraints.constraints);\n                return;\n              } else {\n                resolve(mediaStream);\n              }\n            })\n            .catch(error => {\n              let errorName: OpenViduErrorName;\n              const errorMessage = error.toString();\n              if (!(options.videoSource === 'screen')) {\n                errorName = OpenViduErrorName.DEVICE_ACCESS_DENIED;\n              } else {\n                errorName = OpenViduErrorName.SCREEN_CAPTURE_DENIED;\n              }\n              reject(new OpenViduError(errorName, errorMessage));\n            });\n        }\n      }).catch((error: OpenViduError) => {\n        reject(error);\n      });\n    });\n  }\n\n\n  /* tslint:disable:no-empty */\n  /**\n   * Disable all logging except error level\n   */\n  enableProdMode(): void {\n    logger.enableProdMode();\n  }\n  /* tslint:enable:no-empty */\n\n\n  /**\n   * Set OpenVidu advanced configuration options. Currently `configuration` is an object with the following optional properties (see [[OpenViduAdvancedConfiguration]] for more details):\n   * - `iceServers`: set custom STUN/TURN servers to be used by OpenVidu Browser\n   * - `screenShareChromeExtension`: url to a custom screen share extension for Chrome to be used instead of the default one, based on ours [https://github.com/OpenVidu/openvidu-screen-sharing-chrome-extension](https://github.com/OpenVidu/openvidu-screen-sharing-chrome-extension)\n   * - `publisherSpeakingEventsOptions`: custom configuration for the [[PublisherSpeakingEvent]] feature and the [StreamManagerEvent.streamAudioVolumeChange](/en/stable/api/openvidu-browser/classes/streammanagerevent.html) feature\n   * - `forceMediaReconnectionAfterNetworkDrop`: always force WebRTC renegotiation of all the streams of a client after a network loss and reconnection. This can help reducing frozen videos in low quality networks.\n   *\n   * Call this method to override previous values at any moment.\n   */\n  setAdvancedConfiguration(configuration: OpenViduAdvancedConfiguration): void {\n    this.advancedConfiguration = configuration;\n  }\n\n\n  /* Hidden methods */\n\n  /**\n   * @hidden\n   */\n  generateMediaConstraints(publisherProperties: PublisherProperties): Promise<CustomMediaStreamConstraints> {\n    return new Promise<CustomMediaStreamConstraints>((resolve, reject) => {\n\n      const myConstraints: CustomMediaStreamConstraints = {\n        audioTrack: undefined,\n        videoTrack: undefined,\n        constraints: {\n          audio: undefined,\n          video: undefined\n        }\n      }\n      const audioSource = publisherProperties.audioSource;\n      const videoSource = publisherProperties.videoSource;\n\n      // CASE 1: null/false\n      if (audioSource === null || audioSource === false) {\n        // No audio track\n        myConstraints.constraints!.audio = false;\n      }\n      if (videoSource === null || videoSource === false) {\n        // No video track\n        myConstraints.constraints!.video = false;\n      }\n      if (myConstraints.constraints!.audio === false && myConstraints.constraints!.video === false) {\n        // ERROR! audioSource and videoSource cannot be both false at the same time\n        reject(new OpenViduError(OpenViduErrorName.NO_INPUT_SOURCE_SET,\n          \"Properties 'audioSource' and 'videoSource' cannot be set to false or null at the same time\"));\n      }\n\n      // CASE 2: MediaStreamTracks\n      if (typeof MediaStreamTrack !== 'undefined' && audioSource instanceof MediaStreamTrack) {\n        // Already provided audio track\n        myConstraints.audioTrack = audioSource;\n      }\n      if (typeof MediaStreamTrack !== 'undefined' && videoSource instanceof MediaStreamTrack) {\n        // Already provided video track\n        myConstraints.videoTrack = videoSource;\n      }\n\n      // CASE 3: Default tracks\n      if (audioSource === undefined) {\n        myConstraints.constraints!.audio = true;\n      }\n      if (videoSource === undefined) {\n        myConstraints.constraints!.video = {\n          width: {\n            ideal: 640\n          },\n          height: {\n            ideal: 480\n          }\n        };\n      }\n\n      // CASE 3.5: give values to resolution and frameRate if video not null/false\n      if (videoSource !== null && videoSource !== false) {\n        if (!!publisherProperties.resolution) {\n          const widthAndHeight = publisherProperties.resolution.toLowerCase().split('x');\n          const idealWidth = Number(widthAndHeight[0]);\n          const idealHeight = Number(widthAndHeight[1]);\n          myConstraints.constraints!.video = {\n            width: {\n              ideal: idealWidth\n            },\n            height: {\n              ideal: idealHeight\n            }\n          }\n        }\n        if (!!publisherProperties.frameRate) {\n          (<MediaTrackConstraints>myConstraints.constraints!.video).frameRate = { ideal: publisherProperties.frameRate };\n        }\n      }\n\n      // CASE 4: deviceId or screen sharing\n      this.configureDeviceIdOrScreensharing(myConstraints, publisherProperties, resolve, reject);\n\n      resolve(myConstraints);\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  startWs(onConnectSucces: (error: Error) => void): void {\n    const config = {\n      heartbeat: 5000,\n      ws: {\n        uri: this.wsUri + '?sessionId=' + this.session.sessionId,\n        onconnected: onConnectSucces,\n        ondisconnect: this.disconnectCallback.bind(this),\n        onreconnecting: this.reconnectingCallback.bind(this),\n        onreconnected: this.reconnectedCallback.bind(this)\n      },\n      rpc: {\n        requestTimeout: 10000,\n        participantJoined: this.session.onParticipantJoined.bind(this.session),\n        participantPublished: this.session.onParticipantPublished.bind(this.session),\n        participantUnpublished: this.session.onParticipantUnpublished.bind(this.session),\n        participantLeft: this.session.onParticipantLeft.bind(this.session),\n        participantEvicted: this.session.onParticipantEvicted.bind(this.session),\n        recordingStarted: this.session.onRecordingStarted.bind(this.session),\n        recordingStopped: this.session.onRecordingStopped.bind(this.session),\n        sendMessage: this.session.onNewMessage.bind(this.session),\n        streamPropertyChanged: this.session.onStreamPropertyChanged.bind(this.session),\n        connectionPropertyChanged: this.session.onConnectionPropertyChanged.bind(this.session),\n        networkQualityLevelChanged: this.session.onNetworkQualityLevelChangedChanged.bind(this.session),\n        filterEventDispatched: this.session.onFilterEventDispatched.bind(this.session),\n        iceCandidate: this.session.recvIceCandidate.bind(this.session),\n        mediaError: this.session.onMediaError.bind(this.session)\n      }\n    };\n    this.jsonRpcClient = new RpcBuilder.clients.JsonRpcClient(config);\n  }\n\n  /**\n   * @hidden\n   */\n  closeWs(): void {\n    this.jsonRpcClient.close(4102, \"Connection closed by client\");\n  }\n\n  /**\n   * @hidden\n   */\n  sendRequest(method: string, params: any, callback?): void {\n    if (params && params instanceof Function) {\n      callback = params;\n      params = {};\n    }\n    logger.debug('Sending request: {method:\"' + method + '\", params: ' + JSON.stringify(params) + '}');\n    this.jsonRpcClient.send(method, params, callback);\n  }\n\n  /**\n   * @hidden\n   */\n  getWsUri(): string {\n    return this.wsUri;\n  }\n\n  /**\n   * @hidden\n   */\n  getSecret(): string {\n    return this.secret;\n  }\n\n  /**\n   * @hidden\n   */\n  getRecorder(): boolean {\n    return this.recorder;\n  }\n\n  /**\n   * @hidden\n   */\n  generateAudioDeviceError(error, constraints: MediaStreamConstraints): OpenViduError {\n    if (error.name === 'Error') {\n      // Safari OverConstrainedError has as name property 'Error' instead of 'OverConstrainedError'\n      error.name = error.constructor.name;\n    }\n    let errorName, errorMessage: string;\n    switch (error.name.toLowerCase()) {\n      case 'notfounderror':\n        errorName = OpenViduErrorName.INPUT_AUDIO_DEVICE_NOT_FOUND;\n        errorMessage = error.toString();\n        return new OpenViduError(errorName, errorMessage);\n      case 'notallowederror':\n        errorName = OpenViduErrorName.DEVICE_ACCESS_DENIED;\n        errorMessage = error.toString();\n        return new OpenViduError(errorName, errorMessage);\n      case 'overconstrainederror':\n        if (error.constraint.toLowerCase() === 'deviceid') {\n          errorName = OpenViduErrorName.INPUT_AUDIO_DEVICE_NOT_FOUND;\n          errorMessage = \"Audio input device with deviceId '\" + (<ConstrainDOMStringParameters>(<MediaTrackConstraints>constraints.audio).deviceId!!).exact + \"' not found\";\n        } else {\n          errorName = OpenViduErrorName.PUBLISHER_PROPERTIES_ERROR;\n          errorMessage = \"Audio input device doesn't support the value passed for constraint '\" + error.constraint + \"'\";\n        }\n        return new OpenViduError(errorName, errorMessage);\n      case 'notreadableerror':\n        errorName = OpenViduErrorName.DEVICE_ALREADY_IN_USE;\n        errorMessage = error.toString();\n        return (new OpenViduError(errorName, errorMessage));\n      default:\n        return new OpenViduError(OpenViduErrorName.INPUT_AUDIO_DEVICE_GENERIC_ERROR, error.toString());\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  addAlreadyProvidedTracks(myConstraints: CustomMediaStreamConstraints, mediaStream: MediaStream) {\n    if (!!myConstraints.videoTrack) {\n      mediaStream.addTrack(myConstraints.videoTrack);\n    }\n    if (!!myConstraints.audioTrack) {\n      mediaStream.addTrack(myConstraints.audioTrack);\n    }\n    return mediaStream;\n  }\n\n  /**\n   * @hidden\n   */\n  protected configureDeviceIdOrScreensharing(myConstraints: CustomMediaStreamConstraints, publisherProperties: PublisherProperties, resolve, reject) {\n    const audioSource = publisherProperties.audioSource;\n    const videoSource = publisherProperties.videoSource;\n    if (typeof audioSource === 'string') {\n      myConstraints.constraints!.audio = { deviceId: { exact: audioSource } };\n    }\n\n    if (typeof videoSource === 'string') {\n\n      if (!this.isScreenShare(videoSource)) {\n        this.setVideoSource(myConstraints, videoSource);\n\n      } else {\n\n        // Screen sharing\n\n        if (!this.checkScreenSharingCapabilities()) {\n          const error = new OpenViduError(OpenViduErrorName.SCREEN_SHARING_NOT_SUPPORTED, 'You can only screen share in desktop Chrome, Firefox, Opera, Safari (>=13.0), Edge (>= 80) or Electron. Detected client: ' + platform.getName() + ' ' + platform.getVersion());\n          logger.error(error);\n          reject(error);\n        } else {\n\n          if (platform.isElectron()) {\n            const prefix = \"screen:\";\n            const videoSourceString: string = videoSource;\n            const electronScreenId = videoSourceString.substr(videoSourceString.indexOf(prefix) + prefix.length);\n            (<any>myConstraints.constraints!.video) = {\n              mandatory: {\n                chromeMediaSource: 'desktop',\n                chromeMediaSourceId: electronScreenId\n              }\n            };\n            resolve(myConstraints);\n\n          } else {\n\n            if (!!this.advancedConfiguration.screenShareChromeExtension && !(platform.isFirefoxBrowser() || platform.isFirefoxMobileBrowser()) && !navigator.mediaDevices['getDisplayMedia']) {\n\n              // Custom screen sharing extension for Chrome (and Opera) and no support for MediaDevices.getDisplayMedia()\n\n              screenSharing.getScreenConstraints((error, screenConstraints) => {\n                if (!!error || !!screenConstraints.mandatory && screenConstraints.mandatory.chromeMediaSource === 'screen') {\n                  if (error === 'permission-denied' || error === 'PermissionDeniedError') {\n                    const error = new OpenViduError(OpenViduErrorName.SCREEN_CAPTURE_DENIED, 'You must allow access to one window of your desktop');\n                    logger.error(error);\n                    reject(error);\n                  } else {\n                    const extensionId = this.advancedConfiguration.screenShareChromeExtension!.split('/').pop()!!.trim();\n                    screenSharing.getChromeExtensionStatus(extensionId, status => {\n                      if (status === 'installed-disabled') {\n                        const error = new OpenViduError(OpenViduErrorName.SCREEN_EXTENSION_DISABLED, 'You must enable the screen extension');\n                        logger.error(error);\n                        reject(error);\n                      }\n                      if (status === 'not-installed') {\n                        const error = new OpenViduError(OpenViduErrorName.SCREEN_EXTENSION_NOT_INSTALLED, (<string>this.advancedConfiguration.screenShareChromeExtension));\n                        logger.error(error);\n                        reject(error);\n                      }\n                    });\n                    return;\n                  }\n                } else {\n                  myConstraints.constraints!.video = screenConstraints;\n                  resolve(myConstraints);\n                }\n              });\n              return;\n            } else {\n\n              if (navigator.mediaDevices['getDisplayMedia']) {\n                // getDisplayMedia support (Chrome >= 72, Firefox >= 66, Safari >= 13)\n                resolve(myConstraints);\n              } else {\n                // Default screen sharing extension for Chrome/Opera, or is Firefox < 66\n                const firefoxString = (platform.isFirefoxBrowser() || platform.isFirefoxMobileBrowser()) ? publisherProperties.videoSource : undefined;\n\n                screenSharingAuto.getScreenId(firefoxString, (error, sourceId, screenConstraints) => {\n                  if (!!error) {\n                    if (error === 'not-installed') {\n                      const extensionUrl = !!this.advancedConfiguration.screenShareChromeExtension ? this.advancedConfiguration.screenShareChromeExtension :\n                        'https://chrome.google.com/webstore/detail/openvidu-screensharing/lfcgfepafnobdloecchnfaclibenjold';\n                      const err = new OpenViduError(OpenViduErrorName.SCREEN_EXTENSION_NOT_INSTALLED, extensionUrl);\n                      logger.error(err);\n                      reject(err);\n                    } else if (error === 'installed-disabled') {\n                      const err = new OpenViduError(OpenViduErrorName.SCREEN_EXTENSION_DISABLED, 'You must enable the screen extension');\n                      logger.error(err);\n                      reject(err);\n                    } else if (error === 'permission-denied') {\n                      const err = new OpenViduError(OpenViduErrorName.SCREEN_CAPTURE_DENIED, 'You must allow access to one window of your desktop');\n                      logger.error(err);\n                      reject(err);\n                    } else {\n                      const err = new OpenViduError(OpenViduErrorName.GENERIC_ERROR, 'Unknown error when accessing screen share');\n                      logger.error(err);\n                      logger.error(error);\n                      reject(err);\n                    }\n                  } else {\n                    myConstraints.constraints!.video = screenConstraints.video;\n                    resolve(myConstraints);\n                  }\n                });\n                return;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  protected setVideoSource(myConstraints: CustomMediaStreamConstraints, videoSource: string) {\n    if (!myConstraints.constraints!.video) {\n      myConstraints.constraints!.video = {};\n    }\n    (<MediaTrackConstraints>myConstraints.constraints!.video)['deviceId'] = { exact: videoSource };\n  }\n\n\n  /* Private methods */\n\n  private disconnectCallback(): void {\n    logger.warn('Websocket connection lost');\n    if (this.isRoomAvailable()) {\n      this.session.onLostConnection('networkDisconnect');\n    } else {\n      alert('Connection error. Please reload page.');\n    }\n  }\n\n  private reconnectingCallback(): void {\n    logger.warn('Websocket connection lost (reconnecting)');\n    if (!this.isRoomAvailable()) {\n      alert('Connection error. Please reload page.');\n    } else {\n      this.session.emitEvent('reconnecting', []);\n    }\n  }\n\n  private reconnectedCallback(): void {\n    logger.warn('Websocket reconnected');\n    if (this.isRoomAvailable()) {\n      if (!!this.session.connection) {\n        this.sendRequest('connect', { sessionId: this.session.connection.rpcSessionId }, (error, response) => {\n          if (!!error) {\n            logger.error(error);\n            logger.warn('Websocket was able to reconnect to OpenVidu Server, but your Connection was already destroyed due to timeout. You are no longer a participant of the Session and your media streams have been destroyed');\n            this.session.onLostConnection(\"networkDisconnect\");\n            this.jsonRpcClient.close(4101, \"Reconnection fault\");\n          } else {\n            this.jsonRpcClient.resetPing();\n            this.session.onRecoveredConnection();\n          }\n        });\n      } else {\n        logger.warn('There was no previous connection when running reconnection callback');\n        // Make Session object dispatch 'sessionDisconnected' event\n        const sessionDisconnectEvent = new SessionDisconnectedEvent(this.session, 'networkDisconnect');\n        this.session.ee.emitEvent('sessionDisconnected', [sessionDisconnectEvent]);\n        sessionDisconnectEvent.callDefaultBehavior();\n      }\n    } else {\n      alert('Connection error. Please reload page.');\n    }\n  }\n\n  private isRoomAvailable(): boolean {\n    if (this.session !== undefined && this.session instanceof Session) {\n      return true;\n    } else {\n      logger.warn('Session instance not found');\n      return false;\n    }\n  }\n\n  private isScreenShare(videoSource: string) {\n    return videoSource === 'screen' ||\n      videoSource === 'window' ||\n      (platform.isElectron() && videoSource.startsWith('screen:'))\n  }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { OpenVidu } from './OpenVidu';\nimport { Session } from './Session';\nimport { Stream } from './Stream';\nimport { StreamManager } from './StreamManager';\nimport { EventDispatcher } from './EventDispatcher';\nimport { PublisherProperties } from '../OpenViduInternal/Interfaces/Public/PublisherProperties';\nimport { Event } from '../OpenViduInternal/Events/Event';\nimport { StreamEvent } from '../OpenViduInternal/Events/StreamEvent';\nimport { StreamPropertyChangedEvent } from '../OpenViduInternal/Events/StreamPropertyChangedEvent';\nimport { VideoElementEvent } from '../OpenViduInternal/Events/VideoElementEvent';\nimport { OpenViduError, OpenViduErrorName } from '../OpenViduInternal/Enums/OpenViduError';\nimport { VideoInsertMode } from '../OpenViduInternal/Enums/VideoInsertMode';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\nimport { PlatformUtils } from '../OpenViduInternal/Utils/Platform';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\n/**\n * Packs local media streams. Participants can publish it to a session. Initialized with [[OpenVidu.initPublisher]] method\n *\n * ### Available event listeners (and events dispatched)\n *\n * - accessAllowed\n * - accessDenied\n * - accessDialogOpened\n * - accessDialogClosed\n * - streamCreated ([[StreamEvent]])\n * - streamDestroyed ([[StreamEvent]])\n * - streamPropertyChanged ([[StreamPropertyChangedEvent]])\n */\nexport class Publisher extends StreamManager {\n\n    /**\n     * Whether the Publisher has been granted access to the requested input devices or not\n     */\n    accessAllowed = false;\n\n    /**\n     * Whether you have called [[Publisher.subscribeToRemote]] with value `true` or `false` (*false* by default)\n     */\n    isSubscribedToRemote = false;\n\n    /**\n     * The [[Session]] to which the Publisher belongs\n     */\n    session: Session; // Initialized by Session.publish(Publisher)\n\n    private accessDenied = false;\n    protected properties: PublisherProperties;\n    private permissionDialogTimeout: NodeJS.Timer;\n\n    /**\n     * @hidden\n     */\n    openvidu: OpenVidu;\n    /**\n     * @hidden\n     */\n    videoReference: HTMLVideoElement;\n    /**\n     * @hidden\n     */\n    screenShareResizeInterval: NodeJS.Timer;\n    /**\n     * @hidden\n     */\n    IEAdapter: any;\n\n    /**\n     * @hidden\n     */\n    constructor(targEl: string | HTMLElement, properties: PublisherProperties, openvidu: OpenVidu) {\n        super(new Stream((!!openvidu.session) ? openvidu.session : new Session(openvidu), { publisherProperties: properties, mediaConstraints: {} }), targEl);\n        platform = PlatformUtils.getInstance();\n        this.properties = properties;\n        this.openvidu = openvidu;\n\n        this.stream.ee.on('local-stream-destroyed', (reason: string) => {\n            this.stream.isLocalStreamPublished = false;\n            const streamEvent = new StreamEvent(true, this, 'streamDestroyed', this.stream, reason);\n            this.emitEvent('streamDestroyed', [streamEvent]);\n            streamEvent.callDefaultBehavior();\n        });\n    }\n\n\n    /**\n     * Publish or unpublish the audio stream (if available). Calling this method twice in a row passing same value will have no effect\n     *\n     * #### Events dispatched\n     *\n     * > _Only if `Session.publish(Publisher)` has been called for this Publisher_\n     *\n     * The [[Session]] object of the local participant will dispatch a `streamPropertyChanged` event with `changedProperty` set to `\"audioActive\"` and `reason` set to `\"publishAudio\"`\n     * The [[Publisher]] object of the local participant will also dispatch the exact same event\n     *\n     * The [[Session]] object of every other participant connected to the session will dispatch a `streamPropertyChanged` event with `changedProperty` set to `\"audioActive\"` and `reason` set to `\"publishAudio\"`\n     * The respective [[Subscriber]] object of every other participant receiving this Publisher's stream will also dispatch the exact same event\n     *\n     * See [[StreamPropertyChangedEvent]] to learn more.\n     *\n     * @param value `true` to publish the audio stream, `false` to unpublish it\n     */\n    publishAudio(value: boolean): void {\n        if (this.stream.audioActive !== value) {\n            const affectedMediaStream: MediaStream = this.stream.displayMyRemote() ? this.stream.localMediaStreamWhenSubscribedToRemote! : this.stream.getMediaStream();\n            affectedMediaStream.getAudioTracks().forEach((track) => {\n                track.enabled = value;\n            });\n            if (!!this.session && !!this.stream.streamId) {\n                this.session.openvidu.sendRequest(\n                    'streamPropertyChanged',\n                    {\n                        streamId: this.stream.streamId,\n                        property: 'audioActive',\n                        newValue: value,\n                        reason: 'publishAudio'\n                    },\n                    (error, response) => {\n                        if (error) {\n                            logger.error(\"Error sending 'streamPropertyChanged' event\", error);\n                        } else {\n                            this.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent(this.session, this.stream, 'audioActive', value, !value, 'publishAudio')]);\n                            this.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent(this, this.stream, 'audioActive', value, !value, 'publishAudio')]);\n                            this.session.sendVideoData(this.stream.streamManager);\n                        }\n                    });\n            }\n            this.stream.audioActive = value;\n            logger.info(\"'Publisher' has \" + (value ? 'published' : 'unpublished') + ' its audio stream');\n        }\n    }\n\n\n    /**\n     * Publish or unpublish the video stream (if available). Calling this method twice in a row passing same value will have no effect\n     *\n     * #### Events dispatched\n     *\n     * > _Only if `Session.publish(Publisher)` has been called for this Publisher_\n     *\n     * The [[Session]] object of the local participant will dispatch a `streamPropertyChanged` event with `changedProperty` set to `\"videoActive\"` and `reason` set to `\"publishVideo\"`\n     * The [[Publisher]] object of the local participant will also dispatch the exact same event\n     *\n     * The [[Session]] object of every other participant connected to the session will dispatch a `streamPropertyChanged` event with `changedProperty` set to `\"videoActive\"` and `reason` set to `\"publishVideo\"`\n     * The respective [[Subscriber]] object of every other participant receiving this Publisher's stream will also dispatch the exact same event\n     *\n     * See [[StreamPropertyChangedEvent]] to learn more.\n     *\n     * @param value `true` to publish the video stream, `false` to unpublish it\n     */\n    publishVideo(value: boolean): void {\n        if (this.stream.videoActive !== value) {\n            const affectedMediaStream: MediaStream = this.stream.displayMyRemote() ? this.stream.localMediaStreamWhenSubscribedToRemote! : this.stream.getMediaStream();\n            affectedMediaStream.getVideoTracks().forEach((track) => {\n                track.enabled = value;\n            });\n            if (!!this.session && !!this.stream.streamId) {\n                this.session.openvidu.sendRequest(\n                    'streamPropertyChanged',\n                    {\n                        streamId: this.stream.streamId,\n                        property: 'videoActive',\n                        newValue: value,\n                        reason: 'publishVideo'\n                    },\n                    (error, response) => {\n                        if (error) {\n                            logger.error(\"Error sending 'streamPropertyChanged' event\", error);\n                        } else {\n                            this.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent(this.session, this.stream, 'videoActive', value, !value, 'publishVideo')]);\n                            this.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent(this, this.stream, 'videoActive', value, !value, 'publishVideo')]);\n                            this.session.sendVideoData(this.stream.streamManager);\n                        }\n                    });\n            }\n            this.stream.videoActive = value;\n            logger.info(\"'Publisher' has \" + (value ? 'published' : 'unpublished') + ' its video stream');\n        }\n    }\n\n\n    /**\n     * Call this method before [[Session.publish]] if you prefer to subscribe to your Publisher's remote stream instead of using the local stream, as any other user would do.\n     */\n    subscribeToRemote(value?: boolean): void {\n        value = (value !== undefined) ? value : true;\n        this.isSubscribedToRemote = value;\n        this.stream.subscribeToMyRemote(value);\n    }\n\n\n    /**\n     * See [[EventDispatcher.on]]\n     */\n    on(type: string, handler: (event: Event) => void): EventDispatcher {\n        super.on(type, handler);\n        if (type === 'streamCreated') {\n            if (!!this.stream && this.stream.isLocalStreamPublished) {\n                this.emitEvent('streamCreated', [new StreamEvent(false, this, 'streamCreated', this.stream, '')]);\n            } else {\n                this.stream.ee.on('stream-created-by-publisher', () => {\n                    this.emitEvent('streamCreated', [new StreamEvent(false, this, 'streamCreated', this.stream, '')]);\n                });\n            }\n        }\n        if (type === 'remoteVideoPlaying') {\n            if (this.stream.displayMyRemote() && this.videos[0] && this.videos[0].video &&\n                this.videos[0].video.currentTime > 0 &&\n                this.videos[0].video.paused === false &&\n                this.videos[0].video.ended === false &&\n                this.videos[0].video.readyState === 4) {\n                this.emitEvent('remoteVideoPlaying', [new VideoElementEvent(this.videos[0].video, this, 'remoteVideoPlaying')]);\n            }\n        }\n        if (type === 'accessAllowed') {\n            if (this.accessAllowed) {\n                this.emitEvent('accessAllowed', []);\n            }\n        }\n        if (type === 'accessDenied') {\n            if (this.accessDenied) {\n                this.emitEvent('accessDenied', []);\n            }\n        }\n        return this;\n    }\n\n\n    /**\n     * See [[EventDispatcher.once]]\n     */\n    once(type: string, handler: (event: Event) => void): Publisher {\n        super.once(type, handler);\n        if (type === 'streamCreated') {\n            if (!!this.stream && this.stream.isLocalStreamPublished) {\n                this.emitEvent('streamCreated', [new StreamEvent(false, this, 'streamCreated', this.stream, '')]);\n            } else {\n                this.stream.ee.once('stream-created-by-publisher', () => {\n                    this.emitEvent('streamCreated', [new StreamEvent(false, this, 'streamCreated', this.stream, '')]);\n                });\n            }\n        }\n        if (type === 'remoteVideoPlaying') {\n            if (this.stream.displayMyRemote() && this.videos[0] && this.videos[0].video &&\n                this.videos[0].video.currentTime > 0 &&\n                this.videos[0].video.paused === false &&\n                this.videos[0].video.ended === false &&\n                this.videos[0].video.readyState === 4) {\n                this.emitEvent('remoteVideoPlaying', [new VideoElementEvent(this.videos[0].video, this, 'remoteVideoPlaying')]);\n            }\n        }\n        if (type === 'accessAllowed') {\n            if (this.accessAllowed) {\n                this.emitEvent('accessAllowed', []);\n            }\n        }\n        if (type === 'accessDenied') {\n            if (this.accessDenied) {\n                this.emitEvent('accessDenied', []);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Replaces the current video or audio track with a different one. This allows you to replace an ongoing track with a different one\n     * without having to renegotiate the whole WebRTC connection (that is, initializing a new Publisher, unpublishing the previous one\n     * and publishing the new one).\n     *\n     * You can get this new MediaStreamTrack by using the native Web API or simply with [[OpenVidu.getUserMedia]] method.\n     *\n     * **WARNING: this method has been proven to work, but there may be some combinations of published/replaced tracks that may be incompatible between them and break the connection in OpenVidu Server. A complete renegotiation may be the only solution in this case**\n     *\n     * @param track The [MediaStreamTrack](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack) object to replace the current one. If it is an audio track, the current audio track will be the replaced one. If it\n     * is a video track, the current video track will be the replaced one.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the track was successfully replaced and rejected with an Error object in other case\n     */\n    replaceTrack(track: MediaStreamTrack): Promise<any> {\n\n        const replaceMediaStreamTrack = () => {\n            const mediaStream: MediaStream = this.stream.displayMyRemote() ? this.stream.localMediaStreamWhenSubscribedToRemote! : this.stream.getMediaStream();\n            let removedTrack: MediaStreamTrack;\n            if (track.kind === 'video') {\n                removedTrack = mediaStream.getVideoTracks()[0];\n            } else {\n                removedTrack = mediaStream.getAudioTracks()[0];\n            }\n            mediaStream.removeTrack(removedTrack);\n            removedTrack.stop();\n            mediaStream.addTrack(track);\n            this.session.sendVideoData(this.stream.streamManager, 5, true, 5);\n        }\n\n        return new Promise((resolve, reject) => {\n            if (this.stream.isLocalStreamPublished) {\n                // Only if the Publisher has been published is necessary to call native Web API RTCRtpSender.replaceTrack\n                const senders: RTCRtpSender[] = this.stream.getRTCPeerConnection().getSenders();\n                let sender: RTCRtpSender | undefined;\n                if (track.kind === 'video') {\n                    sender = senders.find(s => !!s.track && s.track.kind === 'video');\n                    if (!sender) {\n                        reject(new Error('There\\'s no replaceable track for that kind of MediaStreamTrack in this Publisher object'))\n                    }\n                } else if (track.kind === 'audio') {\n                    sender = senders.find(s => !!s.track && s.track.kind === 'audio');\n                    if (!sender) {\n                        reject(new Error('There\\'s no replaceable track for that kind of MediaStreamTrack in this Publisher object'))\n                    }\n                } else {\n                    reject(new Error('Unknown track kind ' + track.kind));\n                }\n                (<any>sender).replaceTrack(track).then(() => {\n                    replaceMediaStreamTrack();\n                    resolve();\n                }).catch(error => {\n                    reject(error);\n                });\n            } else {\n                // Publisher not published. Simply modify local MediaStream tracks\n                replaceMediaStreamTrack();\n                resolve();\n            }\n        });\n    }\n\n    /* Hidden methods */\n\n    /**\n     * @hidden\n     */\n    initialize(): Promise<any> {\n        return new Promise((resolve, reject) => {\n\n            let constraints: MediaStreamConstraints = {};\n            let constraintsAux: MediaStreamConstraints = {};\n            const timeForDialogEvent = 1250;\n            let startTime;\n\n            const errorCallback = (openViduError: OpenViduError) => {\n                this.accessDenied = true;\n                this.accessAllowed = false;\n                reject(openViduError);\n            };\n\n            const successCallback = (mediaStream: MediaStream) => {\n                this.accessAllowed = true;\n                this.accessDenied = false;\n\n                if (typeof MediaStreamTrack !== 'undefined' && this.properties.audioSource instanceof MediaStreamTrack) {\n                    mediaStream.removeTrack(mediaStream.getAudioTracks()[0]);\n                    mediaStream.addTrack((<MediaStreamTrack>this.properties.audioSource));\n                }\n\n                if (typeof MediaStreamTrack !== 'undefined' && this.properties.videoSource instanceof MediaStreamTrack) {\n                    mediaStream.removeTrack(mediaStream.getVideoTracks()[0]);\n                    mediaStream.addTrack((<MediaStreamTrack>this.properties.videoSource));\n                }\n\n                // Apply PublisherProperties.publishAudio and PublisherProperties.publishVideo\n                if (!!mediaStream.getAudioTracks()[0]) {\n                    const enabled = (this.stream.audioActive !== undefined && this.stream.audioActive !== null) ? this.stream.audioActive : !!this.stream.outboundStreamOpts.publisherProperties.publishAudio;\n                    mediaStream.getAudioTracks()[0].enabled = enabled;\n                }\n                if (!!mediaStream.getVideoTracks()[0]) {\n                    const enabled = (this.stream.videoActive !== undefined && this.stream.videoActive !== null) ? this.stream.videoActive : !!this.stream.outboundStreamOpts.publisherProperties.publishVideo;\n                    mediaStream.getVideoTracks()[0].enabled = enabled;\n                }\n\n                this.initializeVideoReference(mediaStream);\n\n                if (!this.stream.displayMyRemote()) {\n                    // When we are subscribed to our remote we don't still set the MediaStream object in the video elements to\n                    // avoid early 'streamPlaying' event\n                    this.stream.updateMediaStreamInVideos();\n                }\n                delete this.firstVideoElement;\n\n                if (this.stream.isSendVideo()) {\n                    if (!this.stream.isSendScreen()) {\n\n                        if (platform.isIonicIos() || platform.isSafariBrowser()) {\n                            // iOS Ionic or Safari. Limitation: cannot set videoDimensions directly, as the videoReference is not loaded\n                            // if not added to DOM. Must add it to DOM and wait for videoWidth and videoHeight properties to be defined\n\n                            this.videoReference.style.display = 'none';\n                            document.body.appendChild(this.videoReference);\n\n                            const videoDimensionsSet = () => {\n                                this.stream.videoDimensions = {\n                                    width: this.videoReference.videoWidth,\n                                    height: this.videoReference.videoHeight\n                                };\n                                this.stream.isLocalStreamReadyToPublish = true;\n                                this.stream.ee.emitEvent('stream-ready-to-publish', []);\n                                document.body.removeChild(this.videoReference);\n                            };\n\n                            let interval;\n                            this.videoReference.addEventListener('loadedmetadata', () => {\n                                if (this.videoReference.videoWidth === 0) {\n                                    interval = setInterval(() => {\n                                        if (this.videoReference.videoWidth !== 0) {\n                                            clearInterval(interval);\n                                            videoDimensionsSet();\n                                        }\n                                    }, 40);\n                                } else {\n                                    videoDimensionsSet();\n                                }\n                            });\n                        } else {\n                            // Rest of platforms\n                            // With no screen share, video dimension can be set directly from MediaStream (getSettings)\n                            // Orientation must be checked for mobile devices (width and height are reversed)\n                            const { width, height } = this.getVideoDimensions(mediaStream);\n\n                            if (platform.isMobileDevice() && (window.innerHeight > window.innerWidth)) {\n                                // Mobile portrait mode\n                                this.stream.videoDimensions = {\n                                    width: height || 0,\n                                    height: width || 0\n                                };\n                            } else {\n                                this.stream.videoDimensions = {\n                                    width: width || 0,\n                                    height: height || 0\n                                };\n                            }\n                            this.stream.isLocalStreamReadyToPublish = true;\n                            this.stream.ee.emitEvent('stream-ready-to-publish', []);\n                        }\n                    } else {\n                        // With screen share, video dimension must be got from a video element (onloadedmetadata event)\n                        this.videoReference.addEventListener('loadedmetadata', () => {\n                            this.stream.videoDimensions = {\n                                width: this.videoReference.videoWidth,\n                                height: this.videoReference.videoHeight\n                            };\n                            this.screenShareResizeInterval = setInterval(() => {\n                                const firefoxSettings = mediaStream.getVideoTracks()[0].getSettings();\n                                const newWidth = (platform.isChromeBrowser() || platform.isOperaBrowser()) ? this.videoReference.videoWidth : firefoxSettings.width;\n                                const newHeight = (platform.isChromeBrowser() || platform.isOperaBrowser()) ? this.videoReference.videoHeight : firefoxSettings.height;\n                                if (this.stream.isLocalStreamPublished &&\n                                    (newWidth !== this.stream.videoDimensions.width ||\n                                        newHeight !== this.stream.videoDimensions.height)) {\n                                    const oldValue = { width: this.stream.videoDimensions.width, height: this.stream.videoDimensions.height };\n                                    this.stream.videoDimensions = {\n                                        width: newWidth || 0,\n                                        height: newHeight || 0\n                                    };\n                                    this.session.openvidu.sendRequest(\n                                        'streamPropertyChanged',\n                                        {\n                                            streamId: this.stream.streamId,\n                                            property: 'videoDimensions',\n                                            newValue: JSON.stringify(this.stream.videoDimensions),\n                                            reason: 'screenResized'\n                                        },\n                                        (error, response) => {\n                                            if (error) {\n                                                logger.error(\"Error sending 'streamPropertyChanged' event\", error);\n                                            } else {\n                                                this.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent(this.session, this.stream, 'videoDimensions', this.stream.videoDimensions, oldValue, 'screenResized')]);\n                                                this.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent(this, this.stream, 'videoDimensions', this.stream.videoDimensions, oldValue, 'screenResized')]);\n                                                this.session.sendVideoData(this.stream.streamManager);\n                                            }\n                                        });\n                                }\n                            }, 500);\n                            this.stream.isLocalStreamReadyToPublish = true;\n                            this.stream.ee.emitEvent('stream-ready-to-publish', []);\n                        });\n                    }\n                } else {\n                    this.stream.isLocalStreamReadyToPublish = true;\n                    this.stream.ee.emitEvent('stream-ready-to-publish', []);\n                }\n                resolve();\n            };\n\n            const getMediaSuccess = (mediaStream: MediaStream, definedAudioConstraint) => {\n                this.clearPermissionDialogTimer(startTime, timeForDialogEvent);\n                if (this.stream.isSendScreen() && this.stream.isSendAudio()) {\n                    // When getting desktop as user media audio constraint must be false. Now we can ask for it if required\n                    constraintsAux.audio = definedAudioConstraint;\n                    constraintsAux.video = false;\n                    startTime = Date.now();\n                    this.setPermissionDialogTimer(timeForDialogEvent);\n\n                    navigator.mediaDevices.getUserMedia(constraintsAux)\n                        .then(audioOnlyStream => {\n                            this.clearPermissionDialogTimer(startTime, timeForDialogEvent);\n                            mediaStream.addTrack(audioOnlyStream.getAudioTracks()[0]);\n                            successCallback(mediaStream);\n                        })\n                        .catch(error => {\n                            this.clearPermissionDialogTimer(startTime, timeForDialogEvent);\n                            mediaStream.getAudioTracks().forEach((track) => {\n                                track.stop();\n                            });\n                            mediaStream.getVideoTracks().forEach((track) => {\n                                track.stop();\n                            });\n                            errorCallback(this.openvidu.generateAudioDeviceError(error, constraints));\n                            return;\n                        });\n                } else {\n                    successCallback(mediaStream);\n                }\n            };\n\n            const getMediaError = error => {\n                logger.error(error);\n                this.clearPermissionDialogTimer(startTime, timeForDialogEvent);\n                if (error.name === 'Error') {\n                    // Safari OverConstrainedError has as name property 'Error' instead of 'OverConstrainedError'\n                    error.name = error.constructor.name;\n                }\n                let errorName, errorMessage;\n                switch (error.name.toLowerCase()) {\n                    case 'notfounderror':\n                        navigator.mediaDevices.getUserMedia({\n                            audio: false,\n                            video: constraints.video\n                        })\n                            .then(mediaStream => {\n                                mediaStream.getVideoTracks().forEach((track) => {\n                                    track.stop();\n                                });\n                                errorName = OpenViduErrorName.INPUT_AUDIO_DEVICE_NOT_FOUND;\n                                errorMessage = error.toString();\n                                errorCallback(new OpenViduError(errorName, errorMessage));\n                            }).catch(e => {\n                                errorName = OpenViduErrorName.INPUT_VIDEO_DEVICE_NOT_FOUND;\n                                errorMessage = error.toString();\n                                errorCallback(new OpenViduError(errorName, errorMessage));\n                            });\n                        break;\n                    case 'notallowederror':\n                        errorName = this.stream.isSendScreen() ? OpenViduErrorName.SCREEN_CAPTURE_DENIED : OpenViduErrorName.DEVICE_ACCESS_DENIED;\n                        errorMessage = error.toString();\n                        errorCallback(new OpenViduError(errorName, errorMessage));\n                        break;\n                    case 'overconstrainederror':\n                        navigator.mediaDevices.getUserMedia({\n                            audio: false,\n                            video: constraints.video\n                        })\n                            .then(mediaStream => {\n                                mediaStream.getVideoTracks().forEach((track) => {\n                                    track.stop();\n                                });\n                                if (error.constraint.toLowerCase() === 'deviceid') {\n                                    errorName = OpenViduErrorName.INPUT_AUDIO_DEVICE_NOT_FOUND;\n                                    errorMessage = \"Audio input device with deviceId '\" + (<ConstrainDOMStringParameters>(<MediaTrackConstraints>constraints.audio).deviceId!!).exact + \"' not found\";\n                                } else {\n                                    errorName = OpenViduErrorName.PUBLISHER_PROPERTIES_ERROR;\n                                    errorMessage = \"Audio input device doesn't support the value passed for constraint '\" + error.constraint + \"'\";\n                                }\n                                errorCallback(new OpenViduError(errorName, errorMessage));\n                            }).catch(e => {\n                                if (error.constraint.toLowerCase() === 'deviceid') {\n                                    errorName = OpenViduErrorName.INPUT_VIDEO_DEVICE_NOT_FOUND;\n                                    errorMessage = \"Video input device with deviceId '\" + (<ConstrainDOMStringParameters>(<MediaTrackConstraints>constraints.video).deviceId!!).exact + \"' not found\";\n                                } else {\n                                    errorName = OpenViduErrorName.PUBLISHER_PROPERTIES_ERROR;\n                                    errorMessage = \"Video input device doesn't support the value passed for constraint '\" + error.constraint + \"'\";\n                                }\n                                errorCallback(new OpenViduError(errorName, errorMessage));\n                            });\n                        break;\n                    case 'aborterror':\n                    case 'notreadableerror':\n                        errorName = OpenViduErrorName.DEVICE_ALREADY_IN_USE;\n                        errorMessage = error.toString();\n                        errorCallback(new OpenViduError(errorName, errorMessage));\n                        break;\n                    default:\n                        errorName = OpenViduErrorName.GENERIC_ERROR;\n                        errorMessage = error.toString();\n                        errorCallback(new OpenViduError(errorName, errorMessage));\n                        break;\n                }\n            }\n\n            this.openvidu.generateMediaConstraints(this.properties)\n                .then(myConstraints => {\n\n                    if (!!myConstraints.videoTrack && !!myConstraints.audioTrack ||\n                        !!myConstraints.audioTrack && myConstraints.constraints?.video === false ||\n                        !!myConstraints.videoTrack && myConstraints.constraints?.audio === false) {\n                        // No need to call getUserMedia at all. MediaStreamTracks already provided\n                        successCallback(this.openvidu.addAlreadyProvidedTracks(myConstraints, new MediaStream()));\n                        // Return as we do not need to process further\n                        return;\n                    }\n\n                    constraints = myConstraints.constraints;\n\n                    const outboundStreamOptions = {\n                        mediaConstraints: constraints,\n                        publisherProperties: this.properties\n                    };\n                    this.stream.setOutboundStreamOptions(outboundStreamOptions);\n\n                    const definedAudioConstraint = ((constraints.audio === undefined) ? true : constraints.audio);\n                    constraintsAux.audio = this.stream.isSendScreen() ? false : definedAudioConstraint;\n                    constraintsAux.video = constraints.video;\n                    startTime = Date.now();\n                    this.setPermissionDialogTimer(timeForDialogEvent);\n\n                    if (this.stream.isSendScreen() && navigator.mediaDevices['getDisplayMedia'] && !platform.isElectron()) {\n                        navigator.mediaDevices['getDisplayMedia']({ video: true })\n                            .then(mediaStream => {\n                                this.openvidu.addAlreadyProvidedTracks(myConstraints, mediaStream);\n                                getMediaSuccess(mediaStream, definedAudioConstraint);\n                            })\n                            .catch(error => {\n                                getMediaError(error);\n                            });\n                    } else {\n                        navigator.mediaDevices.getUserMedia(constraintsAux)\n                            .then(mediaStream => {\n                                this.openvidu.addAlreadyProvidedTracks(myConstraints, mediaStream);\n                                getMediaSuccess(mediaStream, definedAudioConstraint);\n                            })\n                            .catch(error => {\n                                getMediaError(error);\n                            });\n                    }\n\n                })\n                .catch((error: OpenViduError) => {\n                    errorCallback(error);\n                });\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    getVideoDimensions(mediaStream: MediaStream): MediaTrackSettings {\n        return mediaStream.getVideoTracks()[0].getSettings();\n    }\n\n    /**\n     * @hidden\n     */\n    reestablishStreamPlayingEvent() {\n        if (this.ee.getListeners('streamPlaying').length > 0) {\n            this.addPlayEventToFirstVideo();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    initializeVideoReference(mediaStream: MediaStream) {\n        this.videoReference = document.createElement('video');\n\n        if (platform.isSafariBrowser()) {\n            this.videoReference.setAttribute('playsinline', 'true');\n        }\n\n        this.stream.setMediaStream(mediaStream);\n\n        if (!!this.firstVideoElement) {\n            this.createVideoElement(this.firstVideoElement.targetElement, <VideoInsertMode>this.properties.insertMode);\n        }\n\n        this.videoReference.srcObject = mediaStream;\n    }\n\n\n    /* Private methods */\n\n    private setPermissionDialogTimer(waitTime: number): void {\n        this.permissionDialogTimeout = setTimeout(() => {\n            this.emitEvent('accessDialogOpened', []);\n        }, waitTime);\n    }\n\n    private clearPermissionDialogTimer(startTime: number, waitTime: number): void {\n        clearTimeout(this.permissionDialogTimeout);\n        if ((Date.now() - startTime) > waitTime) {\n            // Permission dialog was shown and now is closed\n            this.emitEvent('accessDialogClosed', []);\n        }\n    }\n\n}\n","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Connection } from './Connection';\nimport { Filter } from './Filter';\nimport { OpenVidu } from './OpenVidu';\nimport { Publisher } from './Publisher';\nimport { Stream } from './Stream';\nimport { StreamManager } from './StreamManager';\nimport { Subscriber } from './Subscriber';\nimport { Capabilities } from '../OpenViduInternal/Interfaces/Public/Capabilities';\nimport { EventDispatcher } from './EventDispatcher';\nimport { SignalOptions } from '../OpenViduInternal/Interfaces/Public/SignalOptions';\nimport { SubscriberProperties } from '../OpenViduInternal/Interfaces/Public/SubscriberProperties';\nimport { RemoteConnectionOptions } from '../OpenViduInternal/Interfaces/Private/RemoteConnectionOptions';\nimport { LocalConnectionOptions } from '../OpenViduInternal/Interfaces/Private/LocalConnectionOptions';\nimport { SessionOptions } from '../OpenViduInternal/Interfaces/Private/SessionOptions';\nimport { ConnectionEvent } from '../OpenViduInternal/Events/ConnectionEvent';\nimport { FilterEvent } from '../OpenViduInternal/Events/FilterEvent';\nimport { PublisherSpeakingEvent } from '../OpenViduInternal/Events/PublisherSpeakingEvent';\nimport { RecordingEvent } from '../OpenViduInternal/Events/RecordingEvent';\nimport { SessionDisconnectedEvent } from '../OpenViduInternal/Events/SessionDisconnectedEvent';\nimport { SignalEvent } from '../OpenViduInternal/Events/SignalEvent';\nimport { StreamEvent } from '../OpenViduInternal/Events/StreamEvent';\nimport { StreamPropertyChangedEvent } from '../OpenViduInternal/Events/StreamPropertyChangedEvent';\nimport { ConnectionPropertyChangedEvent } from '../OpenViduInternal/Events/ConnectionPropertyChangedEvent';\nimport { NetworkQualityLevelChangedEvent } from '../OpenViduInternal/Events/NetworkQualityLevelChangedEvent';\nimport { OpenViduError, OpenViduErrorName } from '../OpenViduInternal/Enums/OpenViduError';\nimport { VideoInsertMode } from '../OpenViduInternal/Enums/VideoInsertMode';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\nimport { PlatformUtils } from '../OpenViduInternal/Utils/Platform';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\n/**\n * Represents a video call. It can also be seen as a videoconference room where multiple users can connect.\n * Participants who publish their videos to a session can be seen by the rest of users connected to that specific session.\n * Initialized with [[OpenVidu.initSession]] method.\n *\n * ### Available event listeners (and events dispatched)\n *\n * - connectionCreated ([[ConnectionEvent]])\n * - connectionDestroyed ([[ConnectionEvent]])\n * - connectionPropertyChanged ([[ConnectionPropertyChangedEvent]]) <a href=\"https://docs.openvidu.io/en/stable/openvidu-pro/\" target=\"_blank\" style=\"display: inline-block; background-color: rgb(0, 136, 170); color: white; font-weight: bold; padding: 0px 5px; margin-right: 5px; border-radius: 3px; font-size: 13px; line-height:21px; font-family: Montserrat, sans-serif\">PRO</a>\n * - sessionDisconnected ([[SessionDisconnectedEvent]])\n * - streamCreated ([[StreamEvent]])\n * - streamDestroyed ([[StreamEvent]])\n * - streamPropertyChanged ([[StreamPropertyChangedEvent]])\n * - publisherStartSpeaking ([[PublisherSpeakingEvent]])\n * - publisherStopSpeaking ([[PublisherSpeakingEvent]])\n * - signal ([[SignalEvent]])\n * - recordingStarted ([[RecordingEvent]])\n * - recordingStopped ([[RecordingEvent]])\n * - networkQualityLevelChanged ([[NetworkQualityLevelChangedEvent]])\n * - reconnecting\n * - reconnected\n */\nexport class Session extends EventDispatcher {\n\n    /**\n     * Local connection to the Session. This object is defined only after [[Session.connect]] has been successfully executed, and can be retrieved subscribing to `connectionCreated` event\n     */\n    connection: Connection;\n\n    /**\n     * Unique identifier of the Session\n     */\n    sessionId: string;\n\n    /**\n     * Collection of all StreamManagers of this Session ([[Publisher]] and [[Subscriber]])\n     */\n    streamManagers: StreamManager[] = [];\n\n    /**\n     * Object defining the methods that the client is able to call. These are defined by the [[Connection.role]].\n     * This object is only defined after [[Session.connect]] has been successfully resolved\n     */\n    capabilities: Capabilities;\n\n    // This map is only used to avoid race condition between 'joinRoom' response and 'onParticipantPublished' notification\n    /**\n     * @hidden\n     */\n    remoteStreamsCreated: Map<string, boolean> = new Map();\n\n    /**\n     * @hidden\n     */\n    isFirstIonicIosSubscriber = true;\n    /**\n     * @hidden\n     */\n    countDownForIonicIosSubscribersActive = true;\n    /**\n     * @hidden\n     */\n    remoteConnections: Map<string, Connection> = new Map();\n    /**\n     * @hidden\n     */\n    openvidu: OpenVidu;\n    /**\n     * @hidden\n     */\n    options: SessionOptions;\n    /**\n     * @hidden\n     */\n    startSpeakingEventsEnabled = false;\n    /**\n     * @hidden\n     */\n    startSpeakingEventsEnabledOnce = false;\n    /**\n     * @hidden\n     */\n    stopSpeakingEventsEnabled = false;\n    /**\n     * @hidden\n     */\n    stopSpeakingEventsEnabledOnce = false;\n    /**\n     * @hidden\n     */\n    private videoDataInterval: NodeJS.Timeout;\n    /**\n     * @hidden\n     */\n    private videoDataTimeout: NodeJS.Timeout;\n\n    /**\n     * @hidden\n     */\n    constructor(openvidu: OpenVidu) {\n        super();\n        platform = PlatformUtils.getInstance();\n        this.openvidu = openvidu;\n    }\n\n    connect(token: string): Promise<any>;\n    connect(token: string, metadata: any): Promise<any>;\n\n    /**\n     * Connects to the session using `token`. Parameter `metadata` allows you to pass extra data to share with other users when\n     * they receive `streamCreated` event. The structure of `metadata` string is up to you (maybe some standardized format\n     * as JSON or XML is a good idea).\n     *\n     * This metadata is not considered secure, as it is generated in the client side. To pass secure data, add it as a parameter in the\n     * token generation operation (through the API REST, openvidu-java-client or openvidu-node-client).\n     *\n     * Only after the returned Promise is successfully resolved [[Session.connection]] object will be available and properly defined.\n     *\n     * #### Events dispatched\n     *\n     * The [[Session]] object of the local participant will first dispatch one or more `connectionCreated` events upon successful termination of this method:\n     * - First one for your own local Connection object, so you can retrieve [[Session.connection]] property.\n     * - Then one for each remote Connection previously connected to the Session, if any. Any other remote user connecting to the Session after you have\n     * successfully connected will also dispatch a `connectionCreated` event when they do so.\n     *\n     * The [[Session]] object of the local participant will also dispatch a `streamCreated` event for each remote active [[Publisher]] that was already streaming\n     * when connecting, just after dispatching all remote `connectionCreated` events.\n     *\n     * The [[Session]] object of every other participant connected to the session will dispatch a `connectionCreated` event.\n     *\n     * See [[ConnectionEvent]] and [[StreamEvent]] to learn more.\n     *\n     * @returns A Promise to which you must subscribe that is resolved if the the connection to the Session was successful and rejected with an Error object if not\n     *\n     */\n    connect(token: string, metadata?: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n\n            this.processToken(token);\n\n            if (this.openvidu.checkSystemRequirements()) {\n                // Early configuration to deactivate automatic subscription to streams\n                this.options = {\n                    sessionId: this.sessionId,\n                    participantId: token,\n                    metadata: !!metadata ? this.stringClientMetadata(metadata) : ''\n                };\n                this.connectAux(token).then(() => {\n                    resolve();\n                }).catch(error => {\n                    reject(error);\n                });\n            } else {\n                reject(new OpenViduError(OpenViduErrorName.BROWSER_NOT_SUPPORTED, 'Browser ' + platform.getName() + ' (version ' + platform.getVersion() + ') for ' + platform.getFamily() + ' is not supported in OpenVidu'));\n            }\n        });\n    }\n\n    /**\n     * Leaves the session, destroying all streams and deleting the user as a participant.\n     *\n     * #### Events dispatched\n     *\n     * The [[Session]] object of the local participant will dispatch a `sessionDisconnected` event.\n     * This event will automatically unsubscribe the leaving participant from every Subscriber object of the session (this includes closing the WebRTCPeer connection and disposing all MediaStreamTracks)\n     * and also deletes any HTML video element associated to each Subscriber (only those [created by OpenVidu Browser](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)).\n     * For every video removed, each Subscriber object will dispatch a `videoElementDestroyed` event.\n     * Call `event.preventDefault()` upon event `sessionDisconnected` to avoid this behavior and take care of disposing and cleaning all the Subscriber objects yourself.\n     * See [[SessionDisconnectedEvent]] and [[VideoElementEvent]] to learn more to learn more.\n     *\n     * The [[Publisher]] object of the local participant will dispatch a `streamDestroyed` event if there is a [[Publisher]] object publishing to the session.\n     * This event will automatically stop all media tracks and delete any HTML video element associated to it (only those [created by OpenVidu Browser](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)).\n     * For every video removed, the Publisher object will dispatch a `videoElementDestroyed` event.\n     * Call `event.preventDefault()` upon event `streamDestroyed` if you want to clean the Publisher object on your own or re-publish it in a different Session (to do so it is a mandatory requirement to call `Session.unpublish()`\n     * or/and `Session.disconnect()` in the previous session). See [[StreamEvent]] and [[VideoElementEvent]] to learn more.\n     *\n     * The [[Session]] object of every other participant connected to the session will dispatch a `streamDestroyed` event if the disconnected participant was publishing.\n     * This event will automatically unsubscribe the Subscriber object from the session (this includes closing the WebRTCPeer connection and disposing all MediaStreamTracks)\n     * and also deletes any HTML video element associated to that Subscriber (only those [created by OpenVidu Browser](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)).\n     * For every video removed, the Subscriber object will dispatch a `videoElementDestroyed` event.\n     * Call `event.preventDefault()` upon event `streamDestroyed` to avoid this default behavior and take care of disposing and cleaning the Subscriber object yourself.\n     * See [[StreamEvent]] and [[VideoElementEvent]] to learn more.\n     *\n     * The [[Session]] object of every other participant connected to the session will dispatch a `connectionDestroyed` event in any case. See [[ConnectionEvent]] to learn more.\n     */\n    disconnect(): void {\n        this.leave(false, 'disconnect');\n    }\n\n    subscribe(stream: Stream, targetElement: string | HTMLElement): Subscriber;\n    subscribe(stream: Stream, targetElement: string | HTMLElement, properties: SubscriberProperties): Subscriber;\n    subscribe(stream: Stream, targetElement: string | HTMLElement, completionHandler: (error: Error | undefined) => void): Subscriber;\n    subscribe(stream: Stream, targetElement: string | HTMLElement, properties: SubscriberProperties, completionHandler: (error: Error | undefined) => void): Subscriber;\n\n    /**\n     * Subscribes to a `stream`, adding a new HTML video element to DOM with `subscriberProperties` settings. This method is usually called in the callback of `streamCreated` event.\n     *\n     * #### Events dispatched\n     *\n     * The [[Subscriber]] object will dispatch a `videoElementCreated` event once the HTML video element has been added to DOM (only if you\n     * [let OpenVidu take care of the video players](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)). See [[VideoElementEvent]] to learn more.\n     *\n     * The [[Subscriber]] object will dispatch a `streamPlaying` event once the remote stream starts playing. See [[StreamManagerEvent]] to learn more.\n     *\n     * @param stream Stream object to subscribe to\n     * @param targetElement HTML DOM element (or its `id` attribute) in which the video element of the Subscriber will be inserted (see [[SubscriberProperties.insertMode]]). If *null* or *undefined* no default video will be created for this Subscriber.\n     * You can always call method [[Subscriber.addVideoElement]] or [[Subscriber.createVideoElement]] to manage the video elements on your own (see [Manage video players](/en/stable/cheatsheet/manage-videos) section)\n     * @param completionHandler `error` parameter is null if `subscribe` succeeds, and is defined if it fails.\n     */\n    subscribe(stream: Stream, targetElement: string | HTMLElement, param3?: ((error: Error | undefined) => void) | SubscriberProperties, param4?: ((error: Error | undefined) => void)): Subscriber {\n        let properties: SubscriberProperties = {};\n        if (!!param3 && typeof param3 !== 'function') {\n            properties = {\n                insertMode: (typeof param3.insertMode !== 'undefined') ? ((typeof param3.insertMode === 'string') ? VideoInsertMode[param3.insertMode] : properties.insertMode) : VideoInsertMode.APPEND,\n                subscribeToAudio: (typeof param3.subscribeToAudio !== 'undefined') ? param3.subscribeToAudio : true,\n                subscribeToVideo: (typeof param3.subscribeToVideo !== 'undefined') ? param3.subscribeToVideo : true\n            };\n        } else {\n            properties = {\n                insertMode: VideoInsertMode.APPEND,\n                subscribeToAudio: true,\n                subscribeToVideo: true\n            };\n        }\n\n        let completionHandler: (error: Error | undefined) => void;\n        if (!!param3 && (typeof param3 === 'function')) {\n            completionHandler = param3;\n        } else if (!!param4) {\n            completionHandler = param4;\n        }\n\n        logger.info('Subscribing to ' + stream.connection.connectionId);\n\n        stream.subscribe()\n            .then(() => {\n                logger.info('Subscribed correctly to ' + stream.connection.connectionId);\n                if (completionHandler !== undefined) {\n                    completionHandler(undefined);\n                }\n            })\n            .catch(error => {\n                if (completionHandler !== undefined) {\n                    completionHandler(error);\n                }\n            });\n        const subscriber = new Subscriber(stream, targetElement, properties);\n        if (!!subscriber.targetElement) {\n            stream.streamManager.createVideoElement(subscriber.targetElement, <VideoInsertMode>properties.insertMode);\n        }\n        return subscriber;\n    }\n\n\n    /**\n     * Promisified version of [[Session.subscribe]]\n     */\n    subscribeAsync(stream: Stream, targetElement: string | HTMLElement): Promise<Subscriber>;\n    subscribeAsync(stream: Stream, targetElement: string | HTMLElement, properties: SubscriberProperties): Promise<Subscriber>;\n\n    subscribeAsync(stream: Stream, targetElement: string | HTMLElement, properties?: SubscriberProperties): Promise<Subscriber> {\n        return new Promise<Subscriber>((resolve, reject) => {\n\n            let subscriber: Subscriber;\n\n            const callback = (error: Error) => {\n                if (!!error) {\n                    reject(error);\n                } else {\n                    resolve(subscriber);\n                }\n            };\n\n            if (!!properties) {\n                subscriber = this.subscribe(stream, targetElement, properties, callback);\n            } else {\n                subscriber = this.subscribe(stream, targetElement, callback);\n            }\n\n        });\n    }\n\n\n    /**\n     * Unsubscribes from `subscriber`, automatically removing its associated HTML video elements.\n     *\n     * #### Events dispatched\n     *\n     * The [[Subscriber]] object will dispatch a `videoElementDestroyed` event for each video associated to it that was removed from DOM.\n     * Only videos [created by OpenVidu Browser](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)) will be automatically removed\n     *\n     * See [[VideoElementEvent]] to learn more\n     */\n    unsubscribe(subscriber: Subscriber): void {\n        const connectionId = subscriber.stream.connection.connectionId;\n\n        logger.info('Unsubscribing from ' + connectionId);\n\n        this.openvidu.sendRequest(\n            'unsubscribeFromVideo',\n            { sender: subscriber.stream.connection.connectionId },\n            (error, response) => {\n                if (error) {\n                    logger.error('Error unsubscribing from ' + connectionId, error);\n                } else {\n                    logger.info('Unsubscribed correctly from ' + connectionId);\n                }\n                subscriber.stream.disposeWebRtcPeer();\n                subscriber.stream.disposeMediaStream();\n            }\n        );\n        subscriber.stream.streamManager.removeAllVideos();\n    }\n\n\n    /**\n     * Publishes to the Session the Publisher object\n     *\n     * #### Events dispatched\n     *\n     * The local [[Publisher]] object will dispatch a `streamCreated` event upon successful termination of this method. See [[StreamEvent]] to learn more.\n     *\n     * The local [[Publisher]] object will dispatch a `streamPlaying` once the media stream starts playing. See [[StreamManagerEvent]] to learn more.\n     *\n     * The [[Session]] object of every other participant connected to the session will dispatch a `streamCreated` event so they can subscribe to it. See [[StreamEvent]] to learn more.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved only after the publisher was successfully published and rejected with an Error object if not\n     */\n    publish(publisher: Publisher): Promise<any> {\n        return new Promise((resolve, reject) => {\n            publisher.session = this;\n            publisher.stream.session = this;\n\n            if (!publisher.stream.publishedOnce) {\n                // 'Session.unpublish(Publisher)' has NOT been called\n                this.connection.addStream(publisher.stream);\n                publisher.stream.publish()\n                    .then(() => {\n                        this.sendVideoData(publisher, 8, true, 5);\n                        resolve();\n                    })\n                    .catch(error => {\n                        reject(error);\n                    });\n            } else {\n                // 'Session.unpublish(Publisher)' has been called. Must initialize again Publisher\n                publisher.initialize()\n                    .then(() => {\n                        this.connection.addStream(publisher.stream);\n                        publisher.reestablishStreamPlayingEvent();\n                        publisher.stream.publish()\n                            .then(() => {\n                                this.sendVideoData(publisher, 8, true, 5);\n                                resolve();\n                            })\n                            .catch(error => {\n                                reject(error);\n                            });\n                    }).catch((error) => {\n                        reject(error);\n                    });\n            }\n        });\n    }\n\n\n    /**\n     * Unpublishes from the Session the Publisher object.\n     *\n     * #### Events dispatched\n     *\n     * The [[Publisher]] object of the local participant will dispatch a `streamDestroyed` event.\n     * This event will automatically stop all media tracks and delete any HTML video element associated to this Publisher\n     * (only those videos [created by OpenVidu Browser](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)).\n     * For every video removed, the Publisher object will dispatch a `videoElementDestroyed` event.\n     * Call `event.preventDefault()` upon event `streamDestroyed` if you want to clean the Publisher object on your own or re-publish it in a different Session.\n     *\n     * The [[Session]] object of every other participant connected to the session will dispatch a `streamDestroyed` event.\n     * This event will automatically unsubscribe the Subscriber object from the session (this includes closing the WebRTCPeer connection and disposing all MediaStreamTracks) and\n     * delete any HTML video element associated to it (only those [created by OpenVidu Browser](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)).\n     * For every video removed, the Subscriber object will dispatch a `videoElementDestroyed` event.\n     * Call `event.preventDefault()` upon event `streamDestroyed` to avoid this default behavior and take care of disposing and cleaning the Subscriber object on your own.\n     *\n     * See [[StreamEvent]] and [[VideoElementEvent]] to learn more.\n     */\n    unpublish(publisher: Publisher): void {\n\n        const stream = publisher.stream;\n\n        if (!stream.connection) {\n            logger.error('The associated Connection object of this Publisher is null', stream);\n            return;\n        } else if (stream.connection !== this.connection) {\n            logger.error('The associated Connection object of this Publisher is not your local Connection.' +\n                \"Only moderators can force unpublish on remote Streams via 'forceUnpublish' method\", stream);\n            return;\n        } else {\n\n            logger.info('Unpublishing local media (' + stream.connection.connectionId + ')');\n\n            this.openvidu.sendRequest('unpublishVideo', (error, response) => {\n                if (error) {\n                    logger.error(error);\n                } else {\n                    logger.info('Media unpublished correctly');\n                }\n            });\n\n            stream.disposeWebRtcPeer();\n            delete stream.connection.stream;\n\n            const streamEvent = new StreamEvent(true, publisher, 'streamDestroyed', publisher.stream, 'unpublish');\n            publisher.emitEvent('streamDestroyed', [streamEvent]);\n            streamEvent.callDefaultBehavior();\n        }\n    }\n\n\n    /**\n     * Forces some user to leave the session\n     *\n     * #### Events dispatched\n     *\n     * The behavior is the same as when some user calls [[Session.disconnect]], but `reason` property in all events will be `\"forceDisconnectByUser\"`.\n     *\n     * The [[Session]] object of every participant will dispatch a `streamDestroyed` event if the evicted user was publishing a stream, with property `reason` set to `\"forceDisconnectByUser\"`.\n     * The [[Session]] object of every participant except the evicted one will dispatch a `connectionDestroyed` event for the evicted user, with property `reason` set to `\"forceDisconnectByUser\"`.\n     *\n     * If any, the [[Publisher]] object of the evicted participant will also dispatch a `streamDestroyed` event with property `reason` set to `\"forceDisconnectByUser\"`.\n     * The [[Session]] object of the evicted participant will dispatch a `sessionDisconnected` event with property `reason` set to `\"forceDisconnectByUser\"`.\n     *\n     * See [[StreamEvent]], [[ConnectionEvent]] and [[SessionDisconnectedEvent]] to learn more.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved only after the participant has been successfully evicted from the session and rejected with an Error object if not\n     */\n    forceDisconnect(connection: Connection): Promise<any> {\n        return new Promise((resolve, reject) => {\n            logger.info('Forcing disconnect for connection ' + connection.connectionId);\n            this.openvidu.sendRequest(\n                'forceDisconnect',\n                { connectionId: connection.connectionId },\n                (error, response) => {\n                    if (error) {\n                        logger.error('Error forcing disconnect for Connection ' + connection.connectionId, error);\n                        if (error.code === 401) {\n                            reject(new OpenViduError(OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to force a disconnection\"));\n                        } else {\n                            reject(error);\n                        }\n                    } else {\n                        logger.info('Forcing disconnect correctly for Connection ' + connection.connectionId);\n                        resolve();\n                    }\n                }\n            );\n        });\n    }\n\n\n    /**\n     * Forces some user to unpublish a Stream\n     *\n     * #### Events dispatched\n     *\n     * The behavior is the same as when some user calls [[Session.unpublish]], but `reason` property in all events will be `\"forceUnpublishByUser\"`\n     *\n     * The [[Session]] object of every participant will dispatch a `streamDestroyed` event with property `reason` set to `\"forceDisconnectByUser\"`\n     *\n     * The [[Publisher]] object of the affected participant will also dispatch a `streamDestroyed` event with property `reason` set to `\"forceDisconnectByUser\"`\n     *\n     * See [[StreamEvent]] to learn more.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved only after the remote Stream has been successfully unpublished from the session and rejected with an Error object if not\n     */\n    forceUnpublish(stream: Stream): Promise<any> {\n        return new Promise((resolve, reject) => {\n            logger.info('Forcing unpublish for stream ' + stream.streamId);\n            this.openvidu.sendRequest(\n                'forceUnpublish',\n                { streamId: stream.streamId },\n                (error, response) => {\n                    if (error) {\n                        logger.error('Error forcing unpublish for Stream ' + stream.streamId, error);\n                        if (error.code === 401) {\n                            reject(new OpenViduError(OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to force an unpublishing\"));\n                        } else {\n                            reject(error);\n                        }\n                    } else {\n                        logger.info('Forcing unpublish correctly for Stream ' + stream.streamId);\n                        resolve();\n                    }\n                }\n            );\n        });\n    }\n\n\n    /**\n     * Sends one signal. `signal` object has the following optional properties:\n     * ```json\n     * {data:string, to:Connection[], type:string}\n     * ```\n     * All users subscribed to that signal (`session.on('signal:type', ...)` or `session.on('signal', ...)` for all signals) and whose Connection objects are in `to` array will receive it. Their local\n     * Session objects will dispatch a `signal` or `signal:type` event. See [[SignalEvent]] to learn more.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the message successfully reached openvidu-server and rejected with an Error object if not. _This doesn't\n     * mean that openvidu-server could resend the message to all the listed receivers._\n     */\n    /* tslint:disable:no-string-literal */\n    signal(signal: SignalOptions): Promise<any> {\n        return new Promise((resolve, reject) => {\n\n            const signalMessage = {};\n\n            if (signal.to && signal.to.length > 0) {\n                const connectionIds: string[] = [];\n                signal.to.forEach(connection => {\n                    if (!!connection.connectionId) {\n                        connectionIds.push(connection.connectionId);\n                    }\n                });\n                signalMessage['to'] = connectionIds;\n            } else {\n                signalMessage['to'] = [];\n            }\n\n            signalMessage['data'] = signal.data ? signal.data : '';\n\n            let typeAux: string = signal.type ? signal.type : 'signal';\n            if (!!typeAux) {\n                if (typeAux.substring(0, 7) !== 'signal:') {\n                    typeAux = 'signal:' + typeAux;\n                }\n            }\n            signalMessage['type'] = typeAux;\n\n            this.openvidu.sendRequest('sendMessage', {\n                message: JSON.stringify(signalMessage)\n            }, (error, response) => {\n                if (!!error) {\n                    reject(error);\n                } else {\n                    resolve();\n                }\n            });\n        });\n    }\n    /* tslint:enable:no-string-literal */\n\n\n    /**\n     * See [[EventDispatcher.on]]\n     */\n    on(type: string, handler: (event: SessionDisconnectedEvent | SignalEvent | StreamEvent | ConnectionEvent | PublisherSpeakingEvent | RecordingEvent | NetworkQualityLevelChangedEvent) => void): EventDispatcher {\n\n        super.onAux(type, \"Event '\" + type + \"' triggered by 'Session'\", handler);\n\n        if (type === 'publisherStartSpeaking') {\n            this.startSpeakingEventsEnabled = true;\n            // If there are already available remote streams, enable hark 'speaking' event in all of them\n            this.remoteConnections.forEach(remoteConnection => {\n                if (!!remoteConnection.stream && remoteConnection.stream.hasAudio) {\n                    remoteConnection.stream.enableStartSpeakingEvent();\n                }\n            });\n        }\n        if (type === 'publisherStopSpeaking') {\n            this.stopSpeakingEventsEnabled = true;\n            // If there are already available remote streams, enable hark 'stopped_speaking' event in all of them\n            this.remoteConnections.forEach(remoteConnection => {\n                if (!!remoteConnection.stream && remoteConnection.stream.hasAudio) {\n                    remoteConnection.stream.enableStopSpeakingEvent();\n                }\n            });\n        }\n\n        return this;\n    }\n\n\n    /**\n     * See [[EventDispatcher.once]]\n     */\n    once(type: string, handler: (event: SessionDisconnectedEvent | SignalEvent | StreamEvent | ConnectionEvent | PublisherSpeakingEvent | RecordingEvent | NetworkQualityLevelChangedEvent) => void): Session {\n\n        super.onceAux(type, \"Event '\" + type + \"' triggered once by 'Session'\", handler);\n\n        if (type === 'publisherStartSpeaking') {\n            this.startSpeakingEventsEnabledOnce = true;\n            // If there are already available remote streams, enable hark 'speaking' event in all of them once\n            this.remoteConnections.forEach(remoteConnection => {\n                if (!!remoteConnection.stream && remoteConnection.stream.hasAudio) {\n                    remoteConnection.stream.enableOnceStartSpeakingEvent();\n                }\n            });\n        }\n        if (type === 'publisherStopSpeaking') {\n            this.stopSpeakingEventsEnabledOnce = true;\n            // If there are already available remote streams, enable hark 'stopped_speaking' event in all of them once\n            this.remoteConnections.forEach(remoteConnection => {\n                if (!!remoteConnection.stream && remoteConnection.stream.hasAudio) {\n                    remoteConnection.stream.enableOnceStopSpeakingEvent();\n                }\n            });\n        }\n\n        return this;\n    }\n\n\n    /**\n     * See [[EventDispatcher.off]]\n     */\n    off(type: string, handler?: (event: SessionDisconnectedEvent | SignalEvent | StreamEvent | ConnectionEvent | PublisherSpeakingEvent | RecordingEvent | NetworkQualityLevelChangedEvent) => void): Session {\n\n        super.off(type, handler);\n\n        if (type === 'publisherStartSpeaking') {\n            let remainingStartSpeakingListeners = this.ee.getListeners(type).length;\n            if (remainingStartSpeakingListeners === 0) {\n                this.startSpeakingEventsEnabled = false;\n                // If there are already available remote streams, disable hark in all of them\n                this.remoteConnections.forEach(remoteConnection => {\n                    if (!!remoteConnection.stream) {\n                        remoteConnection.stream.disableStartSpeakingEvent(false);\n                    }\n                });\n            }\n        }\n        if (type === 'publisherStopSpeaking') {\n            let remainingStopSpeakingListeners = this.ee.getListeners(type).length;\n            if (remainingStopSpeakingListeners === 0) {\n                this.stopSpeakingEventsEnabled = false;\n                // If there are already available remote streams, disable hark in all of them\n                this.remoteConnections.forEach(remoteConnection => {\n                    if (!!remoteConnection.stream) {\n                        remoteConnection.stream.disableStopSpeakingEvent(false);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n\n    /* Hidden methods */\n\n    /**\n     * @hidden\n     */\n    onParticipantJoined(response: RemoteConnectionOptions): void {\n        // Connection shouldn't exist\n        this.getConnection(response.id, '')\n\n            .then(connection => {\n                logger.warn('Connection ' + response.id + ' already exists in connections list');\n            })\n            .catch(openViduError => {\n                const connection = new Connection(this, response);\n                this.remoteConnections.set(response.id, connection);\n                this.ee.emitEvent('connectionCreated', [new ConnectionEvent(false, this, 'connectionCreated', connection, '')]);\n            });\n    }\n\n    /**\n     * @hidden\n     */\n    onParticipantLeft(msg): void {\n\n        if (this.remoteConnections.size > 0) {\n            this.getRemoteConnection(msg.connectionId).then(connection => {\n                if (!!connection.stream) {\n                    const stream = connection.stream;\n\n                    const streamEvent = new StreamEvent(true, this, 'streamDestroyed', stream, msg.reason);\n                    this.ee.emitEvent('streamDestroyed', [streamEvent]);\n                    streamEvent.callDefaultBehavior();\n\n                    this.remoteStreamsCreated.delete(stream.streamId);\n\n                    if (this.remoteStreamsCreated.size === 0) {\n                        this.isFirstIonicIosSubscriber = true;\n                        this.countDownForIonicIosSubscribersActive = true;\n                    }\n                }\n                this.remoteConnections.delete(connection.connectionId);\n                this.ee.emitEvent('connectionDestroyed', [new ConnectionEvent(false, this, 'connectionDestroyed', connection, msg.reason)]);\n            })\n                .catch(openViduError => {\n                    logger.error(openViduError);\n                });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    onParticipantPublished(response: RemoteConnectionOptions): void {\n\n        const afterConnectionFound = (connection) => {\n\n            this.remoteConnections.set(connection.connectionId, connection);\n\n            if (!this.remoteStreamsCreated.get(connection.stream.streamId)) {\n                // Avoid race condition between stream.subscribe() in \"onParticipantPublished\" and in \"joinRoom\" rpc callback\n                // This condition is false if openvidu-server sends \"participantPublished\" event to a subscriber participant that has\n                // already subscribed to certain stream in the callback of \"joinRoom\" method\n\n                this.ee.emitEvent('streamCreated', [new StreamEvent(false, this, 'streamCreated', connection.stream, '')]);\n            }\n\n            this.remoteStreamsCreated.set(connection.stream.streamId, true);\n        };\n\n        // Get the existing Connection created on 'onParticipantJoined' for\n        // existing participants or create a new one for new participants\n        let connection: Connection;\n        this.getRemoteConnection(response.id)\n\n            .then(con => {\n                // Update existing Connection\n                connection = con;\n                response.metadata = con.data;\n                connection.remoteOptions = response;\n                connection.initRemoteStreams(response.streams);\n                afterConnectionFound(connection);\n            })\n            .catch(openViduError => {\n                // Create new Connection\n                connection = new Connection(this, response);\n                afterConnectionFound(connection);\n            });\n    }\n\n    /**\n     * @hidden\n     */\n    onParticipantUnpublished(msg): void {\n        if (msg.connectionId === this.connection.connectionId) {\n            // Your stream has been forcedly unpublished from the session\n            this.stopPublisherStream(msg.reason);\n        } else {\n            this.getRemoteConnection(msg.connectionId)\n\n                .then(connection => {\n\n                    const streamEvent = new StreamEvent(true, this, 'streamDestroyed', connection.stream!, msg.reason);\n                    this.ee.emitEvent('streamDestroyed', [streamEvent]);\n                    streamEvent.callDefaultBehavior();\n\n                    // Deleting the remote stream\n                    const streamId: string = connection.stream!.streamId;\n                    this.remoteStreamsCreated.delete(streamId);\n\n                    if (this.remoteStreamsCreated.size === 0) {\n                        this.isFirstIonicIosSubscriber = true;\n                        this.countDownForIonicIosSubscribersActive = true;\n                    }\n\n                    connection.removeStream(streamId);\n                })\n                .catch(openViduError => {\n                    logger.error(openViduError);\n                });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    onParticipantEvicted(msg): void {\n        if (msg.connectionId === this.connection.connectionId) {\n            // You have been evicted from the session\n            if (!!this.sessionId && !this.connection.disposed) {\n                this.leave(true, msg.reason);\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    onNewMessage(msg): void {\n\n        logger.info('New signal: ' + JSON.stringify(msg));\n\n        const strippedType: string = !!msg.type ? msg.type.replace(/^(signal:)/, '') : undefined;\n\n        if (!!msg.from) {\n            // Signal sent by other client\n            this.getConnection(msg.from, \"Connection '\" + msg.from + \"' unknown when 'onNewMessage'. Existing remote connections: \"\n                + JSON.stringify(this.remoteConnections.keys()) + '. Existing local connection: ' + this.connection.connectionId)\n\n                .then(connection => {\n                    this.ee.emitEvent('signal', [new SignalEvent(this, strippedType, msg.data, connection)]);\n                    if (msg.type !== 'signal') {\n                        this.ee.emitEvent(msg.type, [new SignalEvent(this, strippedType, msg.data, connection)]);\n                    }\n                })\n                .catch(openViduError => {\n                    logger.error(openViduError);\n                });\n        } else {\n            // Signal sent by server\n            this.ee.emitEvent('signal', [new SignalEvent(this, strippedType, msg.data, undefined)]);\n            if (msg.type !== 'signal') {\n                this.ee.emitEvent(msg.type, [new SignalEvent(this, strippedType, msg.data, undefined)]);\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    onStreamPropertyChanged(msg): void {\n\n        const callback = (connection: Connection) => {\n            if (!!connection.stream && connection.stream.streamId === msg.streamId) {\n                const stream = connection.stream;\n                let oldValue;\n                switch (msg.property) {\n                    case 'audioActive':\n                        oldValue = stream.audioActive;\n                        msg.newValue = msg.newValue === 'true';\n                        stream.audioActive = msg.newValue;\n                        break;\n                    case 'videoActive':\n                        oldValue = stream.videoActive;\n                        msg.newValue = msg.newValue === 'true';\n                        stream.videoActive = msg.newValue;\n                        break;\n                    case 'videoDimensions':\n                        oldValue = stream.videoDimensions;\n                        msg.newValue = JSON.parse(JSON.parse(msg.newValue));\n                        stream.videoDimensions = msg.newValue;\n                        break;\n                    case 'filter':\n                        oldValue = stream.filter;\n                        msg.newValue = (Object.keys(msg.newValue).length > 0) ? msg.newValue : undefined;\n                        if (msg.newValue !== undefined) {\n                            stream.filter = new Filter(msg.newValue.type, msg.newValue.options);\n                            stream.filter.stream = stream;\n                            if (msg.newValue.lastExecMethod) {\n                                stream.filter.lastExecMethod = msg.newValue.lastExecMethod;\n                            }\n                        } else {\n                            delete stream.filter;\n                        }\n                        msg.newValue = stream.filter;\n                        break;\n                }\n                this.ee.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent(this, stream, msg.property, msg.newValue, oldValue, msg.reason)]);\n                if (!!stream.streamManager) {\n                    stream.streamManager.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent(stream.streamManager, stream, msg.property, msg.newValue, oldValue, msg.reason)]);\n                }\n            } else {\n                logger.error(\"No stream with streamId '\" + msg.streamId + \"' found for connection '\" + msg.connectionId + \"' on 'streamPropertyChanged' event\");\n            }\n        };\n\n        if (msg.connectionId === this.connection.connectionId) {\n            // Your stream has been forcedly changed (filter feature)\n            callback(this.connection);\n        } else {\n            this.getRemoteConnection(msg.connectionId)\n                .then(connection => {\n                    callback(connection);\n                })\n                .catch(openViduError => {\n                    logger.error(openViduError);\n                });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    onConnectionPropertyChanged(msg): void {\n        let oldValue;\n        switch (msg.property) {\n            case 'role':\n                oldValue = this.connection.role.slice();\n                this.connection.role = msg.newValue;\n                this.connection.localOptions!.role = msg.newValue;\n                break;\n            case 'record':\n                oldValue = this.connection.record;\n                msg.newValue = msg.newValue === 'true';\n                this.connection.record = msg.newValue;\n                this.connection.localOptions!.record = msg.newValue;\n                break;\n        }\n        this.ee.emitEvent('connectionPropertyChanged', [new ConnectionPropertyChangedEvent(this, this.connection, msg.property, msg.newValue, oldValue)]);\n    }\n\n    /**\n     * @hidden\n     */\n    onNetworkQualityLevelChangedChanged(msg): void {\n        if (msg.connectionId === this.connection.connectionId) {\n            this.ee.emitEvent('networkQualityLevelChanged', [new NetworkQualityLevelChangedEvent(this, msg.newValue, msg.oldValue, this.connection)]);\n        } else {\n            this.getConnection(msg.connectionId, 'Connection not found for connectionId ' + msg.connectionId)\n                .then((connection: Connection) => {\n                    this.ee.emitEvent('networkQualityLevelChanged', [new NetworkQualityLevelChangedEvent(this, msg.newValue, msg.oldValue, connection)]);\n                })\n                .catch(openViduError => {\n                    logger.error(openViduError);\n                });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    recvIceCandidate(msg): void {\n        const candidate: RTCIceCandidate = {\n            candidate: msg.candidate,\n            component: msg.component,\n            foundation: msg.foundation,\n            port: msg.port,\n            priority: msg.priority,\n            protocol: msg.protocol,\n            relatedAddress: msg.relatedAddress,\n            relatedPort: msg.relatedPort,\n            sdpMid: msg.sdpMid,\n            sdpMLineIndex: msg.sdpMLineIndex,\n            tcpType: msg.tcpType,\n            usernameFragment: msg.usernameFragment,\n            type: msg.type,\n            toJSON: () => {\n                return { candidate: msg.candidate };\n            }\n        };\n        this.getConnection(msg.senderConnectionId, 'Connection not found for connectionId ' + msg.senderConnectionId + ' owning endpoint ' + msg.endpointName + '. Ice candidate will be ignored: ' + candidate)\n            .then(connection => {\n                const stream: Stream = connection.stream!;\n                stream.getWebRtcPeer().addIceCandidate(candidate).catch(error => {\n                    logger.error('Error adding candidate for ' + stream!.streamId\n                        + ' stream of endpoint ' + msg.endpointName + ': ' + error);\n                });\n            })\n            .catch(openViduError => {\n                logger.error(openViduError);\n            });\n    }\n\n    /**\n     * @hidden\n     */\n    onSessionClosed(msg): void {\n        logger.info('Session closed: ' + JSON.stringify(msg));\n        const s = msg.sessionId;\n        if (s !== undefined) {\n            this.ee.emitEvent('session-closed', [{\n                session: s\n            }]);\n        } else {\n            logger.warn('Session undefined on session closed', msg);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    onLostConnection(reason: string): void {\n        logger.warn('Lost connection in Session ' + this.sessionId);\n        if (!!this.sessionId && !!this.connection && !this.connection.disposed) {\n            this.leave(true, reason);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    onRecoveredConnection(): void {\n        logger.info('Recovered connection in Session ' + this.sessionId);\n        this.reconnectBrokenStreams();\n        this.ee.emitEvent('reconnected', []);\n    }\n\n    /**\n     * @hidden\n     */\n    onMediaError(params): void {\n        logger.error('Media error: ' + JSON.stringify(params));\n        const err = params.error;\n        if (err) {\n            this.ee.emitEvent('error-media', [{\n                error: err\n            }]);\n        } else {\n            logger.warn('Received undefined media error. Params:', params);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    onRecordingStarted(response): void {\n        this.ee.emitEvent('recordingStarted', [new RecordingEvent(this, 'recordingStarted', response.id, response.name)]);\n    }\n\n    /**\n     * @hidden\n     */\n    onRecordingStopped(response): void {\n        this.ee.emitEvent('recordingStopped', [new RecordingEvent(this, 'recordingStopped', response.id, response.name, response.reason)]);\n    }\n\n    /**\n     * @hidden\n     * response = {connectionId: string, streamId: string, type: string, data: Object}\n     */\n    onFilterEventDispatched(response): void {\n        const connectionId: string = response.connectionId;\n        const streamId: string = response.streamId;\n        this.getConnection(connectionId, 'No connection found for connectionId ' + connectionId)\n            .then(connection => {\n                logger.info('Filter event dispatched');\n                const stream: Stream = connection.stream!;\n                stream.filter!.handlers.get(response.eventType)?.call(this, new FilterEvent(stream.filter!, response.eventType, response.data));\n            });\n    }\n\n    /**\n     * @hidden\n     */\n    reconnectBrokenStreams(): void {\n        logger.info('Re-establishing media connections...');\n        let someReconnection = false;\n        // Re-establish Publisher stream\n        if (!!this.connection.stream && this.connection.stream.streamIceConnectionStateBroken()) {\n            logger.warn('Re-establishing Publisher ' + this.connection.stream.streamId);\n            this.connection.stream.initWebRtcPeerSend(true);\n            someReconnection = true;\n        }\n        // Re-establish Subscriber streams\n        this.remoteConnections.forEach(remoteConnection => {\n            if (!!remoteConnection.stream && remoteConnection.stream.streamIceConnectionStateBroken()) {\n                logger.warn('Re-establishing Subscriber ' + remoteConnection.stream.streamId);\n                remoteConnection.stream.initWebRtcPeerReceive(true);\n                someReconnection = true;\n            }\n        });\n        if (!someReconnection) {\n            logger.info('There were no media streams in need of a reconnection');\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    emitEvent(type: string, eventArray: any[]): void {\n        this.ee.emitEvent(type, eventArray);\n    }\n\n    /**\n     * @hidden\n     */\n    leave(forced: boolean, reason: string): void {\n\n        forced = !!forced;\n        logger.info('Leaving Session (forced=' + forced + ')');\n        this.stopVideoDataIntervals();\n\n        if (!!this.connection) {\n            if (!this.connection.disposed && !forced) {\n                this.openvidu.sendRequest('leaveRoom', (error, response) => {\n                    if (error) {\n                        logger.error(error);\n                    }\n                    this.openvidu.closeWs();\n                });\n            } else {\n                this.openvidu.closeWs();\n            }\n\n            this.stopPublisherStream(reason);\n\n            if (!this.connection.disposed) {\n                // Make Session object dispatch 'sessionDisconnected' event (if it is not already disposed)\n                const sessionDisconnectEvent = new SessionDisconnectedEvent(this, reason);\n                this.ee.emitEvent('sessionDisconnected', [sessionDisconnectEvent]);\n                sessionDisconnectEvent.callDefaultBehavior();\n            }\n        } else {\n            logger.warn('You were not connected to the session ' + this.sessionId);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    initializeParams(token: string) {\n        const joinParams = {\n            token: (!!token) ? token : '',\n            session: this.sessionId,\n            platform: !!platform.getDescription() ? platform.getDescription() : 'unknown',\n            metadata: !!this.options.metadata ? this.options.metadata : '',\n            secret: this.openvidu.getSecret(),\n            recorder: this.openvidu.getRecorder()\n        };\n        return joinParams;\n    }\n\n    sendVideoData(streamManager: StreamManager, intervalSeconds: number = 1, doInterval: boolean = false, maxLoops: number = 1) {\n        if (\n            platform.isChromeBrowser() || platform.isChromeMobileBrowser() || platform.isOperaBrowser() ||\n            platform.isOperaMobileBrowser() || platform.isEdgeBrowser() || platform.isElectron() ||\n            (platform.isSafariBrowser() && !platform.isIonicIos()) || platform.isAndroidBrowser() ||\n            platform.isSamsungBrowser() || platform.isIonicAndroid() || (platform.isIPhoneOrIPad() && platform.isIOSWithSafari())\n        ) {\n            const obtainAndSendVideo = async () => {\n                const pc = streamManager.stream.getRTCPeerConnection();\n                if (pc.connectionState === 'connected') {\n                    const statsMap = await pc.getStats();\n                    const arr: any[] = [];\n                    statsMap.forEach(stats => {\n                        if ((\"frameWidth\" in stats) && (\"frameHeight\" in stats) && (arr.length === 0)) {\n                            arr.push(stats);\n                        }\n                    });\n                    if (arr.length > 0) {\n                        this.openvidu.sendRequest('videoData', {\n                            height: arr[0].frameHeight,\n                            width: arr[0].frameWidth,\n                            videoActive: streamManager.stream.videoActive != null ? streamManager.stream.videoActive : false,\n                            audioActive: streamManager.stream.audioActive != null ? streamManager.stream.audioActive : false\n                        }, (error, response) => {\n                            if (error) {\n                                logger.error(\"Error sending 'videoData' event\", error);\n                            }\n                        });\n                    }\n                }\n            }\n            if (doInterval) {\n                let loops = 1;\n                this.videoDataInterval = setInterval(() => {\n                    if (loops < maxLoops) {\n                        loops++;\n                        obtainAndSendVideo();\n                    } else {\n                        clearInterval(this.videoDataInterval);\n                    }\n                }, intervalSeconds * 1000);\n            } else {\n                this.videoDataTimeout = setTimeout(obtainAndSendVideo, intervalSeconds * 1000);\n            }\n        } else if (platform.isFirefoxBrowser() || platform.isFirefoxMobileBrowser() || platform.isIonicIos() || platform.isReactNative()) {\n            // Basic version for Firefox and Ionic iOS. They do not support stats\n            this.openvidu.sendRequest('videoData', {\n                height: streamManager.stream.videoDimensions?.height || 0,\n                width: streamManager.stream.videoDimensions?.width || 0,\n                videoActive: streamManager.stream.videoActive != null ? streamManager.stream.videoActive : false,\n                audioActive: streamManager.stream.audioActive != null ? streamManager.stream.audioActive : false\n            }, (error, response) => {\n                if (error) {\n                    logger.error(\"Error sending 'videoData' event\", error);\n                }\n            });\n        } else {\n            logger.error('Browser ' + platform.getName() + ' (version ' + platform.getVersion() + ') for ' + platform.getFamily() + ' is not supported in OpenVidu for Network Quality');\n        }\n    }\n\n    /* Private methods */\n\n    private connectAux(token: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.openvidu.startWs((error) => {\n                if (!!error) {\n                    reject(error);\n                } else {\n\n                    const joinParams = this.initializeParams(token);\n\n                    this.openvidu.sendRequest('joinRoom', joinParams, (error, response: LocalConnectionOptions) => {\n                        if (!!error) {\n                            reject(error);\n                        } else {\n\n                            this.processJoinRoomResponse(response);\n\n                            // Initialize local Connection object with values returned by openvidu-server\n                            this.connection = new Connection(this, response);\n\n                            // Initialize remote Connections with value returned by openvidu-server\n                            const events = {\n                                connections: new Array<Connection>(),\n                                streams: new Array<Stream>()\n                            };\n                            const existingParticipants: RemoteConnectionOptions[] = response.value;\n                            existingParticipants.forEach((remoteConnectionOptions: RemoteConnectionOptions) => {\n                                const connection = new Connection(this, remoteConnectionOptions);\n                                this.remoteConnections.set(connection.connectionId, connection);\n                                events.connections.push(connection);\n                                if (!!connection.stream) {\n                                    this.remoteStreamsCreated.set(connection.stream.streamId, true);\n                                    events.streams.push(connection.stream);\n                                }\n                            });\n\n                            // Own 'connectionCreated' event\n                            this.ee.emitEvent('connectionCreated', [new ConnectionEvent(false, this, 'connectionCreated', this.connection, '')]);\n\n                            // One 'connectionCreated' event for each existing connection in the session\n                            events.connections.forEach(connection => {\n                                this.ee.emitEvent('connectionCreated', [new ConnectionEvent(false, this, 'connectionCreated', connection, '')]);\n                            });\n\n                            // One 'streamCreated' event for each active stream in the session\n                            events.streams.forEach(stream => {\n                                this.ee.emitEvent('streamCreated', [new StreamEvent(false, this, 'streamCreated', stream, '')]);\n                            });\n\n                            resolve();\n                        }\n                    });\n                }\n            });\n        });\n    }\n\n    private stopPublisherStream(reason: string) {\n        if (!!this.connection.stream) {\n            // Dispose Publisher's  local stream\n            this.connection.stream.disposeWebRtcPeer();\n            if (this.connection.stream.isLocalStreamPublished) {\n                // Make Publisher object dispatch 'streamDestroyed' event if the Stream was published\n                this.connection.stream.ee.emitEvent('local-stream-destroyed', [reason]);\n            }\n        }\n    }\n\n    private stopVideoDataIntervals(): void {\n        clearInterval(this.videoDataInterval);\n        clearTimeout(this.videoDataTimeout);\n    }\n\n    private stringClientMetadata(metadata: any): string {\n        if (typeof metadata !== 'string') {\n            return JSON.stringify(metadata);\n        } else {\n            return metadata;\n        }\n    }\n\n    protected getConnection(connectionId: string, errorMessage: string): Promise<Connection> {\n        return new Promise<Connection>((resolve, reject) => {\n            const connection = this.remoteConnections.get(connectionId);\n            if (!!connection) {\n                // Resolve remote connection\n                resolve(connection);\n            } else {\n                if (this.connection.connectionId === connectionId) {\n                    // Resolve local connection\n                    resolve(this.connection);\n                } else {\n                    // Connection not found. Reject with OpenViduError\n                    reject(new OpenViduError(OpenViduErrorName.GENERIC_ERROR, errorMessage));\n                }\n            }\n        });\n    }\n\n    private getRemoteConnection(connectionId: string): Promise<Connection> {\n        return new Promise<Connection>((resolve, reject) => {\n            const connection = this.remoteConnections.get(connectionId);\n            if (!!connection) {\n                // Resolve remote connection\n                resolve(connection);\n            } else {\n                // Remote connection not found. Reject with OpenViduError\n                const errorMessage = 'Remote connection ' + connectionId + \" unknown when 'onParticipantLeft'. \" +\n                    'Existing remote connections: ' + JSON.stringify(this.remoteConnections.keys());\n\n                reject(new OpenViduError(OpenViduErrorName.GENERIC_ERROR, errorMessage));\n            }\n        });\n    }\n\n    private processToken(token: string): void {\n        const match = token.match(/^(wss?\\:)\\/\\/(([^:\\/?#]*)(?:\\:([0-9]+))?)([\\/]{0,1}[^?#]*)(\\?[^#]*|)(#.*|)$/);\n        if (!!match) {\n            const url = {\n                protocol: match[1],\n                host: match[2],\n                hostname: match[3],\n                port: match[4],\n                pathname: match[5],\n                search: match[6],\n                hash: match[7]\n            };\n\n            const params = token.split('?');\n            const queryParams = decodeURI(params[1])\n                .split('&')\n                .map(param => param.split('='))\n                .reduce((values, [key, value]) => {\n                    values[key] = value\n                    return values\n                }, {});\n\n            this.sessionId = <string>queryParams['sessionId'];\n            const secret = queryParams['secret'];\n            const recorder = queryParams['recorder'];\n            const webrtcStatsInterval = queryParams['webrtcStatsInterval'];\n\n            if (!!secret) {\n                this.openvidu.secret = secret;\n            }\n            if (!!recorder) {\n                this.openvidu.recorder = true;\n            }\n            if (!!webrtcStatsInterval) {\n                this.openvidu.webrtcStatsInterval = +webrtcStatsInterval;\n            }\n\n            this.openvidu.wsUri = 'wss://' + url.host + '/openvidu';\n            this.openvidu.httpUri = 'https://' + url.host;\n\n        } else {\n            logger.error('Token \"' + token + '\" is not valid')\n        }\n    }\n\n    private processJoinRoomResponse(opts: LocalConnectionOptions) {\n        this.sessionId = opts.session;\n        if (opts.coturnIp != null && opts.turnUsername != null && opts.turnCredential != null) {\n            const stunUrl = 'stun:' + opts.coturnIp + ':3478';\n            const turnUrl1 = 'turn:' + opts.coturnIp + ':3478';\n            const turnUrl2 = turnUrl1 + '?transport=tcp';\n            this.openvidu.iceServers = [\n                { urls: [stunUrl] },\n                { urls: [turnUrl1, turnUrl2], username: opts.turnUsername, credential: opts.turnCredential }\n            ];\n            logger.log(\"STUN/TURN server IP: \" + opts.coturnIp);\n            logger.log('TURN temp credentials [' + opts.turnUsername + ':' + opts.turnCredential + ']');\n        }\n        this.openvidu.role = opts.role;\n        this.capabilities = {\n            subscribe: true,\n            publish: this.openvidu.role !== 'SUBSCRIBER',\n            forceUnpublish: this.openvidu.role === 'MODERATOR',\n            forceDisconnect: this.openvidu.role === 'MODERATOR'\n        };\n        logger.info(\"openvidu-server version: \" + opts.version);\n        if (opts.version !== this.openvidu.libraryVersion) {\n            logger.warn('OpenVidu Server (' + opts.version +\n                ') and OpenVidu Browser (' + this.openvidu.libraryVersion +\n                ') versions do NOT match. There may be incompatibilities')\n        }\n    }\n\n}\n","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Connection } from './Connection';\nimport { Event } from '../OpenViduInternal/Events/Event';\nimport { Filter } from './Filter';\nimport { Session } from './Session';\nimport { StreamManager } from './StreamManager';\nimport { Subscriber } from './Subscriber';\nimport { EventDispatcher } from './EventDispatcher';\nimport { InboundStreamOptions } from '../OpenViduInternal/Interfaces/Private/InboundStreamOptions';\nimport { OutboundStreamOptions } from '../OpenViduInternal/Interfaces/Private/OutboundStreamOptions';\nimport { WebRtcPeer, WebRtcPeerSendonly, WebRtcPeerRecvonly, WebRtcPeerSendrecv } from '../OpenViduInternal/WebRtcPeer/WebRtcPeer';\nimport { WebRtcStats } from '../OpenViduInternal/WebRtcStats/WebRtcStats';\nimport { PublisherSpeakingEvent } from '../OpenViduInternal/Events/PublisherSpeakingEvent';\nimport { StreamManagerEvent } from '../OpenViduInternal/Events/StreamManagerEvent';\nimport { StreamPropertyChangedEvent } from '../OpenViduInternal/Events/StreamPropertyChangedEvent';\nimport { OpenViduError, OpenViduErrorName } from '../OpenViduInternal/Enums/OpenViduError';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\nimport { PlatformUtils } from '../OpenViduInternal/Utils/Platform';\n\n/**\n * @hidden\n */\nimport hark = require('hark');\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\n/**\n * Represents each one of the media streams available in OpenVidu Server for certain session.\n * Each [[Publisher]] and [[Subscriber]] has an attribute of type Stream, as they give access\n * to one of them (sending and receiving it, respectively)\n */\nexport class Stream extends EventDispatcher {\n\n    /**\n     * The Connection object that is publishing the stream\n     */\n    connection: Connection;\n\n    /**\n     * Frame rate of the video in frames per second. This property is only defined if the [[Publisher]] of\n     * the stream was initialized passing a _frameRate_ property on [[OpenVidu.initPublisher]] method\n     */\n    frameRate?: number;\n\n    /**\n     * Whether the stream has a video track or not\n     */\n    hasVideo: boolean;\n\n    /**\n     * Whether the stream has an audio track or not\n     */\n    hasAudio: boolean;\n\n    /**\n     * Whether the stream has the video track muted or unmuted. If [[hasVideo]] is false, this property is undefined.\n     *\n     * This property may change if the Publisher publishing the stream calls [[Publisher.publishVideo]]. Whenever this happens a [[StreamPropertyChangedEvent]] will be dispatched\n     * by the Session object as well as by the affected Subscriber/Publisher object\n     */\n    videoActive: boolean;\n\n    /**\n     * Whether the stream has the audio track muted or unmuted. If [[hasAudio]] is false, this property is undefined\n     *\n     * This property may change if the Publisher publishing the stream calls [[Publisher.publishAudio]]. Whenever this happens a [[StreamPropertyChangedEvent]] will be dispatched\n     * by the Session object as well as by the affected Subscriber/Publisher object\n     */\n    audioActive: boolean;\n\n    /**\n     * Unique identifier of the stream. If the stream belongs to a...\n     * - Subscriber object: property `streamId` is always defined\n     * - Publisher object: property `streamId` is only defined after successful execution of [[Session.publish]]\n     */\n    streamId: string;\n\n    /**\n     * Time when this stream was created in OpenVidu Server (UTC milliseconds). Depending on the owner of this stream:\n     * - Subscriber object: property `creationTime` is always defined\n     * - Publisher object: property `creationTime` is only defined after successful execution of [[Session.publish]]\n     */\n    creationTime: number;\n\n    /**\n     * Can be:\n     * - `\"CAMERA\"`: when the video source comes from a webcam.\n     * - `\"SCREEN\"`: when the video source comes from screen-sharing.\n     * - `\"CUSTOM\"`: when [[PublisherProperties.videoSource]] has been initialized in the Publisher side with a custom MediaStreamTrack when calling [[OpenVidu.initPublisher]]).\n     * - `\"IPCAM\"`: when the video source comes from an IP camera participant instead of a regular participant (see [IP cameras](/en/stable/advanced-features/ip-cameras/)).\n     *\n     * If [[hasVideo]] is false, this property is undefined\n     */\n    typeOfVideo?: string;\n\n    /**\n     * StreamManager object ([[Publisher]] or [[Subscriber]]) in charge of displaying this stream in the DOM\n     */\n    streamManager: StreamManager;\n\n    /**\n     * Width and height in pixels of the encoded video stream. If [[hasVideo]] is false, this property is undefined\n     *\n     * This property may change if the Publisher that is publishing:\n     * - If it is a mobile device, whenever the user rotates the device.\n     * - If it is screen-sharing, whenever the user changes the size of the captured window.\n     *\n     * Whenever this happens a [[StreamPropertyChangedEvent]] will be dispatched by the Session object as well as by the affected Subscriber/Publisher object\n     */\n    videoDimensions: { width: number, height: number };\n\n    /**\n     * **WARNING**: experimental option. This interface may change in the near future\n     *\n     * Filter applied to the Stream. You can apply filters by calling [[Stream.applyFilter]], execute methods of the applied filter with\n     * [[Filter.execMethod]] and remove it with [[Stream.removeFilter]]. Be aware that the client calling this methods must have the\n     * necessary permissions: the token owned by the client must have been initialized with the appropriated `allowedFilters` array.\n     */\n    filter?: Filter;\n\n    protected webRtcPeer: WebRtcPeer;\n    protected mediaStream?: MediaStream;\n    private webRtcStats: WebRtcStats;\n\n    private isSubscribeToRemote = false;\n\n    /**\n     * @hidden\n     */\n    isLocalStreamReadyToPublish = false;\n    /**\n     * @hidden\n     */\n    isLocalStreamPublished = false;\n    /**\n     * @hidden\n     */\n    publishedOnce = false;\n    /**\n     * @hidden\n     */\n    session: Session;\n    /**\n     * @hidden\n     */\n    inboundStreamOpts: InboundStreamOptions;\n    /**\n     * @hidden\n     */\n    outboundStreamOpts: OutboundStreamOptions;\n    /**\n     * @hidden\n     */\n    speechEvent: any;\n    /**\n     * @hidden\n     */\n    publisherStartSpeakingEventEnabled = false;\n    /**\n     * @hidden\n     */\n    publisherStartSpeakingEventEnabledOnce = false;\n    /**\n     * @hidden\n     */\n    publisherStopSpeakingEventEnabled = false;\n    /**\n     * @hidden\n     */\n    publisherStopSpeakingEventEnabledOnce = false;\n    /**\n     * @hidden\n     */\n    volumeChangeEventEnabled = false;\n    /**\n     * @hidden\n     */\n    volumeChangeEventEnabledOnce = false;\n    /**\n     * @hidden\n     */\n    harkOptions;\n    /**\n     * @hidden\n     */\n    localMediaStreamWhenSubscribedToRemote?: MediaStream;\n\n\n    /**\n     * @hidden\n     */\n    constructor(session: Session, options: InboundStreamOptions | OutboundStreamOptions | {}) {\n\n        super();\n        platform = PlatformUtils.getInstance();\n        this.session = session;\n\n        if (options.hasOwnProperty('id')) {\n            // InboundStreamOptions: stream belongs to a Subscriber\n            this.inboundStreamOpts = <InboundStreamOptions>options;\n            this.streamId = this.inboundStreamOpts.id;\n            this.creationTime = this.inboundStreamOpts.createdAt;\n            this.hasAudio = this.inboundStreamOpts.hasAudio;\n            this.hasVideo = this.inboundStreamOpts.hasVideo;\n            if (this.hasAudio) {\n                this.audioActive = this.inboundStreamOpts.audioActive;\n            }\n            if (this.hasVideo) {\n                this.videoActive = this.inboundStreamOpts.videoActive;\n                this.typeOfVideo = (!this.inboundStreamOpts.typeOfVideo) ? undefined : this.inboundStreamOpts.typeOfVideo;\n                this.frameRate = (this.inboundStreamOpts.frameRate === -1) ? undefined : this.inboundStreamOpts.frameRate;\n                this.videoDimensions = this.inboundStreamOpts.videoDimensions;\n            }\n            if (!!this.inboundStreamOpts.filter && (Object.keys(this.inboundStreamOpts.filter).length > 0)) {\n                if (!!this.inboundStreamOpts.filter.lastExecMethod && Object.keys(this.inboundStreamOpts.filter.lastExecMethod).length === 0) {\n                    delete this.inboundStreamOpts.filter.lastExecMethod;\n                }\n                this.filter = this.inboundStreamOpts.filter;\n            }\n        } else {\n            // OutboundStreamOptions: stream belongs to a Publisher\n            this.outboundStreamOpts = <OutboundStreamOptions>options;\n\n            this.hasAudio = this.isSendAudio();\n            this.hasVideo = this.isSendVideo();\n\n            if (this.hasAudio) {\n                this.audioActive = !!this.outboundStreamOpts.publisherProperties.publishAudio;\n            }\n            if (this.hasVideo) {\n                this.videoActive = !!this.outboundStreamOpts.publisherProperties.publishVideo;\n                this.frameRate = this.outboundStreamOpts.publisherProperties.frameRate;\n                if (typeof MediaStreamTrack !== 'undefined' && this.outboundStreamOpts.publisherProperties.videoSource instanceof MediaStreamTrack) {\n                    this.typeOfVideo = 'CUSTOM';\n                } else {\n                    this.typeOfVideo = this.isSendScreen() ? 'SCREEN' : 'CAMERA';\n                }\n            }\n            if (!!this.outboundStreamOpts.publisherProperties.filter) {\n                this.filter = this.outboundStreamOpts.publisherProperties.filter;\n            }\n        }\n\n        this.ee.on('mediastream-updated', () => {\n            this.streamManager.updateMediaStream(this.mediaStream!);\n            logger.debug('Video srcObject [' + this.mediaStream + '] updated in stream [' + this.streamId + ']');\n        });\n    }\n\n\n    /**\n     * See [[EventDispatcher.on]]\n     */\n    on(type: string, handler: (event: Event) => void): EventDispatcher {\n        super.onAux(type, \"Event '\" + type + \"' triggered by stream '\" + this.streamId + \"'\", handler);\n        return this;\n    }\n\n\n    /**\n     * See [[EventDispatcher.once]]\n     */\n    once(type: string, handler: (event: Event) => void): EventDispatcher {\n        super.onceAux(type, \"Event '\" + type + \"' triggered once by stream '\" + this.streamId + \"'\", handler);\n        return this;\n    }\n\n\n    /**\n     * See [[EventDispatcher.off]]\n     */\n    off(type: string, handler?: (event: Event) => void): EventDispatcher {\n        super.off(type, handler);\n        return this;\n    }\n\n\n    /**\n     * Applies an audio/video filter to the stream.\n     *\n     * @param type Type of filter applied. See [[Filter.type]]\n     * @param options Parameters used to initialize the filter. See [[Filter.options]]\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved to the applied filter if success and rejected with an Error object if not\n     */\n    applyFilter(type: string, options: Object): Promise<Filter> {\n        return new Promise((resolve, reject) => {\n            logger.info('Applying filter to stream ' + this.streamId);\n            options = !!options ? options : {};\n            if (typeof options !== 'string') {\n                options = JSON.stringify(options);\n            }\n            this.session.openvidu.sendRequest(\n                'applyFilter',\n                { streamId: this.streamId, type, options },\n                (error, response) => {\n                    if (error) {\n                        logger.error('Error applying filter for Stream ' + this.streamId, error);\n                        if (error.code === 401) {\n                            reject(new OpenViduError(OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to apply a filter\"));\n                        } else {\n                            reject(error);\n                        }\n                    } else {\n                        logger.info('Filter successfully applied on Stream ' + this.streamId);\n                        const oldValue: Filter = this.filter!;\n                        this.filter = new Filter(type, options);\n                        this.filter.stream = this;\n                        this.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent(this.session, this, 'filter', this.filter, oldValue, 'applyFilter')]);\n                        this.streamManager.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent(this.streamManager, this, 'filter', this.filter, oldValue, 'applyFilter')]);\n                        resolve(this.filter);\n                    }\n                }\n            );\n        });\n    }\n\n    /**\n     * Removes an audio/video filter previously applied.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the previously applied filter has been successfully removed and rejected with an Error object in other case\n     */\n    removeFilter(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            logger.info('Removing filter of stream ' + this.streamId);\n            this.session.openvidu.sendRequest(\n                'removeFilter',\n                { streamId: this.streamId },\n                (error, response) => {\n                    if (error) {\n                        logger.error('Error removing filter for Stream ' + this.streamId, error);\n                        if (error.code === 401) {\n                            reject(new OpenViduError(OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to remove a filter\"));\n                        } else {\n                            reject(error);\n                        }\n                    } else {\n                        logger.info('Filter successfully removed from Stream ' + this.streamId);\n                        const oldValue = this.filter!;\n                        delete this.filter;\n                        this.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent(this.session, this, 'filter', this.filter!, oldValue, 'applyFilter')]);\n                        this.streamManager.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent(this.streamManager, this, 'filter', this.filter!, oldValue, 'applyFilter')]);\n                        resolve();\n                    }\n                }\n            );\n        });\n    }\n\n    /**\n     * Returns the internal RTCPeerConnection object associated to this stream (https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection)\n     *\n     * @returns Native RTCPeerConnection Web API object\n     */\n    getRTCPeerConnection(): RTCPeerConnection {\n        return this.webRtcPeer.pc;\n    }\n\n    /**\n     * Returns the internal MediaStream object associated to this stream (https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\n     *\n     * @returns Native MediaStream Web API object\n     */\n    getMediaStream(): MediaStream {\n        return this.mediaStream!;\n    }\n\n    /* Hidden methods */\n\n    /**\n     * @hidden\n     */\n    setMediaStream(mediaStream: MediaStream): void {\n        this.mediaStream = mediaStream;\n    }\n\n    /**\n     * @hidden\n     */\n    updateMediaStreamInVideos() {\n        this.ee.emitEvent('mediastream-updated', []);\n    }\n\n    /**\n     * @hidden\n     */\n    getWebRtcPeer(): WebRtcPeer {\n        return this.webRtcPeer;\n    }\n\n    /**\n     * @hidden\n     */\n    subscribeToMyRemote(value: boolean): void {\n        this.isSubscribeToRemote = value;\n    }\n\n    /**\n     * @hidden\n     */\n    setOutboundStreamOptions(outboundStreamOpts: OutboundStreamOptions): void {\n        this.outboundStreamOpts = outboundStreamOpts;\n    }\n\n    /**\n     * @hidden\n     */\n    subscribe(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.initWebRtcPeerReceive(false)\n                .then(() => {\n                    resolve();\n                })\n                .catch(error => {\n                    reject(error);\n                });\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    publish(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (this.isLocalStreamReadyToPublish) {\n                this.initWebRtcPeerSend(false)\n                    .then(() => {\n                        resolve();\n                    })\n                    .catch(error => {\n                        reject(error);\n                    });\n            } else {\n                this.ee.once('stream-ready-to-publish', () => {\n                    this.publish()\n                        .then(() => {\n                            resolve();\n                        })\n                        .catch(error => {\n                            reject(error);\n                        });\n                });\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    disposeWebRtcPeer(): void {\n        if (!!this.webRtcPeer) {\n            this.webRtcPeer.dispose();\n            this.stopWebRtcStats();\n        }\n        logger.info((!!this.outboundStreamOpts ? 'Outbound ' : 'Inbound ') + \"WebRTCPeer from 'Stream' with id [\" + this.streamId + '] is now closed');\n    }\n\n    /**\n     * @hidden\n     */\n    disposeMediaStream(): void {\n        if (this.mediaStream) {\n            this.mediaStream.getAudioTracks().forEach((track) => {\n                track.stop();\n            });\n            this.mediaStream.getVideoTracks().forEach((track) => {\n                track.stop();\n            });\n            delete this.mediaStream;\n        }\n        // If subscribeToRemote local MediaStream must be stopped\n        if (this.localMediaStreamWhenSubscribedToRemote) {\n            this.localMediaStreamWhenSubscribedToRemote.getAudioTracks().forEach((track) => {\n                track.stop();\n            });\n            this.localMediaStreamWhenSubscribedToRemote.getVideoTracks().forEach((track) => {\n                track.stop();\n            });\n            delete this.localMediaStreamWhenSubscribedToRemote;\n        }\n        if (!!this.speechEvent) {\n            if (!!this.speechEvent.stop) {\n                this.speechEvent.stop();\n            }\n            delete this.speechEvent;\n        }\n        logger.info((!!this.outboundStreamOpts ? 'Local ' : 'Remote ') + \"MediaStream from 'Stream' with id [\" + this.streamId + '] is now disposed');\n    }\n\n    /**\n     * @hidden\n     */\n    displayMyRemote(): boolean {\n        return this.isSubscribeToRemote;\n    }\n\n    /**\n     * @hidden\n     */\n    isSendAudio(): boolean {\n        return (!!this.outboundStreamOpts &&\n            this.outboundStreamOpts.publisherProperties.audioSource !== null &&\n            this.outboundStreamOpts.publisherProperties.audioSource !== false);\n    }\n\n    /**\n     * @hidden\n     */\n    isSendVideo(): boolean {\n        return (!!this.outboundStreamOpts &&\n            this.outboundStreamOpts.publisherProperties.videoSource !== null &&\n            this.outboundStreamOpts.publisherProperties.videoSource !== false);\n    }\n\n    /**\n     * @hidden\n     */\n    isSendScreen(): boolean {\n        let screen = this.outboundStreamOpts.publisherProperties.videoSource === 'screen';\n        if (platform.isElectron()) {\n            screen = typeof this.outboundStreamOpts.publisherProperties.videoSource === 'string' &&\n                this.outboundStreamOpts.publisherProperties.videoSource.startsWith('screen:');\n        }\n        return !!this.outboundStreamOpts && screen;\n    }\n\n    /**\n     * @hidden\n     */\n    enableStartSpeakingEvent(): void {\n        this.setSpeechEventIfNotExists();\n        if (!this.publisherStartSpeakingEventEnabled) {\n            this.publisherStartSpeakingEventEnabled = true;\n            this.speechEvent.on('speaking', () => {\n                this.session.emitEvent('publisherStartSpeaking', [new PublisherSpeakingEvent(this.session, 'publisherStartSpeaking', this.connection, this.streamId)]);\n                this.publisherStartSpeakingEventEnabledOnce = false; // Disable 'once' version if 'on' version was triggered\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    enableOnceStartSpeakingEvent(): void {\n        this.setSpeechEventIfNotExists();\n        if (!this.publisherStartSpeakingEventEnabledOnce) {\n            this.publisherStartSpeakingEventEnabledOnce = true;\n            this.speechEvent.once('speaking', () => {\n                if (this.publisherStartSpeakingEventEnabledOnce) {\n                    // If the listener has been disabled in the meantime (for example by the 'on' version) do not trigger the event\n                    this.session.emitEvent('publisherStartSpeaking', [new PublisherSpeakingEvent(this.session, 'publisherStartSpeaking', this.connection, this.streamId)]);\n                }\n                this.disableStartSpeakingEvent(true);\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    disableStartSpeakingEvent(disabledByOnce: boolean): void {\n        if (!!this.speechEvent) {\n            this.publisherStartSpeakingEventEnabledOnce = false;\n            if (disabledByOnce) {\n                if (this.publisherStartSpeakingEventEnabled) {\n                    // The 'on' version of this same event is enabled too. Do not remove the hark listener\n                    return;\n                }\n            } else {\n                this.publisherStartSpeakingEventEnabled = false;\n            }\n            // Shutting down the hark event\n            if (this.volumeChangeEventEnabled ||\n                this.volumeChangeEventEnabledOnce ||\n                this.publisherStopSpeakingEventEnabled ||\n                this.publisherStopSpeakingEventEnabledOnce) {\n                // Some other hark event is enabled. Cannot stop the hark process, just remove the specific listener\n                this.speechEvent.off('speaking');\n            } else {\n                // No other hark event is enabled. We can get entirely rid of it\n                this.speechEvent.stop();\n                delete this.speechEvent;\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    enableStopSpeakingEvent(): void {\n        this.setSpeechEventIfNotExists();\n        if (!this.publisherStopSpeakingEventEnabled) {\n            this.publisherStopSpeakingEventEnabled = true;\n            this.speechEvent.on('stopped_speaking', () => {\n                this.session.emitEvent('publisherStopSpeaking', [new PublisherSpeakingEvent(this.session, 'publisherStopSpeaking', this.connection, this.streamId)]);\n                this.publisherStopSpeakingEventEnabledOnce = false; // Disable 'once' version if 'on' version was triggered\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    enableOnceStopSpeakingEvent(): void {\n        this.setSpeechEventIfNotExists();\n        if (!this.publisherStopSpeakingEventEnabledOnce) {\n            this.publisherStopSpeakingEventEnabledOnce = true;\n            this.speechEvent.once('stopped_speaking', () => {\n                if (this.publisherStopSpeakingEventEnabledOnce) {\n                    // If the listener has been disabled in the meantime (for example by the 'on' version) do not trigger the event\n                    this.session.emitEvent('publisherStopSpeaking', [new PublisherSpeakingEvent(this.session, 'publisherStopSpeaking', this.connection, this.streamId)]);\n                }\n                this.disableStopSpeakingEvent(true);\n            });\n        }\n    }\n\n    /**\n    * @hidden\n    */\n    disableStopSpeakingEvent(disabledByOnce: boolean): void {\n        if (!!this.speechEvent) {\n            this.publisherStopSpeakingEventEnabledOnce = false;\n            if (disabledByOnce) {\n                if (this.publisherStopSpeakingEventEnabled) {\n                    // We are cancelling the 'once' listener for this event, but the 'on' version\n                    // of this same event is enabled too. Do not remove the hark listener\n                    return;\n                }\n            } else {\n                this.publisherStopSpeakingEventEnabled = false;\n            }\n            // Shutting down the hark event\n            if (this.volumeChangeEventEnabled ||\n                this.volumeChangeEventEnabledOnce ||\n                this.publisherStartSpeakingEventEnabled ||\n                this.publisherStartSpeakingEventEnabledOnce) {\n                // Some other hark event is enabled. Cannot stop the hark process, just remove the specific listener\n                this.speechEvent.off('stopped_speaking');\n            } else {\n                // No other hark event is enabled. We can get entirely rid of it\n                this.speechEvent.stop();\n                delete this.speechEvent;\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    enableVolumeChangeEvent(force: boolean): void {\n        if (this.setSpeechEventIfNotExists()) {\n            if (!this.volumeChangeEventEnabled || force) {\n                this.volumeChangeEventEnabled = true;\n                this.speechEvent.on('volume_change', harkEvent => {\n                    const oldValue = this.speechEvent.oldVolumeValue;\n                    const value = { newValue: harkEvent, oldValue };\n                    this.speechEvent.oldVolumeValue = harkEvent;\n                    this.streamManager.emitEvent('streamAudioVolumeChange', [new StreamManagerEvent(this.streamManager, 'streamAudioVolumeChange', value)]);\n                });\n            }\n        } else {\n            // This way whenever the MediaStream object is available, the event listener will be automatically added\n            this.volumeChangeEventEnabled = true;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    enableOnceVolumeChangeEvent(force: boolean): void {\n        if (this.setSpeechEventIfNotExists()) {\n            if (!this.volumeChangeEventEnabledOnce || force) {\n                this.volumeChangeEventEnabledOnce = true;\n                this.speechEvent.once('volume_change', harkEvent => {\n                    const oldValue = this.speechEvent.oldVolumeValue;\n                    const value = { newValue: harkEvent, oldValue };\n                    this.speechEvent.oldVolumeValue = harkEvent;\n                    this.disableVolumeChangeEvent(true);\n                    this.streamManager.emitEvent('streamAudioVolumeChange', [new StreamManagerEvent(this.streamManager, 'streamAudioVolumeChange', value)]);\n                });\n            }\n        } else {\n            // This way whenever the MediaStream object is available, the event listener will be automatically added\n            this.volumeChangeEventEnabledOnce = true;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    disableVolumeChangeEvent(disabledByOnce: boolean): void {\n        if (!!this.speechEvent) {\n            this.volumeChangeEventEnabledOnce = false;\n            if (disabledByOnce) {\n                if (this.volumeChangeEventEnabled) {\n                    // We are cancelling the 'once' listener for this event, but the 'on' version\n                    // of this same event is enabled too. Do not remove the hark listener\n                    return;\n                }\n            } else {\n                this.volumeChangeEventEnabled = false;\n            }\n            // Shutting down the hark event\n            if (this.publisherStartSpeakingEventEnabled ||\n                this.publisherStartSpeakingEventEnabledOnce ||\n                this.publisherStopSpeakingEventEnabled ||\n                this.publisherStopSpeakingEventEnabledOnce) {\n                // Some other hark event is enabled. Cannot stop the hark process, just remove the specific listener\n                this.speechEvent.off('volume_change');\n            } else {\n                // No other hark event is enabled. We can get entirely rid of it\n                this.speechEvent.stop();\n                delete this.speechEvent;\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    isLocal(): boolean {\n        // inbound options undefined and outbound options defined\n        return (!this.inboundStreamOpts && !!this.outboundStreamOpts);\n    }\n\n    /**\n     * @hidden\n     */\n    getSelectedIceCandidate(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.webRtcStats.getSelectedIceCandidateInfo()\n                .then(report => resolve(report))\n                .catch(error => reject(error));\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    getRemoteIceCandidateList(): RTCIceCandidate[] {\n        return this.webRtcPeer.remoteCandidatesQueue;\n    }\n\n    /**\n     * @hidden\n     */\n    getLocalIceCandidateList(): RTCIceCandidate[] {\n        return this.webRtcPeer.localCandidatesQueue;\n    }\n\n    /**\n     * @hidden\n     */\n    streamIceConnectionStateBroken() {\n        if (!this.getWebRtcPeer() || !this.getRTCPeerConnection()) {\n            return false;\n        }\n        if (this.isLocal() && !!this.session.openvidu.advancedConfiguration.forceMediaReconnectionAfterNetworkDrop) {\n            logger.warn('OpenVidu Browser advanced configuration option \"forceMediaReconnectionAfterNetworkDrop\" is enabled. Stream ' + this.streamId + ' will force a reconnection');\n            return true;\n        }\n        const iceConnectionState: RTCIceConnectionState = this.getRTCPeerConnection().iceConnectionState;\n        return iceConnectionState === 'disconnected' || iceConnectionState === 'failed';\n    }\n\n    /* Private methods */\n\n    private setSpeechEventIfNotExists(): boolean {\n        if (!!this.mediaStream) {\n            if (!this.speechEvent) {\n                const harkOptions = !!this.harkOptions ? this.harkOptions : (this.session.openvidu.advancedConfiguration.publisherSpeakingEventsOptions || {});\n                harkOptions.interval = (typeof harkOptions.interval === 'number') ? harkOptions.interval : 100;\n                harkOptions.threshold = (typeof harkOptions.threshold === 'number') ? harkOptions.threshold : -50;\n                this.speechEvent = hark(this.mediaStream, harkOptions);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @hidden\n     */\n    initWebRtcPeerSend(reconnect: boolean): Promise<any> {\n        return new Promise((resolve, reject) => {\n\n            if (!reconnect) {\n                this.initHarkEvents(); // Init hark events for the local stream\n            }\n\n            const userMediaConstraints = {\n                audio: this.isSendAudio(),\n                video: this.isSendVideo()\n            };\n\n            const options = {\n                mediaStream: this.mediaStream,\n                mediaConstraints: userMediaConstraints,\n                onicecandidate: this.connection.sendIceCandidate.bind(this.connection),\n                iceServers: this.getIceServersConf(),\n                simulcast: false\n            };\n\n            const successCallback = (sdpOfferParam) => {\n                logger.debug('Sending SDP offer to publish as '\n                    + this.streamId, sdpOfferParam);\n\n                const method = reconnect ? 'reconnectStream' : 'publishVideo';\n                let params;\n                if (reconnect) {\n                    params = {\n                        stream: this.streamId\n                    }\n                } else {\n                    let typeOfVideo = '';\n                    if (this.isSendVideo()) {\n                        typeOfVideo = (typeof MediaStreamTrack !== 'undefined' && this.outboundStreamOpts.publisherProperties.videoSource instanceof MediaStreamTrack) ? 'CUSTOM' : (this.isSendScreen() ? 'SCREEN' : 'CAMERA');\n                    }\n                    params = {\n                        doLoopback: this.displayMyRemote() || false,\n                        hasAudio: this.isSendAudio(),\n                        hasVideo: this.isSendVideo(),\n                        audioActive: this.audioActive,\n                        videoActive: this.videoActive,\n                        typeOfVideo,\n                        frameRate: !!this.frameRate ? this.frameRate : -1,\n                        videoDimensions: JSON.stringify(this.videoDimensions),\n                        filter: this.outboundStreamOpts.publisherProperties.filter\n                    }\n                }\n                params['sdpOffer'] = sdpOfferParam;\n\n                this.session.openvidu.sendRequest(method, params, (error, response) => {\n                    if (error) {\n                        if (error.code === 401) {\n                            reject(new OpenViduError(OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to publish\"));\n                        } else {\n                            reject('Error on publishVideo: ' + JSON.stringify(error));\n                        }\n                    } else {\n                        this.webRtcPeer.processAnswer(response.sdpAnswer, false)\n                            .then(() => {\n                                this.streamId = response.id;\n                                this.creationTime = response.createdAt;\n                                this.isLocalStreamPublished = true;\n                                this.publishedOnce = true;\n                                if (this.displayMyRemote()) {\n                                    this.localMediaStreamWhenSubscribedToRemote = this.mediaStream;\n                                    this.remotePeerSuccessfullyEstablished();\n                                }\n                                if (reconnect) {\n                                    this.ee.emitEvent('stream-reconnected-by-publisher', []);\n                                } else {\n                                    this.ee.emitEvent('stream-created-by-publisher', []);\n                                }\n                                this.initWebRtcStats();\n                                logger.info(\"'Publisher' (\" + this.streamId + \") successfully \" + (reconnect ? \"reconnected\" : \"published\") + \" to session\");\n                                resolve();\n                            })\n                            .catch(error => {\n                                reject(error);\n                            });\n                    }\n                });\n            };\n\n            if (reconnect) {\n                this.disposeWebRtcPeer();\n            }\n            if (this.displayMyRemote()) {\n                this.webRtcPeer = new WebRtcPeerSendrecv(options);\n            } else {\n                this.webRtcPeer = new WebRtcPeerSendonly(options);\n            }\n            this.webRtcPeer.addIceConnectionStateChangeListener('publisher of ' + this.connection.connectionId);\n            this.webRtcPeer.generateOffer().then(sdpOffer => {\n                successCallback(sdpOffer);\n            }).catch(error => {\n                reject(new Error('(publish) SDP offer error: ' + JSON.stringify(error)));\n            });\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    initWebRtcPeerReceive(reconnect: boolean): Promise<any> {\n        return new Promise((resolve, reject) => {\n\n            const offerConstraints = {\n                audio: this.inboundStreamOpts.hasAudio,\n                video: this.inboundStreamOpts.hasVideo\n            };\n            logger.debug(\"'Session.subscribe(Stream)' called. Constraints of generate SDP offer\",\n                offerConstraints);\n            const options = {\n                onicecandidate: this.connection.sendIceCandidate.bind(this.connection),\n                mediaConstraints: offerConstraints,\n                iceServers: this.getIceServersConf(),\n                simulcast: false\n            };\n\n            const successCallback = (sdpOfferParam) => {\n                logger.debug('Sending SDP offer to subscribe to '\n                    + this.streamId, sdpOfferParam);\n\n                const method = reconnect ? 'reconnectStream' : 'receiveVideoFrom';\n                const params = { sdpOffer: sdpOfferParam };\n                params[reconnect ? 'stream' : 'sender'] = this.streamId;\n\n                this.session.openvidu.sendRequest(method, params, (error, response) => {\n                    if (error) {\n                        reject(new Error('Error on recvVideoFrom: ' + JSON.stringify(error)));\n                    } else {\n                        // Ios Ionic. Limitation: some bug in iosrtc cordova plugin makes it necessary\n                        // to add a timeout before calling PeerConnection#setRemoteDescription during\n                        // some time (400 ms) from the moment first subscriber stream is received\n                        if (this.session.isFirstIonicIosSubscriber) {\n                            this.session.isFirstIonicIosSubscriber = false;\n                            setTimeout(() => {\n                                // After 400 ms Ionic iOS subscribers won't need to run\n                                // PeerConnection#setRemoteDescription after 250 ms timeout anymore\n                                this.session.countDownForIonicIosSubscribersActive = false;\n                            }, 400);\n                        }\n                        const needsTimeoutOnProcessAnswer = this.session.countDownForIonicIosSubscribersActive;\n                        this.webRtcPeer.processAnswer(response.sdpAnswer, needsTimeoutOnProcessAnswer).then(() => {\n                            logger.info(\"'Subscriber' (\" + this.streamId + \") successfully \" + (reconnect ? \"reconnected\" : \"subscribed\"));\n                            this.remotePeerSuccessfullyEstablished();\n                            this.initWebRtcStats();\n                            resolve();\n                        }).catch(error => {\n                            reject(error);\n                        });\n                    }\n                });\n            };\n\n            this.webRtcPeer = new WebRtcPeerRecvonly(options);\n            this.webRtcPeer.addIceConnectionStateChangeListener(this.streamId);\n            this.webRtcPeer.generateOffer()\n                .then(sdpOffer => {\n                    successCallback(sdpOffer);\n                })\n                .catch(error => {\n                    reject(new Error('(subscribe) SDP offer error: ' + JSON.stringify(error)));\n                });\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    remotePeerSuccessfullyEstablished(): void {\n        this.mediaStream = new MediaStream();\n        let receiver: RTCRtpReceiver;\n        for (receiver of this.webRtcPeer.pc.getReceivers()) {\n            if (!!receiver.track) {\n                this.mediaStream.addTrack(receiver.track);\n            }\n        }\n        logger.debug('Peer remote stream', this.mediaStream);\n\n        if (!!this.mediaStream) {\n\n            if (this.streamManager instanceof Subscriber) {\n                // Apply SubscriberProperties.subscribeToAudio and SubscriberProperties.subscribeToVideo\n                if (!!this.mediaStream.getAudioTracks()[0]) {\n                    const enabled = !!((<Subscriber>this.streamManager).properties.subscribeToAudio);\n                    this.mediaStream.getAudioTracks()[0].enabled = enabled;\n                }\n                if (!!this.mediaStream.getVideoTracks()[0]) {\n                    const enabled = !!((<Subscriber>this.streamManager).properties.subscribeToVideo);\n                    this.mediaStream.getVideoTracks()[0].enabled = enabled;\n                }\n            }\n\n            this.updateMediaStreamInVideos();\n            this.initHarkEvents(); // Init hark events for the remote stream\n        }\n    }\n\n    private initHarkEvents(): void {\n        if (!!this.mediaStream!.getAudioTracks()[0]) {\n            // Hark events can only be set if audio track is available\n            if (this.streamManager.remote) {\n                // publisherStartSpeaking/publisherStopSpeaking is only defined for remote streams\n                if (this.session.startSpeakingEventsEnabled) {\n                    this.enableStartSpeakingEvent();\n                }\n                if (this.session.startSpeakingEventsEnabledOnce) {\n                    this.enableOnceStartSpeakingEvent();\n                }\n                if (this.session.stopSpeakingEventsEnabled) {\n                    this.enableStopSpeakingEvent();\n                }\n                if (this.session.stopSpeakingEventsEnabledOnce) {\n                    this.enableOnceStopSpeakingEvent();\n                }\n            }\n            // streamAudioVolumeChange event is defined for both Publishers and Subscribers\n            if (this.volumeChangeEventEnabled) {\n                this.enableVolumeChangeEvent(true);\n            }\n            if (this.volumeChangeEventEnabledOnce) {\n                this.enableOnceVolumeChangeEvent(true);\n            }\n        }\n    }\n\n    private initWebRtcStats(): void {\n        this.webRtcStats = new WebRtcStats(this);\n        this.webRtcStats.initWebRtcStats();\n\n        //TODO: send common webrtc stats from client to openvidu-server\n        /*if (this.session.openvidu.webrtcStatsInterval > 0) {\n            setInterval(() => {\n                this.gatherStatsForPeer().then(jsonStats => {\n                    const body = {\n                        sessionId: this.session.sessionId,\n                        participantPrivateId: this.connection.rpcSessionId,\n                        stats: jsonStats\n                    }\n                    var xhr = new XMLHttpRequest();\n                    xhr.open('POST', this.session.openvidu.httpUri + '/elasticsearch/webrtc-stats', true);\n                    xhr.setRequestHeader('Content-Type', 'application/json');\n                    xhr.send(JSON.stringify(body));\n                })\n            }, this.session.openvidu.webrtcStatsInterval * 1000);\n        }*/\n    }\n\n    private stopWebRtcStats(): void {\n        if (!!this.webRtcStats && this.webRtcStats.isEnabled()) {\n            this.webRtcStats.stopWebRtcStats();\n        }\n    }\n\n    private getIceServersConf(): RTCIceServer[] | undefined {\n        let returnValue;\n        if (!!this.session.openvidu.advancedConfiguration.iceServers) {\n            returnValue = this.session.openvidu.advancedConfiguration.iceServers === 'freeice' ?\n                undefined :\n                this.session.openvidu.advancedConfiguration.iceServers;\n        } else if (this.session.openvidu.iceServers) {\n            returnValue = this.session.openvidu.iceServers;\n        } else {\n            returnValue = undefined;\n        }\n        return returnValue;\n    }\n\n    private gatherStatsForPeer(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (this.isLocal()) {\n\n                // Publisher stream stats\n\n                this.getRTCPeerConnection().getSenders().forEach(sender => sender.getStats()\n                    .then(\n                        response => {\n                            response.forEach(report => {\n\n                                if (this.isReportWanted(report)) {\n\n                                    const finalReport = {};\n\n                                    finalReport['type'] = report.type;\n                                    finalReport['timestamp'] = report.timestamp;\n                                    finalReport['id'] = report.id;\n\n                                    // Common to Chrome, Firefox and Safari\n                                    if (report.type === 'outbound-rtp') {\n                                        finalReport['ssrc'] = report.ssrc;\n                                        finalReport['firCount'] = report.firCount;\n                                        finalReport['pliCount'] = report.pliCount;\n                                        finalReport['nackCount'] = report.nackCount;\n                                        finalReport['qpSum'] = report.qpSum;\n\n                                        // Set media type\n                                        if (!!report.kind) {\n                                            finalReport['mediaType'] = report.kind;\n                                        } else if (!!report.mediaType) {\n                                            finalReport['mediaType'] = report.mediaType;\n                                        } else {\n                                            // Safari does not have 'mediaType' defined for inbound-rtp. Must be inferred from 'id' field\n                                            finalReport['mediaType'] = (report.id.indexOf('VideoStream') !== -1) ? 'video' : 'audio';\n                                        }\n\n                                        if (finalReport['mediaType'] === 'video') {\n                                            finalReport['framesEncoded'] = report.framesEncoded;\n                                        }\n\n                                        finalReport['packetsSent'] = report.packetsSent;\n                                        finalReport['bytesSent'] = report.bytesSent;\n                                    }\n\n                                    // Only for Chrome and Safari\n                                    if (report.type === 'candidate-pair' && report.totalRoundTripTime !== undefined) {\n                                        // This is the final selected candidate pair\n                                        finalReport['availableOutgoingBitrate'] = report.availableOutgoingBitrate;\n                                        finalReport['rtt'] = report.currentRoundTripTime;\n                                        finalReport['averageRtt'] = report.totalRoundTripTime / report.responsesReceived;\n                                    }\n\n                                    // Only for Firefox >= 66.0\n                                    if (report.type === 'remote-inbound-rtp' || report.type === 'remote-outbound-rtp') {\n\n                                    }\n\n                                    logger.log(finalReport);\n                                }\n                            });\n                        }));\n            } else {\n\n                // Subscriber stream stats\n\n                this.getRTCPeerConnection().getReceivers().forEach(receiver => receiver.getStats()\n                    .then(\n                        response => {\n                            response.forEach(report => {\n\n                                if (this.isReportWanted(report)) {\n\n                                    const finalReport = {};\n\n                                    finalReport['type'] = report.type;\n                                    finalReport['timestamp'] = report.timestamp;\n                                    finalReport['id'] = report.id;\n\n                                    // Common to Chrome, Firefox and Safari\n                                    if (report.type === 'inbound-rtp') {\n                                        finalReport['ssrc'] = report.ssrc;\n                                        finalReport['firCount'] = report.firCount;\n                                        finalReport['pliCount'] = report.pliCount;\n                                        finalReport['nackCount'] = report.nackCount;\n                                        finalReport['qpSum'] = report.qpSum;\n\n                                        // Set media type\n                                        if (!!report.kind) {\n                                            finalReport['mediaType'] = report.kind;\n                                        } else if (!!report.mediaType) {\n                                            finalReport['mediaType'] = report.mediaType;\n                                        } else {\n                                            // Safari does not have 'mediaType' defined for inbound-rtp. Must be inferred from 'id' field\n                                            finalReport['mediaType'] = (report.id.indexOf('VideoStream') !== -1) ? 'video' : 'audio';\n                                        }\n\n                                        if (finalReport['mediaType'] === 'video') {\n                                            finalReport['framesDecoded'] = report.framesDecoded;\n                                        }\n\n                                        finalReport['packetsReceived'] = report.packetsReceived;\n                                        finalReport['packetsLost'] = report.packetsLost;\n                                        finalReport['jitter'] = report.jitter;\n                                        finalReport['bytesReceived'] = report.bytesReceived;\n                                    }\n\n                                    // Only for Chrome and Safari\n                                    if (report.type === 'candidate-pair' && report.totalRoundTripTime !== undefined) {\n                                        // This is the final selected candidate pair\n                                        finalReport['availableIncomingBitrate'] = report.availableIncomingBitrate;\n                                        finalReport['rtt'] = report.currentRoundTripTime;\n                                        finalReport['averageRtt'] = report.totalRoundTripTime / report.responsesReceived;\n                                    }\n\n                                    // Only for Firefox >= 66.0\n                                    if (report.type === 'remote-inbound-rtp' || report.type === 'remote-outbound-rtp') {\n\n                                    }\n                                    logger.log(finalReport);\n                                }\n                            })\n                        })\n                )\n            }\n        });\n    }\n\n    private isReportWanted(report: any): boolean {\n        return report.type === 'inbound-rtp' && !this.isLocal() ||\n            report.type === 'outbound-rtp' && this.isLocal() ||\n            (report.type === 'candidate-pair' && report.nominated && report.bytesSent > 0);\n    }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Stream } from './Stream';\nimport { EventDispatcher } from './EventDispatcher';\nimport { StreamManagerVideo } from '../OpenViduInternal/Interfaces/Public/StreamManagerVideo';\nimport { Event } from '../OpenViduInternal/Events/Event';\nimport { StreamManagerEvent } from '../OpenViduInternal/Events/StreamManagerEvent';\nimport { VideoElementEvent } from '../OpenViduInternal/Events/VideoElementEvent';\nimport { VideoInsertMode } from '../OpenViduInternal/Enums/VideoInsertMode';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\nimport { PlatformUtils } from '../OpenViduInternal/Utils/Platform';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\n/**\n * Interface in charge of displaying the media streams in the HTML DOM. This wraps any [[Publisher]] and [[Subscriber]] object.\n * You can insert as many video players fo the same Stream as you want by calling [[StreamManager.addVideoElement]] or\n * [[StreamManager.createVideoElement]].\n * The use of StreamManager wrapper is particularly useful when you don't need to differentiate between Publisher or Subscriber streams or just\n * want to directly manage your own video elements (even more than one video element per Stream). This scenario is pretty common in\n * declarative, MVC frontend frameworks such as Angular, React or Vue.js\n *\n * ### Available event listeners (and events dispatched)\n *\n * - videoElementCreated ([[VideoElementEvent]])\n * - videoElementDestroyed ([[VideoElementEvent]])\n * - streamPlaying ([[StreamManagerEvent]])\n * - streamAudioVolumeChange ([[StreamManagerEvent]])\n *\n */\nexport class StreamManager extends EventDispatcher {\n\n    /**\n     * The Stream represented in the DOM by the Publisher/Subscriber\n     */\n    stream: Stream;\n\n    /**\n     * All the videos displaying the Stream of this Publisher/Subscriber\n     */\n    videos: StreamManagerVideo[] = [];\n\n    /**\n     * Whether the Stream represented in the DOM is local or remote\n     * - `false` for [[Publisher]]\n     * - `true` for [[Subscriber]]\n     */\n    remote: boolean;\n\n    /**\n     * The DOM HTMLElement assigned as target element when creating the video for the Publisher/Subscriber. This property is only defined if:\n     * - [[Publisher]] has been initialized by calling method [[OpenVidu.initPublisher]] with a valid `targetElement` parameter\n     * - [[Subscriber]] has been initialized by calling method [[Session.subscribe]] with a valid `targetElement` parameter\n     */\n    targetElement: HTMLElement;\n\n    /**\n     * `id` attribute of the DOM video element displaying the Publisher/Subscriber's stream. This property is only defined if:\n     * - [[Publisher]] has been initialized by calling method [[OpenVidu.initPublisher]] with a valid `targetElement` parameter\n     * - [[Subscriber]] has been initialized by calling method [[Session.subscribe]] with a valid `targetElement` parameter\n     */\n    id: string;\n\n    /**\n     * @hidden\n     */\n    firstVideoElement?: StreamManagerVideo;\n    /**\n     * @hidden\n     */\n    lazyLaunchVideoElementCreatedEvent = false;\n    /**\n     * @hidden\n     */\n    element: HTMLElement;\n    /**\n     * @hidden\n     */\n    protected canPlayListener: EventListener;\n\n    /**\n     * @hidden\n     */\n    constructor(stream: Stream, targetElement?: HTMLElement | string) {\n        super();\n        platform = PlatformUtils.getInstance();\n        this.stream = stream;\n        this.stream.streamManager = this;\n        this.remote = !this.stream.isLocal();\n\n        if (!!targetElement) {\n            let targEl;\n            if (typeof targetElement === 'string') {\n                targEl = document.getElementById(targetElement);\n            } else if (targetElement instanceof HTMLElement) {\n                targEl = targetElement;\n            }\n\n            if (!!targEl) {\n                this.firstVideoElement = {\n                    targetElement: targEl,\n                    video: document.createElement('video'),\n                    id: '',\n                    canplayListenerAdded: false\n                };\n                if (platform.isSafariBrowser()) {\n                    this.firstVideoElement.video.setAttribute('playsinline', 'true');\n                }\n                this.targetElement = targEl;\n                this.element = targEl;\n            }\n        }\n\n        this.canPlayListener = () => {\n            if (this.stream.isLocal()) {\n                if (!this.stream.displayMyRemote()) {\n                    logger.info(\"Your local 'Stream' with id [\" + this.stream.streamId + '] video is now playing');\n                    this.ee.emitEvent('videoPlaying', [new VideoElementEvent(this.videos[0].video, this, 'videoPlaying')]);\n                } else {\n                    logger.info(\"Your own remote 'Stream' with id [\" + this.stream.streamId + '] video is now playing');\n                    this.ee.emitEvent('remoteVideoPlaying', [new VideoElementEvent(this.videos[0].video, this, 'remoteVideoPlaying')]);\n                }\n            } else {\n                logger.info(\"Remote 'Stream' with id [\" + this.stream.streamId + '] video is now playing');\n                this.ee.emitEvent('videoPlaying', [new VideoElementEvent(this.videos[0].video, this, 'videoPlaying')]);\n            }\n            this.ee.emitEvent('streamPlaying', [new StreamManagerEvent(this, 'streamPlaying', undefined)]);\n        };\n    }\n\n    /**\n     * See [[EventDispatcher.on]]\n     */\n    on(type: string, handler: (event: Event) => void): EventDispatcher {\n\n        super.onAux(type, \"Event '\" + type + \"' triggered by '\" + (this.remote ? 'Subscriber' : 'Publisher') + \"'\", handler)\n\n        if (type === 'videoElementCreated') {\n            if (!!this.stream && this.lazyLaunchVideoElementCreatedEvent) {\n                this.ee.emitEvent('videoElementCreated', [new VideoElementEvent(this.videos[0].video, this, 'videoElementCreated')]);\n                this.lazyLaunchVideoElementCreatedEvent = false;\n            }\n        }\n        if (type === 'streamPlaying' || type === 'videoPlaying') {\n            if (this.videos[0] && this.videos[0].video &&\n                this.videos[0].video.currentTime > 0 &&\n                this.videos[0].video.paused === false &&\n                this.videos[0].video.ended === false &&\n                this.videos[0].video.readyState === 4) {\n                this.ee.emitEvent('streamPlaying', [new StreamManagerEvent(this, 'streamPlaying', undefined)]);\n                this.ee.emitEvent('videoPlaying', [new VideoElementEvent(this.videos[0].video, this, 'videoPlaying')]);\n            }\n        }\n        if (type === 'streamAudioVolumeChange' && this.stream.hasAudio) {\n            this.stream.enableVolumeChangeEvent(false);\n        }\n        return this;\n    }\n\n    /**\n     * See [[EventDispatcher.once]]\n     */\n    once(type: string, handler: (event: Event) => void): StreamManager {\n\n        super.onceAux(type, \"Event '\" + type + \"' triggered once by '\" + (this.remote ? 'Subscriber' : 'Publisher') + \"'\", handler);\n\n        if (type === 'videoElementCreated') {\n            if (!!this.stream && this.lazyLaunchVideoElementCreatedEvent) {\n                this.ee.emitEvent('videoElementCreated', [new VideoElementEvent(this.videos[0].video, this, 'videoElementCreated')]);\n            }\n        }\n        if (type === 'streamPlaying' || type === 'videoPlaying') {\n            if (this.videos[0] && this.videos[0].video &&\n                this.videos[0].video.currentTime > 0 &&\n                this.videos[0].video.paused === false &&\n                this.videos[0].video.ended === false &&\n                this.videos[0].video.readyState === 4) {\n                this.ee.emitEvent('streamPlaying', [new StreamManagerEvent(this, 'streamPlaying', undefined)]);\n                this.ee.emitEvent('videoPlaying', [new VideoElementEvent(this.videos[0].video, this, 'videoPlaying')]);\n            }\n        }\n        if (type === 'streamAudioVolumeChange' && this.stream.hasAudio) {\n            this.stream.enableOnceVolumeChangeEvent(false);\n        }\n        return this;\n    }\n\n    /**\n     * See [[EventDispatcher.off]]\n     */\n    off(type: string, handler?: (event: Event) => void): StreamManager {\n\n        super.off(type, handler);\n\n        if (type === 'streamAudioVolumeChange') {\n            let remainingVolumeEventListeners = this.ee.getListeners(type).length;\n            if (remainingVolumeEventListeners === 0) {\n                this.stream.disableVolumeChangeEvent(false);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Makes `video` element parameter display this [[stream]]. This is useful when you are\n     * [managing the video elements on your own](/en/stable/cheatsheet/manage-videos/#you-take-care-of-the-video-players)\n     *\n     * Calling this method with a video already added to other Publisher/Subscriber will cause the video element to be\n     * disassociated from that previous Publisher/Subscriber and to be associated to this one.\n     *\n     * @returns 1 if the video wasn't associated to any other Publisher/Subscriber and has been successfully added to this one.\n     * 0 if the video was already added to this Publisher/Subscriber. -1 if the video was previously associated to any other\n     * Publisher/Subscriber and has been successfully disassociated from that one and properly added to this one.\n     */\n    addVideoElement(video: HTMLVideoElement): number {\n\n        this.initializeVideoProperties(video);\n\n        if (this.stream.isLocal() && this.stream.displayMyRemote()) {\n            if (video.srcObject !== this.stream.getMediaStream()) {\n                video.srcObject = this.stream.getMediaStream();\n            }\n        }\n\n        // If the video element is already part of this StreamManager do nothing\n        for (const v of this.videos) {\n            if (v.video === video) {\n                return 0;\n            }\n        }\n\n        let returnNumber = 1;\n\n        for (const streamManager of this.stream.session.streamManagers) {\n            if (streamManager.disassociateVideo(video)) {\n                returnNumber = -1;\n                break;\n            }\n        }\n\n        this.stream.session.streamManagers.forEach(streamManager => {\n            streamManager.disassociateVideo(video);\n        });\n\n        this.pushNewStreamManagerVideo({\n            video,\n            id: video.id,\n            canplayListenerAdded: false\n        });\n\n        logger.info('New video element associated to ', this);\n\n        return returnNumber;\n    }\n\n    /**\n     * Creates a new video element displaying this [[stream]]. This allows you to have multiple video elements displaying the same media stream.\n     *\n     * #### Events dispatched\n     *\n     * The Publisher/Subscriber object will dispatch a `videoElementCreated` event once the HTML video element has been added to DOM. See [[VideoElementEvent]]\n     *\n     * @param targetElement HTML DOM element (or its `id` attribute) in which the video element of the Publisher/Subscriber will be inserted\n     * @param insertMode How the video element will be inserted accordingly to `targetElemet`\n     *\n     * @returns The created HTMLVideoElement\n     */\n    createVideoElement(targetElement?: string | HTMLElement, insertMode?: VideoInsertMode): HTMLVideoElement {\n        let targEl;\n        if (typeof targetElement === 'string') {\n            targEl = document.getElementById(targetElement);\n            if (!targEl) {\n                throw new Error(\"The provided 'targetElement' couldn't be resolved to any HTML element: \" + targetElement);\n            }\n        } else if (targetElement instanceof HTMLElement) {\n            targEl = targetElement;\n        } else {\n            throw new Error(\"The provided 'targetElement' couldn't be resolved to any HTML element: \" + targetElement);\n        }\n\n        const video = this.createVideo();\n        this.initializeVideoProperties(video);\n\n        let insMode = !!insertMode ? insertMode : VideoInsertMode.APPEND;\n        switch (insMode) {\n            case VideoInsertMode.AFTER:\n                targEl.parentNode!!.insertBefore(video, targEl.nextSibling);\n                break;\n            case VideoInsertMode.APPEND:\n                targEl.appendChild(video);\n                break;\n            case VideoInsertMode.BEFORE:\n                targEl.parentNode!!.insertBefore(video, targEl);\n                break;\n            case VideoInsertMode.PREPEND:\n                targEl.insertBefore(video, targEl.childNodes[0]);\n                break;\n            case VideoInsertMode.REPLACE:\n                targEl.parentNode!!.replaceChild(video, targEl);\n                break;\n            default:\n                insMode = VideoInsertMode.APPEND;\n                targEl.appendChild(video);\n                break;\n        }\n\n        const v: StreamManagerVideo = {\n            targetElement: targEl,\n            video,\n            insertMode: insMode,\n            id: video.id,\n            canplayListenerAdded: false\n        };\n        this.pushNewStreamManagerVideo(v);\n\n        this.ee.emitEvent('videoElementCreated', [new VideoElementEvent(v.video, this, 'videoElementCreated')]);\n        this.lazyLaunchVideoElementCreatedEvent = !!this.firstVideoElement;\n\n        return video;\n    }\n\n    /**\n     * Updates the current configuration for the [[PublisherSpeakingEvent]] feature and the [StreamManagerEvent.streamAudioVolumeChange](/en/stable/api/openvidu-browser/classes/streammanagerevent.html) feature for this specific\n     * StreamManager audio stream, overriding the global options set with [[OpenVidu.setAdvancedConfiguration]]. This way you can customize the audio events options\n     * for each specific StreamManager and change them dynamically.\n     *\n     * @param publisherSpeakingEventsOptions New options to be applied to this StreamManager's audio stream. It is an object which includes the following optional properties:\n     * - `interval`: (number) how frequently the analyser polls the audio stream to check if speaking has started/stopped or audio volume has changed. Default **100** (ms)\n     * - `threshold`: (number) the volume at which _publisherStartSpeaking_, _publisherStopSpeaking_ events will be fired. Default **-50** (dB)\n     */\n    updatePublisherSpeakingEventsOptions(publisherSpeakingEventsOptions): void {\n        const currentHarkOptions = !!this.stream.harkOptions ? this.stream.harkOptions : (this.stream.session.openvidu.advancedConfiguration.publisherSpeakingEventsOptions || {});\n        const newInterval = (typeof publisherSpeakingEventsOptions.interval === 'number') ?\n            publisherSpeakingEventsOptions.interval : ((typeof currentHarkOptions.interval === 'number') ? currentHarkOptions.interval : 100);\n        const newThreshold = (typeof publisherSpeakingEventsOptions.threshold === 'number') ?\n            publisherSpeakingEventsOptions.threshold : ((typeof currentHarkOptions.threshold === 'number') ? currentHarkOptions.threshold : -50);\n        this.stream.harkOptions = {\n            interval: newInterval,\n            threshold: newThreshold\n        };\n        if (!!this.stream.speechEvent) {\n            this.stream.speechEvent.setInterval(newInterval);\n            this.stream.speechEvent.setThreshold(newThreshold);\n        }\n    }\n\n    /* Hidden methods */\n\n    /**\n     * @hidden\n     */\n    initializeVideoProperties(video: HTMLVideoElement): void {\n        if (!(this.stream.isLocal() && this.stream.displayMyRemote())) {\n            // Avoid setting the MediaStream into the srcObject if remote subscription before publishing\n            if (video.srcObject !== this.stream.getMediaStream()) {\n                // If srcObject already set don't do it again\n                video.srcObject = this.stream.getMediaStream();\n            }\n        }\n        video.autoplay = true;\n        video.controls = false;\n\n        if (platform.isSafariBrowser()) {\n            video.setAttribute('playsinline', 'true');\n        }\n\n        if (!video.id) {\n            video.id = (this.remote ? 'remote-' : 'local-') + 'video-' + this.stream.streamId;\n            // DEPRECATED property: assign once the property id if the user provided a valid targetElement\n            if (!this.id && !!this.targetElement) {\n                this.id = video.id;\n            }\n        }\n\n        if (!this.remote && !this.stream.displayMyRemote()) {\n            video.muted = true;\n            if (video.style.transform === 'rotateY(180deg)' && !this.stream.outboundStreamOpts.publisherProperties.mirror) {\n                // If the video was already rotated and now is set to not mirror\n                this.removeMirrorVideo(video);\n            } else if (this.stream.outboundStreamOpts.publisherProperties.mirror && !this.stream.isSendScreen()) {\n                this.mirrorVideo(video);\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    removeAllVideos(): void {\n        for (let i = this.stream.session.streamManagers.length - 1; i >= 0; --i) {\n            if (this.stream.session.streamManagers[i] === this) {\n                this.stream.session.streamManagers.splice(i, 1);\n            }\n        }\n\n        this.videos.forEach(streamManagerVideo => {\n            // Remove oncanplay event listener (only OpenVidu browser listener, not the user ones)\n            if(!!streamManagerVideo.video && !!streamManagerVideo.video.removeEventListener){\n                streamManagerVideo.video.removeEventListener('canplay', this.canPlayListener);\n            }            streamManagerVideo.canplayListenerAdded = false;\n            if (!!streamManagerVideo.targetElement) {\n                // Only remove from DOM videos created by OpenVidu Browser (those generated by passing a valid targetElement in OpenVidu.initPublisher\n                // and Session.subscribe or those created by StreamManager.createVideoElement). All this videos triggered a videoElementCreated event\n                streamManagerVideo.video.parentNode!.removeChild(streamManagerVideo.video);\n                this.ee.emitEvent('videoElementDestroyed', [new VideoElementEvent(streamManagerVideo.video, this, 'videoElementDestroyed')]);\n            }\n            // Remove srcObject from the video\n            this.removeSrcObject(streamManagerVideo);\n            // Remove from collection of videos every video managed by OpenVidu Browser\n            this.videos.filter(v => !v.targetElement);\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    disassociateVideo(video: HTMLVideoElement): boolean {\n        let disassociated = false;\n        for (let i = 0; i < this.videos.length; i++) {\n            if (this.videos[i].video === video) {\n                this.videos[i].video.removeEventListener('canplay', this.canPlayListener);\n                this.videos.splice(i, 1);\n                disassociated = true;\n                logger.info('Video element disassociated from ', this);\n                break;\n            }\n        }\n        return disassociated;\n    }\n\n    /**\n     * @hidden\n     */\n    addPlayEventToFirstVideo() {\n        if ((!!this.videos[0]) && (!!this.videos[0].video) && (!this.videos[0].canplayListenerAdded)) {\n            this.videos[0].video.addEventListener('canplay', this.canPlayListener);\n            this.videos[0].canplayListenerAdded = true;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    updateMediaStream(mediaStream: MediaStream) {\n        this.videos.forEach(streamManagerVideo => {\n            streamManagerVideo.video.srcObject = mediaStream;\n            if (platform.isIonicIos()) {\n                // iOS Ionic. LIMITATION: must reinsert the video in the DOM for\n                // the media stream to be updated\n                const vParent = streamManagerVideo.video.parentElement;\n                const newVideo = streamManagerVideo.video;\n                vParent!!.replaceChild(newVideo, streamManagerVideo.video);\n                streamManagerVideo.video = newVideo;\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    emitEvent(type: string, eventArray: any[]): void {\n        this.ee.emitEvent(type, eventArray);\n    }\n\n     /**\n     * @hidden\n     */\n    createVideo(): HTMLVideoElement {\n        return document.createElement('video');\n    }\n\n    /**\n     * @hidden\n     */\n    removeSrcObject(streamManagerVideo: StreamManagerVideo) {\n        streamManagerVideo.video.srcObject = null;\n    }\n\n    /* Private methods */\n\n    protected pushNewStreamManagerVideo(streamManagerVideo: StreamManagerVideo) {\n        this.videos.push(streamManagerVideo);\n        this.addPlayEventToFirstVideo();\n        if (this.stream.session.streamManagers.indexOf(this) === -1) {\n            this.stream.session.streamManagers.push(this);\n        }\n    }\n\n    private mirrorVideo(video): void {\n        if (!platform.isIonicIos()) {\n            video.style.transform = 'rotateY(180deg)';\n            video.style.webkitTransform = 'rotateY(180deg)';\n        }\n    }\n\n    private removeMirrorVideo(video): void {\n        video.style.transform = 'unset';\n        video.style.webkitTransform = 'unset';\n    }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Stream } from './Stream';\nimport { StreamManager } from './StreamManager';\nimport { SubscriberProperties } from '../OpenViduInternal/Interfaces/Public/SubscriberProperties';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * Packs remote media streams. Participants automatically receive them when others publish their streams. Initialized with [[Session.subscribe]] method\n */\nexport class Subscriber extends StreamManager {\n\n    /**\n     * @hidden\n     */\n    properties: SubscriberProperties;\n\n    /**\n     * @hidden\n     */\n    constructor(stream: Stream, targEl: string | HTMLElement, properties: SubscriberProperties) {\n        super(stream, targEl);\n        this.element = this.targetElement;\n        this.stream = stream;\n        this.properties = properties;\n    }\n\n    /**\n     * Subscribe or unsubscribe from the audio stream (if available). Calling this method twice in a row passing same value will have no effect\n     * @param value `true` to subscribe to the audio stream, `false` to unsubscribe from it\n     */\n    subscribeToAudio(value: boolean): Subscriber {\n        this.stream.getMediaStream().getAudioTracks().forEach((track) => {\n            track.enabled = value;\n        });\n        this.stream.audioActive = value;\n        logger.info(\"'Subscriber' has \" + (value ? 'subscribed to' : 'unsubscribed from') + ' its audio stream');\n        return this;\n    }\n\n    /**\n     * Subscribe or unsubscribe from the video stream (if available). Calling this method twice in a row passing same value will have no effect\n     * @param value `true` to subscribe to the video stream, `false` to unsubscribe from it\n     */\n    subscribeToVideo(value: boolean): Subscriber {\n        this.stream.getMediaStream().getVideoTracks().forEach((track) => {\n            track.enabled = value;\n        });\n        this.stream.videoActive = value;\n        logger.info(\"'Subscriber' has \" + (value ? 'subscribed to' : 'unsubscribed from') + ' its video stream');\n        return this;\n    }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport enum LocalRecorderState {\n    READY = 'READY',\n    RECORDING = 'RECORDING',\n    PAUSED = 'PAUSED',\n    FINISHED = 'FINISHED'\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n/**\n * Defines property [[OpenViduError.name]]\n */\nexport enum OpenViduErrorName {\n\n    /**\n     * Browser is not supported by OpenVidu.\n     * Returned upon unsuccessful [[Session.connect]]\n     */\n    BROWSER_NOT_SUPPORTED = 'BROWSER_NOT_SUPPORTED',\n\n    /**\n     * The user hasn't granted permissions to the required input device when the browser asked for them.\n     * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n     */\n    DEVICE_ACCESS_DENIED = 'DEVICE_ACCESS_DENIED',\n\n    /**\n     * The required input device is probably being used by other process when the browser asked for it.\n     * This error can also be triggered when the user granted permission to use the devices but a hardware\n     * error occurred at the OS, browser or web page level, which prevented access to the device.\n     * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n     */\n    DEVICE_ALREADY_IN_USE = \"DEVICE_ALREADY_IN_USE\",\n\n    /**\n     * The user hasn't granted permissions to capture some desktop screen when the browser asked for them.\n     * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n     */\n    SCREEN_CAPTURE_DENIED = 'SCREEN_CAPTURE_DENIED',\n\n    /**\n     * Browser does not support screen sharing.\n     * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n     */\n    SCREEN_SHARING_NOT_SUPPORTED = 'SCREEN_SHARING_NOT_SUPPORTED',\n\n    /**\n     * Only for Chrome, there's no screen sharing extension installed\n     * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n     */\n    SCREEN_EXTENSION_NOT_INSTALLED = 'SCREEN_EXTENSION_NOT_INSTALLED',\n\n    /**\n     * Only for Chrome, the screen sharing extension is installed but is disabled\n     * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n     */\n    SCREEN_EXTENSION_DISABLED = 'SCREEN_EXTENSION_DISABLED',\n\n    /**\n     * No video input device found with the provided deviceId (property [[PublisherProperties.videoSource]])\n     * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n     */\n    INPUT_VIDEO_DEVICE_NOT_FOUND = 'INPUT_VIDEO_DEVICE_NOT_FOUND',\n\n    /**\n     * No audio input device found with the provided deviceId (property [[PublisherProperties.audioSource]])\n     * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n     */\n    INPUT_AUDIO_DEVICE_NOT_FOUND = 'INPUT_AUDIO_DEVICE_NOT_FOUND',\n\n    /**\n     * There was an unknown error when trying to access the specified audio device\n     * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n     */\n    INPUT_AUDIO_DEVICE_GENERIC_ERROR = 'INPUT_AUDIO_DEVICE_GENERIC_ERROR',\n\n    /**\n     * Method [[OpenVidu.initPublisher]] or  [[OpenVidu.getUserMedia]] has been called with properties `videoSource` and `audioSource` of\n     * [[PublisherProperties]] parameter both set to *false* or *null*\n     */\n    NO_INPUT_SOURCE_SET = 'NO_INPUT_SOURCE_SET',\n\n    /**\n     * Some media property of [[PublisherProperties]] such as `frameRate` or `resolution` is not supported\n     * by the input devices (whenever it is possible they are automatically adjusted to the most similar value).\n     * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n     */\n    PUBLISHER_PROPERTIES_ERROR = 'PUBLISHER_PROPERTIES_ERROR',\n\n    /**\n     * The client tried to call a method without the required permissions. This can occur for methods [[Session.publish]],\n     * [[Session.forceUnpublish]], [[Session.forceDisconnect]], [[Stream.applyFilter]], [[Stream.removeFilter]]\n     */\n    OPENVIDU_PERMISSION_DENIED = 'OPENVIDU_PERMISSION_DENIED',\n\n    /**\n     * _Not in use yet_\n     */\n    OPENVIDU_NOT_CONNECTED = 'OPENVIDU_NOT_CONNECTED',\n\n    /**\n     * _Not in use yet_\n     */\n    GENERIC_ERROR = 'GENERIC_ERROR'\n}\n\n/**\n * Simple object to identify runtime errors on the client side\n */\nexport class OpenViduError {\n\n    name: OpenViduErrorName;\n    message: string;\n\n    /**\n     * @hidden\n     */\n    constructor(name: OpenViduErrorName, message: string) {\n        this.name = name;\n        this.message = message;\n    }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n/**\n * How the video will be inserted in the DOM for Publishers and Subscribers. See [[PublisherProperties.insertMode]] and [[SubscriberProperties.insertMode]]\n */\nexport enum VideoInsertMode {\n\n    /**\n     * Video inserted after the target element (as next sibling)\n     */\n    AFTER = 'AFTER',\n    /**\n     * Video inserted as last child of the target element\n     */\n    APPEND = 'APPEND',\n    /**\n     * Video inserted before the target element (as previous sibling)\n     */\n    BEFORE = 'BEFORE',\n    /**\n     * Video inserted as first child of the target element\n     */\n    PREPEND = 'PREPEND',\n    /**\n     * Video replaces target element\n     */\n    REPLACE = 'REPLACE'\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Connection } from '../../OpenVidu/Connection';\nimport { Session } from '../../OpenVidu/Session';\n\n\n/**\n * Defines the following events:\n * - `connectionCreated`: dispatched by [[Session]] after a new user has connected to the session\n * - `connectionDestroyed`: dispatched by [[Session]] after a new user has left the session\n */\nexport class ConnectionEvent extends Event {\n\n    /**\n     * Connection object that was created or destroyed\n     */\n    connection: Connection;\n\n    /**\n     * For `connectionDestroyed` event:\n     * - \"disconnect\": the remote user has called `Session.disconnect()`\n     * - \"forceDisconnectByUser\": the remote user has been evicted from the Session by other user calling `Session.forceDisconnect()`\n     * - \"forceDisconnectByServer\": the remote user has been evicted from the Session by the application\n     * - \"sessionClosedByServer\": the Session has been closed by the application\n     * - \"networkDisconnect\": the remote user network connection has dropped\n     *\n     * For `connectionCreated` event an empty string\n     */\n    reason: string;\n\n    /**\n     * @hidden\n     */\n    constructor(cancelable: boolean, target: Session, type: string, connection: Connection, reason: string) {\n        super(cancelable, target, type);\n        this.connection = connection;\n        this.reason = reason;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Connection } from '../../OpenVidu/Connection';\nimport { Session } from '../../OpenVidu/Session';\nimport { Event } from './Event';\n\n/**\n * **This feature is part of OpenVidu Pro tier** <a href=\"https://docs.openvidu.io/en/stable/openvidu-pro/\" target=\"_blank\" style=\"display: inline-block; background-color: rgb(0, 136, 170); color: white; font-weight: bold; padding: 0px 5px; margin-right: 5px; border-radius: 3px; font-size: 13px; line-height:21px; font-family: Montserrat, sans-serif\">PRO</a>\n * \n * Defines event `connectionPropertyChanged` dispatched by [[Session]] object.\n * This event is fired when any property of the local [[Connection]] object changes.\n * The properties that may change are [[Connection.role]] and [[Connection.record]].\n * \n * The only way the Connection properties may change is by updating them through:\n * \n * - [API REST](/en/stable/reference-docs/REST-API/#patch-openviduapisessionsltsession_idgtconnectionltconnection_idgt)\n * - [openvidu-java-client](/en/stable/reference-docs/openvidu-java-client/#update-a-connection)\n * - [openvidu-node-client](/en/stable/reference-docs/openvidu-node-client/#update-a-connection)<br><br>\n */\nexport class ConnectionPropertyChangedEvent extends Event {\n\n    /**\n     * The Connection whose property has changed\n     */\n    connection: Connection;\n\n    /**\n     * The property of the stream that changed. This value is either `\"role\"` or `\"record\"`\n     */\n    changedProperty: string;\n\n    /**\n     * New value of the property (after change, current value)\n     */\n    newValue: Object;\n\n    /**\n     * Previous value of the property (before change)\n     */\n    oldValue: Object;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Session, connection: Connection, changedProperty: string, newValue: Object, oldValue: Object) {\n        super(false, target, 'connectionPropertyChanged');\n        this.connection = connection;\n        this.changedProperty = changedProperty;\n        this.newValue = newValue;\n        this.oldValue = oldValue;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Filter } from '../../OpenVidu/Filter';\nimport { StreamManager } from '../../OpenVidu/StreamManager';\nimport { Session } from '../../OpenVidu/Session';\n\nexport abstract class Event {\n\n    /**\n     * Whether the event has a default behavior that may be prevented by calling [[Event.preventDefault]]\n     */\n    cancelable: boolean;\n\n    /**\n     * The object that dispatched the event\n     */\n    target: Session | StreamManager | Filter;\n\n    /**\n     * The type of event. This is the same string you pass as first parameter when calling method `on()` of any object implementing [[EventDispatcher]] interface\n     */\n    type: string;\n\n    /**\n     * @hidden\n     */\n    hasBeenPrevented = false;\n\n    /**\n     * @hidden\n     */\n    constructor(cancelable: boolean, target: Session | StreamManager | Filter, type: string) {\n        this.cancelable = cancelable;\n        this.target = target;\n        this.type = type;\n    }\n\n    /**\n     * Whether the default beahivour of the event has been prevented or not. Call [[Event.preventDefault]] to prevent it\n     */\n    isDefaultPrevented(): boolean {\n        return this.hasBeenPrevented;\n    }\n\n    /**\n     * Prevents the default behavior of the event. The following events have a default behavior:\n     *\n     * - `sessionDisconnected`: dispatched by [[Session]] object, automatically unsubscribes the leaving participant from every Subscriber object of the session (this includes closing the WebRTCPeer connection and disposing all MediaStreamTracks)\n     * and also deletes any HTML video element associated to each Subscriber (only those created by OpenVidu Browser, either by passing a valid parameter as `targetElement` in method [[Session.subscribe]] or\n     * by calling [[Subscriber.createVideoElement]]). For every video removed, each Subscriber object will also dispatch a `videoElementDestroyed` event.\n     *\n     * - `streamDestroyed`:\n     *   - If dispatched by a [[Publisher]] (*you* have unpublished): automatically stops all media tracks and deletes any HTML video element associated to it (only those created by OpenVidu Browser, either by passing a valid parameter as `targetElement`\n     * in method [[OpenVidu.initPublisher]] or by calling [[Publisher.createVideoElement]]). For every video removed, the Publisher object will also dispatch a `videoElementDestroyed` event.\n     *   - If dispatched by [[Session]] (*other user* has unpublished): automatically unsubscribes the proper Subscriber object from the session (this includes closing the WebRTCPeer connection and disposing all MediaStreamTracks)\n     * and also deletes any HTML video element associated to that Subscriber (only those created by OpenVidu Browser, either by passing a valid parameter as `targetElement` in method [[Session.subscribe]] or\n     * by calling [[Subscriber.createVideoElement]]). For every video removed, the Subscriber object will also dispatch a `videoElementDestroyed` event.\n     */\n    preventDefault() {\n        // tslint:disable-next-line:no-empty\n        this.callDefaultBehavior = () => { };\n        this.hasBeenPrevented = true;\n    }\n\n    /**\n     * @hidden\n     */\n    abstract callDefaultBehavior();\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Filter } from '../../OpenVidu/Filter';\n\n\n/**\n * Defines every event dispatched by audio/video stream filters. You can subscribe to filter events by calling [[Filter.addEventListener]]\n */\nexport class FilterEvent extends Event {\n\n    /**\n     * Data of the event\n     */\n    data: Object;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Filter, eventType: string, data: Object) {\n        super(false, target, eventType);\n        this.data = data;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Session } from '../../OpenVidu/Session';\nimport { Connection } from '../../OpenVidu/Connection';\n\n/**\n * **This feature is part of OpenVidu Pro tier** <a href=\"https://docs.openvidu.io/en/stable/openvidu-pro/\" target=\"_blank\" style=\"display: inline-block; background-color: rgb(0, 136, 170); color: white; font-weight: bold; padding: 0px 5px; margin-right: 5px; border-radius: 3px; font-size: 13px; line-height:21px; font-family: Montserrat, sans-serif\">PRO</a>\n * \n * Defines event `networkQualityLevelChanged` dispatched by [[Session]].\n * This event is fired when the network quality level of a [[Connection]] changes. See [network quality](/en/stable/advanced-features/network-quality/)\n */\nexport class NetworkQualityLevelChangedEvent extends Event {\n\n    /**\n     * New value of the network quality level\n     */\n    newValue: number;\n\n    /**\n     * Old value of the network quality level\n     */\n    oldValue: number;\n\n    /**\n     * Connection for whom the network quality level changed\n     */\n    connection: Connection\n\n    /**\n     * @hidden\n     */\n    constructor(target: Session, newValue: number, oldValue: number, connection: Connection) {\n        super(false, target, 'networkQualityLevelChanged');\n        this.newValue = newValue;\n        this.oldValue = oldValue;\n        this.connection = connection;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n\n}\n","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Connection } from '../../OpenVidu/Connection';\nimport { Session } from '../..';\n\n\n/**\n * Defines the following events:\n * - `publisherStartSpeaking`: dispatched by [[Session]] when a remote user has started speaking\n * - `publisherStopSpeaking`: dispatched by [[Session]] when a remote user has stopped speaking\n *\n * More information:\n * - This events will only be triggered for **remote streams that have audio tracks** ([[Stream.hasAudio]] must be true)\n * - You can further configure how the events are dispatched by setting property `publisherSpeakingEventsOptions` in the call of [[OpenVidu.setAdvancedConfiguration]]\n */\nexport class PublisherSpeakingEvent extends Event {\n\n    /**\n     * The client that started or stopped speaking\n     */\n    connection: Connection;\n\n    /**\n     * The streamId of the Stream affected by the speaking event\n     */\n    streamId: string;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Session, type: string, connection: Connection, streamId: string) {\n        super(false, target, type);\n        this.type = type;\n        this.connection = connection;\n        this.streamId = streamId;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Session } from '../../OpenVidu/Session';\n\n\n/**\n * Defines the following events:\n * - `recordingStarted`: dispatched by [[Session]] after the session has started being recorded\n * - `recordingStopped`: dispatched by [[Session]] after the session has stopped being recorded\n */\nexport class RecordingEvent extends Event {\n\n    /**\n     * The recording ID generated in openvidu-server\n     */\n    id: string;\n\n    /**\n     * The recording name you supplied to openvidu-server. For example, to name your recording file MY_RECORDING:\n     * - With **API REST**: POST to `/api/recordings/start` passing JSON body `{\"session\":\"sessionId\",\"name\":\"MY_RECORDING\"}`\n     * - With **openvidu-java-client**: `OpenVidu.startRecording(sessionId, \"MY_RECORDING\")` or `OpenVidu.startRecording(sessionId, new RecordingProperties.Builder().name(\"MY_RECORDING\").build())`\n     * - With **openvidu-node-client**: `OpenVidu.startRecording(sessionId, \"MY_RECORDING\")` or `OpenVidu.startRecording(sessionId, {name: \"MY_RECORDING\"})`\n     *\n     * If no name is supplied, this property will be undefined and the recorded file will be named after property [[id]]\n     */\n    name?: string;\n\n    /**\n     * For 'recordingStopped' event:\n     * - \"recordingStoppedByServer\": the recording has been gracefully stopped by the application\n     * - \"sessionClosedByServer\": the Session has been closed by the application\n     * - \"automaticStop\": see [Automatic stop of recordings](/en/stable/advanced-features/recording/#automatic-stop-of-recordings)\n     * - \"mediaServerDisconnect\": OpenVidu Media Node has crashed or lost its connection. A new Media Node instance is active and the recording has been stopped (no media streams are available in the new Media Node)\n     *\n     * For 'recordingStarted' empty string\n     */\n    reason?: string;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Session, type: string, id: string, name: string, reason?: string) {\n        super(false, target, type);\n        this.id = id;\n        if (name !== id) {\n            this.name = name;\n        }\n        this.reason = reason;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Session } from '../../OpenVidu/Session';\nimport { OpenViduLogger } from '../Logger/OpenViduLogger';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n\n/**\n * Defines event `sessionDisconnected` dispatched by [[Session]] after the local user has left the session. This is the local version of the `connectionDestroyed` event, which is only dispatched by remote users\n */\nexport class SessionDisconnectedEvent extends Event {\n\n    /**\n     * - \"disconnect\": you have called `Session.disconnect()`\n     * - \"forceDisconnectByUser\": you have been evicted from the Session by other user calling `Session.forceDisconnect()`\n     * - \"forceDisconnectByServer\": you have been evicted from the Session by the application\n     * - \"sessionClosedByServer\": the Session has been closed by the application\n     * - \"networkDisconnect\": your network connection has dropped. Before a SessionDisconnectedEvent with this reason is triggered,\n     *      Session object will always have previously dispatched a `reconnecting` event. If the reconnection process succeeds,\n     *      Session object will dispatch a `reconnected` event. If it fails, Session object will dispatch a SessionDisconnectedEvent\n     *      with reason \"networkDisconnect\"\n     */\n    reason: string;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Session, reason: string) {\n        super(true, target, 'sessionDisconnected');\n        this.reason = reason;\n    }\n\n    /**\n     * @hidden\n     */\n    callDefaultBehavior() {\n\n        logger.info(\"Calling default behavior upon '\" + this.type + \"' event dispatched by 'Session'\");\n\n        const session = <Session>this.target;\n\n        // Dispose and delete all remote Connections\n        session.remoteConnections.forEach(remoteConnection => {\n            const connectionId = remoteConnection.connectionId;\n            if (!!session.remoteConnections.get(connectionId)?.stream) {\n                session.remoteConnections.get(connectionId)?.stream!.disposeWebRtcPeer();\n                session.remoteConnections.get(connectionId)?.stream!.disposeMediaStream();\n                if (session.remoteConnections.get(connectionId)?.stream!.streamManager) {\n                    session.remoteConnections.get(connectionId)?.stream!.streamManager.removeAllVideos();\n                }\n                const streamId = session.remoteConnections.get(connectionId)?.stream?.streamId;\n                if (!!streamId) {\n                    session.remoteStreamsCreated.delete(streamId);\n                }\n                session.remoteConnections.get(connectionId)?.dispose();\n            }\n            session.remoteConnections.delete(connectionId);\n        });\n    }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Connection } from '../../OpenVidu/Connection';\nimport { Session } from '../../OpenVidu/Session';\n\n\n/**\n * Defines the following events:\n * - `signal`: dispatched by [[Session]] when a signal is received\n * - `signal:TYPE`: dispatched by [[Session]] when a signal of type TYPE is received\n */\nexport class SignalEvent extends Event {\n\n    /**\n     * The type of signal. It is string `\"signal\"` for those signals sent with no [[SignalOptions.type]] property, and `\"signal:type\"` if was sent with a \n     * valid [[SignalOptions.type]] property.\n     *\n     * The client must be specifically subscribed to `Session.on('signal:type', function(signalEvent) {...})` to trigger that type of signal.\n     *\n     * Subscribing to `Session.on('signal', function(signalEvent) {...})` will trigger all signals, no matter their type.\n     */\n    type: string;\n\n    /**\n     * The message of the signal (can be empty)\n     */\n    data?: string;\n\n    /**\n     * The client that sent the signal. This property is undefined if the signal\n     * was directly generated by the application server (not by other client)\n     */\n    from?: Connection;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Session, type: string, data?: string, from?: Connection) {\n        super(false, target, 'signal');\n        if (!!type) {\n            this.type = 'signal:' + type;\n        }\n        this.data = data;\n        this.from = from;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Publisher } from '../../OpenVidu/Publisher';\nimport { Session } from '../../OpenVidu/Session';\nimport { Stream } from '../../OpenVidu/Stream';\nimport { OpenViduLogger } from '../Logger/OpenViduLogger';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * Defines the following events:\n * - `streamCreated`: dispatched by [[Session]] and [[Publisher]] after some user has started publishing to the session\n * - `streamDestroyed`: dispatched by [[Session]] and [[Publisher]] after some user has stopped publishing to the session\n */\nexport class StreamEvent extends Event {\n\n    /**\n     * Stream object that was created or destroyed\n     */\n    stream: Stream;\n\n    /**\n     * For 'streamDestroyed' event:\n     * - \"unpublish\": method `Session.unpublish()` has been called\n     * - \"disconnect\": method `Session.disconnect()` has been called\n     * - \"forceUnpublishByUser\": some user has called `Session.forceUnpublish()` over the Stream\n     * - \"forceDisconnectByUser\": some user has called `Session.forceDisconnect()` over the Stream\n     * - \"forceUnpublishByServer\": the user's stream has been unpublished from the Session by the application\n     * - \"forceDisconnectByServer\": the user has been evicted from the Session by the application\n     * - \"sessionClosedByServer\": the Session has been closed by the application\n     * - \"networkDisconnect\": the user's network connection has dropped\n     * - \"mediaServerDisconnect\": OpenVidu Media Node has crashed or lost its connection. A new Media Node instance is active and no media streams are available in the Media Node\n     *\n     * For 'streamCreated' empty string\n     */\n    reason: string;\n\n    /**\n     * @hidden\n     */\n    constructor(cancelable: boolean, target: Session | Publisher, type: string, stream: Stream, reason: string) {\n        super(cancelable, target, type);\n        this.stream = stream;\n        this.reason = reason;\n    }\n\n    /**\n     * @hidden\n     */\n    callDefaultBehavior() {\n        if (this.type === 'streamDestroyed') {\n\n            if (this.target instanceof Session) {\n                // Remote Stream\n                logger.info(\"Calling default behavior upon '\" + this.type + \"' event dispatched by 'Session'\");\n                this.stream.disposeWebRtcPeer();\n            } else if (this.target instanceof Publisher) {\n                // Local Stream\n                logger.info(\"Calling default behavior upon '\" + this.type + \"' event dispatched by 'Publisher'\");\n                clearInterval((<Publisher>this.target).screenShareResizeInterval);\n                this.stream.isLocalStreamReadyToPublish = false;\n\n                // Delete Publisher object from OpenVidu publishers array\n                const openviduPublishers = (<Publisher>this.target).openvidu.publishers;\n                for (let i = 0; i < openviduPublishers.length; i++) {\n                    if (openviduPublishers[i] === (<Publisher>this.target)) {\n                        openviduPublishers.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n\n            // Dispose the MediaStream local object\n            this.stream.disposeMediaStream();\n\n            // Remove from DOM all video elements associated to this Stream, if there's a StreamManager defined\n            // (method Session.subscribe must have been called)\n            if (this.stream.streamManager) this.stream.streamManager.removeAllVideos();\n\n            // Delete stream from Session.remoteStreamsCreated map\n            this.stream.session.remoteStreamsCreated.delete(this.stream.streamId);\n\n            // Delete StreamOptionsServer from remote Connection\n            const remoteConnection = this.stream.session.remoteConnections.get(this.stream.connection.connectionId);\n            if (!!remoteConnection && !!remoteConnection.remoteOptions) {\n                const streamOptionsServer = remoteConnection.remoteOptions.streams;\n                for (let i = streamOptionsServer.length - 1; i >= 0; --i) {\n                    if (streamOptionsServer[i].id === this.stream.streamId) {\n                        streamOptionsServer.splice(i, 1);\n                    }\n                }\n            }\n\n        }\n    }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { StreamManager } from '../../OpenVidu/StreamManager';\n\n/**\n * Defines the following events:\n * - `streamPlaying`: dispatched by [[StreamManager]] ([[Publisher]] and [[Subscriber]]) whenever its media stream starts playing (one of its videos has media\n * and has begun to play). This event will be dispatched when these 3 conditions are met 1) The StreamManager has no video associated in the DOM 2) It is associated to one video 3) That video starts playing\n * - `streamAudioVolumeChange`: dispatched by [[StreamManager]] ([[Publisher]] and [[Subscriber]]) when the volume of its Stream's audio track\n * changes. Only applies if [[Stream.hasAudio]] is `true`. The frequency this event is fired with is defined by property `interval` of\n * [[OpenViduAdvancedConfiguration.publisherSpeakingEventsOptions]] (default 100ms)\n */\nexport class StreamManagerEvent extends Event {\n\n    /**\n     * For `streamAudioVolumeChange` event:\n     * - `{newValue: number, oldValue: number}`: new and old audio volume values. These values are between -100 (silence) and 0 (loudest possible volume).\n     * They are not exact and depend on how the browser is managing the audio track, but -100 and 0 can be taken as limit values.\n     * \n     * For `streamPlaying` event undefined\n     */\n    value: Object | undefined;\n\n    /**\n     * @hidden\n     */\n    constructor(target: StreamManager, type: string, value: Object | undefined) {\n        super(false, target, type);\n        this.value = value;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Session } from '../../OpenVidu/Session';\nimport { Stream } from '../../OpenVidu/Stream';\nimport { StreamManager } from '../../OpenVidu/StreamManager';\n\n/**\n * Defines event `streamPropertyChanged` dispatched by [[Session]] as well as by [[StreamManager]] ([[Publisher]] and [[Subscriber]]).\n * This event is fired when any remote stream (owned by a Subscriber) or local stream (owned by a Publisher) undergoes\n * any change in any of its mutable properties (see [[changedProperty]]).\n */\nexport class StreamPropertyChangedEvent extends Event {\n\n    /**\n     * The Stream whose property has changed. You can always identify the user publishing the changed stream by consulting property [[Stream.connection]]\n     */\n    stream: Stream;\n\n    /**\n     * The property of the stream that changed. This value is either `\"videoActive\"`, `\"audioActive\"`, `\"videoDimensions\"` or `\"filter\"`\n     */\n    changedProperty: string;\n\n    /**\n     * Cause of the change on the stream's property:\n     * - For `videoActive`: `\"publishVideo\"`\n     * - For `audioActive`: `\"publishAudio\"`\n     * - For `videoDimensions`: `\"deviceRotated\"` or `\"screenResized\"`\n     * - For `filter`: `\"applyFilter\"`, `\"execFilterMethod\"` or `\"removeFilter\"`\n     */\n    reason: string;\n\n    /**\n     * New value of the property (after change, current value)\n     */\n    newValue: Object;\n\n    /**\n     * Previous value of the property (before change)\n     */\n    oldValue: Object;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Session | StreamManager, stream: Stream, changedProperty: string, newValue: Object, oldValue: Object, reason: string) {\n        super(false, target, 'streamPropertyChanged');\n        this.stream = stream;\n        this.changedProperty = changedProperty;\n        this.newValue = newValue;\n        this.oldValue = oldValue;\n        this.reason = reason;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { StreamManager } from '../../OpenVidu/StreamManager';\n\n\n/**\n * Defines the following events:\n * - `videoElementCreated`: dispatched by [[Publisher]] and [[Subscriber]] whenever a new HTML video element has been inserted into DOM by OpenVidu Browser library. See\n * [Manage video players](/en/stable/cheatsheet/manage-videos) section.\n * - `videoElementDestroyed`: dispatched by [[Publisher]] and [[Subscriber]] whenever an HTML video element has been removed from DOM by OpenVidu Browser library.\n */\nexport class VideoElementEvent extends Event {\n\n    /**\n     * Video element that was created or destroyed\n     */\n    element: HTMLVideoElement;\n\n    /**\n     * @hidden\n     */\n    constructor(element: HTMLVideoElement, target: StreamManager, type: string) {\n        super(false, target, type);\n        this.element = element;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n\n}","function Mapper()\n{\n  var sources = {};\n\n\n  this.forEach = function(callback)\n  {\n    for(var key in sources)\n    {\n      var source = sources[key];\n\n      for(var key2 in source)\n        callback(source[key2]);\n    };\n  };\n\n  this.get = function(id, source)\n  {\n    var ids = sources[source];\n    if(ids == undefined)\n      return undefined;\n\n    return ids[id];\n  };\n\n  this.remove = function(id, source)\n  {\n    var ids = sources[source];\n    if(ids == undefined)\n      return;\n\n    delete ids[id];\n\n    // Check it's empty\n    for(var i in ids){return false}\n\n    delete sources[source];\n  };\n\n  this.set = function(value, id, source)\n  {\n    if(value == undefined)\n      return this.remove(id, source);\n\n    var ids = sources[source];\n    if(ids == undefined)\n      sources[source] = ids = {};\n\n    ids[id] = value;\n  };\n};\n\n\nMapper.prototype.pop = function(id, source)\n{\n  var value = this.get(id, source);\n  if(value == undefined)\n    return undefined;\n\n  this.remove(id, source);\n\n  return value;\n};\n\n\nmodule.exports = Mapper;\n","/*\n * (C) Copyright 2014 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar JsonRpcClient  = require('./jsonrpcclient');\n\n\nexports.JsonRpcClient  = JsonRpcClient;","/*\n * (C) Copyright 2014 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar RpcBuilder = require('../');\nvar WebSocketWithReconnection = require('./transports/webSocketWithReconnection');\nvar OpenViduLogger = require('../../../Logger/OpenViduLogger').OpenViduLogger;\n\nDate.now = Date.now || function () {\n    return +new Date;\n};\n\nvar PING_INTERVAL = 5000;\n\nvar RECONNECTING = 'RECONNECTING';\nvar CONNECTED = 'CONNECTED';\nvar DISCONNECTED = 'DISCONNECTED';\n\nvar Logger = OpenViduLogger.getInstance();\n\n/**\n *\n * heartbeat: interval in ms for each heartbeat message,\n * <pre>\n * ws : {\n * \turi : URI to conntect to,\n * \tonconnected : callback method to invoke when connection is successful,\n * \tondisconnect : callback method to invoke when the connection is lost (max retries for reconnecting reached),\n * \tonreconnecting : callback method to invoke when the client is reconnecting,\n * \tonreconnected : callback method to invoke when the client successfully reconnects,\n * \tonerror : callback method to invoke when there is an error\n * },\n * rpc : {\n * \trequestTimeout : timeout for a request,\n * \tsessionStatusChanged: callback method for changes in session status,\n * \tmediaRenegotiation: mediaRenegotiation\n * }\n * </pre>\n */\nfunction JsonRpcClient(configuration) {\n\n    var self = this;\n\n    var wsConfig = configuration.ws;\n\n    var notReconnectIfNumLessThan = -1;\n\n    var pingNextNum = 0;\n    var enabledPings = true;\n    var pingPongStarted = false;\n    var pingInterval;\n\n    var status = DISCONNECTED;\n\n    var onreconnecting = wsConfig.onreconnecting;\n    var onreconnected = wsConfig.onreconnected;\n    var onconnected = wsConfig.onconnected;\n    var onerror = wsConfig.onerror;\n\n    configuration.rpc.pull = function (params, request) {\n        request.reply(null, \"push\");\n    }\n\n    wsConfig.onreconnecting = function () {\n        Logger.debug(\"--------- ONRECONNECTING -----------\");\n        if (status === RECONNECTING) {\n            Logger.error(\"Websocket already in RECONNECTING state when receiving a new ONRECONNECTING message. Ignoring it\");\n            return;\n        }\n\n        stopPing();\n\n        status = RECONNECTING;\n        if (onreconnecting) {\n            onreconnecting();\n        }\n    }\n\n    wsConfig.onreconnected = function () {\n        Logger.debug(\"--------- ONRECONNECTED -----------\");\n        if (status === CONNECTED) {\n            Logger.error(\"Websocket already in CONNECTED state when receiving a new ONRECONNECTED message. Ignoring it\");\n            return;\n        }\n        status = CONNECTED;\n\n        updateNotReconnectIfLessThan();\n\n        if (onreconnected) {\n            onreconnected();\n        }\n    }\n\n    wsConfig.onconnected = function () {\n        Logger.debug(\"--------- ONCONNECTED -----------\");\n        if (status === CONNECTED) {\n            Logger.error(\"Websocket already in CONNECTED state when receiving a new ONCONNECTED message. Ignoring it\");\n            return;\n        }\n        status = CONNECTED;\n\n        enabledPings = true;\n        usePing();\n\n        if (onconnected) {\n            onconnected();\n        }\n    }\n\n    wsConfig.onerror = function (error) {\n        Logger.debug(\"--------- ONERROR -----------\");\n\n        status = DISCONNECTED;\n\n        stopPing();\n\n        if (onerror) {\n            onerror(error);\n        }\n    }\n\n    var ws = new WebSocketWithReconnection(wsConfig);\n\n    Logger.debug('Connecting websocket to URI: ' + wsConfig.uri);\n\n    var rpcBuilderOptions = {\n        request_timeout: configuration.rpc.requestTimeout,\n        ping_request_timeout: configuration.rpc.heartbeatRequestTimeout\n    };\n\n    var rpc = new RpcBuilder(RpcBuilder.packers.JsonRPC, rpcBuilderOptions, ws,\n        function (request) {\n\n            Logger.debug('Received request: ' + JSON.stringify(request));\n\n            try {\n                var func = configuration.rpc[request.method];\n\n                if (func === undefined) {\n                    Logger.error(\"Method \" + request.method + \" not registered in client\");\n                } else {\n                    func(request.params, request);\n                }\n            } catch (err) {\n                Logger.error('Exception processing request: ' + JSON.stringify(request));\n                Logger.error(err);\n            }\n        });\n\n    this.send = function (method, params, callback) {\n        if (method !== 'ping') {\n            Logger.debug('Request: method:' + method + \" params:\" + JSON.stringify(params));\n        }\n\n        var requestTime = Date.now();\n\n        rpc.encode(method, params, function (error, result) {\n            if (error) {\n                try {\n                    Logger.error(\"ERROR:\" + error.message + \" in Request: method:\" +\n                        method + \" params:\" + JSON.stringify(params) + \" request:\" +\n                        error.request);\n                    if (error.data) {\n                        Logger.error(\"ERROR DATA:\" + JSON.stringify(error.data));\n                    }\n                } catch (e) {}\n                error.requestTime = requestTime;\n            }\n            if (callback) {\n                if (result != undefined && result.value !== 'pong') {\n                    Logger.debug('Response: ' + JSON.stringify(result));\n                }\n                callback(error, result);\n            }\n        });\n    }\n\n    function updateNotReconnectIfLessThan() {\n        Logger.debug(\"notReconnectIfNumLessThan = \" + pingNextNum + ' (old=' +\n            notReconnectIfNumLessThan + ')');\n        notReconnectIfNumLessThan = pingNextNum;\n    }\n\n    function sendPing() {\n        if (enabledPings) {\n            var params = null;\n            if (pingNextNum == 0 || pingNextNum == notReconnectIfNumLessThan) {\n                params = {\n                    interval: configuration.heartbeat || PING_INTERVAL\n                };\n            }\n            pingNextNum++;\n\n            self.send('ping', params, (function (pingNum) {\n                return function (error, result) {\n                    if (error) {\n                        Logger.debug(\"Error in ping request #\" + pingNum + \" (\" +\n                            error.message + \")\");\n                        if (pingNum > notReconnectIfNumLessThan) {\n                            enabledPings = false;\n                            updateNotReconnectIfLessThan();\n                            Logger.debug(\"Server did not respond to ping message #\" +\n                                pingNum + \". Reconnecting... \");\n                            ws.reconnectWs();\n                        }\n                    }\n                }\n            })(pingNextNum));\n        } else {\n            Logger.debug(\"Trying to send ping, but ping is not enabled\");\n        }\n    }\n\n    /*\n     * If configuration.hearbeat has any value, the ping-pong will work with the interval\n     * of configuration.hearbeat\n     */\n    function usePing() {\n        if (!pingPongStarted) {\n            Logger.debug(\"Starting ping (if configured)\")\n            pingPongStarted = true;\n\n            if (configuration.heartbeat != undefined) {\n                pingInterval = setInterval(sendPing, configuration.heartbeat);\n                sendPing();\n            }\n        }\n    }\n\n    function stopPing() {\n        clearInterval(pingInterval);\n        pingPongStarted = false;\n        enabledPings = false;\n        pingNextNum = -1;\n        rpc.cancel();\n    }\n\n    this.close = function (code, reason) {\n        Logger.debug(\"Closing  with code: \" + code + \" because: \" + reason);\n        if (pingInterval != undefined) {\n            Logger.debug(\"Clearing ping interval\");\n            clearInterval(pingInterval);\n        }\n        pingPongStarted = false;\n        enabledPings = false;\n        ws.close(code, reason);\n    }\n\n    // This method is only for testing\n    this.forceClose = function (millis) {\n        ws.forceClose(millis);\n    }\n\n    this.reconnect = function () {\n        ws.reconnectWs();\n    }\n\n    this.resetPing = function () {\n        enabledPings = true;\n        pingNextNum = 0;\n        usePing();\n    }\n}\n\n\nmodule.exports = JsonRpcClient;","/*\n * (C) Copyright 2014 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar WebSocketWithReconnection  = require('./webSocketWithReconnection');\n\n\nexports.WebSocketWithReconnection  = WebSocketWithReconnection;","/*\n * (C) Copyright 2013-2015 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Logger = console;\n\nvar MAX_RETRIES = 2000; // Forever...\nvar RETRY_TIME_MS = 3000; // FIXME: Implement exponential wait times...\n\nvar CONNECTING = 0;\nvar OPEN = 1;\nvar CLOSING = 2;\nvar CLOSED = 3;\n\n/*\nconfig = {\nuri : wsUri,\nonconnected : callback method to invoke when connection is successful,\nondisconnect : callback method to invoke when the connection is lost (max retries for reconnecting reached),\nonreconnecting : callback method to invoke when the client is reconnecting,\nonreconnected : callback method to invoke when the client successfully reconnects,\n};\n*/\nfunction WebSocketWithReconnection(config) {\n    var closing = false;\n    var registerMessageHandler;\n    var wsUri = config.uri;\n    var reconnecting = false;\n\n    var ws = new WebSocket(wsUri);\n\n    ws.onopen = () => {\n        Logger.debug(\"WebSocket connected to \" + wsUri);\n        if (config.onconnected) {\n            config.onconnected();\n        }\n    };\n\n    ws.onerror = error => {\n        Logger.error(\n            \"Could not connect to \" + wsUri + \" (invoking onerror if defined)\",\n            error\n        );\n        if (config.onerror) {\n            config.onerror(error);\n        }\n    };\n\n    var reconnectionOnClose = () => {\n        if (ws.readyState === CLOSED) {\n            if (closing) {\n                Logger.debug(\"Connection closed by user\");\n            } else {\n                Logger.debug(\"Connection closed unexpectecly. Reconnecting...\");\n                reconnect(MAX_RETRIES, 1);\n            }\n        } else {\n            Logger.debug(\"Close callback from previous websocket. Ignoring it\");\n        }\n    };\n\n    ws.onclose = reconnectionOnClose;\n\n    function reconnect(maxRetries, numRetries) {\n        Logger.debug(\n            \"reconnect (attempt #\" + numRetries + \", max=\" + maxRetries + \")\"\n        );\n        if (numRetries === 1) {\n            if (reconnecting) {\n                Logger.warn(\n                    \"Trying to reconnect when already reconnecting... Ignoring this reconnection.\"\n                );\n                return;\n            } else {\n                reconnecting = true;\n            }\n            if (config.onreconnecting) {\n                config.onreconnecting();\n            }\n        }\n        reconnectAux(maxRetries, numRetries);\n    }\n\n    function reconnectAux(maxRetries, numRetries) {\n        Logger.debug(\"Reconnection attempt #\" + numRetries);\n        ws.close();\n        ws = new WebSocket(wsUri);\n\n        ws.onopen = () => {\n            Logger.debug(\n                \"Reconnected to \" + wsUri + \" after \" + numRetries + \" attempts...\"\n            );\n            reconnecting = false;\n            registerMessageHandler();\n            if (config.onreconnected()) {\n                config.onreconnected();\n            }\n            ws.onclose = reconnectionOnClose;\n        };\n\n        ws.onerror = error => {\n            Logger.warn(\"Reconnection error: \", error);\n            if (numRetries === maxRetries) {\n                if (config.ondisconnect) {\n                    config.ondisconnect();\n                }\n            } else {\n                setTimeout(() => {\n                    reconnect(maxRetries, numRetries + 1);\n                }, RETRY_TIME_MS);\n            }\n        };\n    }\n\n    this.close = () => {\n        closing = true;\n        ws.close();\n    };\n\n    this.reconnectWs = () => {\n        Logger.debug(\"reconnectWs\");\n        reconnect(MAX_RETRIES, 1);\n    };\n\n    this.send = message => {\n        ws.send(message);\n    };\n\n    this.addEventListener = (type, callback) => {\n        registerMessageHandler = () => {\n            ws.addEventListener(type, callback);\n        };\n        registerMessageHandler();\n    };\n}\n\nmodule.exports = WebSocketWithReconnection;","/*\n * (C) Copyright 2014 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n\nvar defineProperty_IE8 = false\nif(Object.defineProperty)\n{\n  try\n  {\n    Object.defineProperty({}, \"x\", {});\n  }\n  catch(e)\n  {\n    defineProperty_IE8 = true\n  }\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n  Function.prototype.bind = function(oThis) {\n    if (typeof this !== 'function') {\n      // closest thing possible to the ECMAScript 5\n      // internal IsCallable function\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n    }\n\n    var aArgs   = Array.prototype.slice.call(arguments, 1),\n        fToBind = this,\n        fNOP    = function() {},\n        fBound  = function() {\n          return fToBind.apply(this instanceof fNOP && oThis\n                 ? this\n                 : oThis,\n                 aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n    fNOP.prototype = this.prototype;\n    fBound.prototype = new fNOP();\n\n    return fBound;\n  };\n}\n\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar inherits = require('inherits');\n\nvar packers = require('./packers');\nvar Mapper = require('./Mapper');\n\n\nvar BASE_TIMEOUT = 5000;\n\n\nfunction unifyResponseMethods(responseMethods)\n{\n  if(!responseMethods) return {};\n\n  for(var key in responseMethods)\n  {\n    var value = responseMethods[key];\n\n    if(typeof value == 'string')\n      responseMethods[key] =\n      {\n        response: value\n      }\n  };\n\n  return responseMethods;\n};\n\nfunction unifyTransport(transport)\n{\n  if(!transport) return;\n\n  // Transport as a function\n  if(transport instanceof Function)\n    return {send: transport};\n\n  // WebSocket & DataChannel\n  if(transport.send instanceof Function)\n    return transport;\n\n  // Message API (Inter-window & WebWorker)\n  if(transport.postMessage instanceof Function)\n  {\n    transport.send = transport.postMessage;\n    return transport;\n  }\n\n  // Stream API\n  if(transport.write instanceof Function)\n  {\n    transport.send = transport.write;\n    return transport;\n  }\n\n  // Transports that only can receive messages, but not send\n  if(transport.onmessage !== undefined) return;\n  if(transport.pause instanceof Function) return;\n\n  throw new SyntaxError(\"Transport is not a function nor a valid object\");\n};\n\n\n/**\n * Representation of a RPC notification\n *\n * @class\n *\n * @constructor\n *\n * @param {String} method -method of the notification\n * @param params - parameters of the notification\n */\nfunction RpcNotification(method, params)\n{\n  if(defineProperty_IE8)\n  {\n    this.method = method\n    this.params = params\n  }\n  else\n  {\n    Object.defineProperty(this, 'method', {value: method, enumerable: true});\n    Object.defineProperty(this, 'params', {value: params, enumerable: true});\n  }\n};\n\n\n/**\n * @class\n *\n * @constructor\n *\n * @param {object} packer\n *\n * @param {object} [options]\n *\n * @param {object} [transport]\n *\n * @param {Function} [onRequest]\n */\nfunction RpcBuilder(packer, options, transport, onRequest)\n{\n  var self = this;\n\n  if(!packer)\n    throw new SyntaxError('Packer is not defined');\n\n  if(!packer.pack || !packer.unpack)\n    throw new SyntaxError('Packer is invalid');\n\n  var responseMethods = unifyResponseMethods(packer.responseMethods);\n\n\n  if(options instanceof Function)\n  {\n    if(transport != undefined)\n      throw new SyntaxError(\"There can't be parameters after onRequest\");\n\n    onRequest = options;\n    transport = undefined;\n    options   = undefined;\n  };\n\n  if(options && options.send instanceof Function)\n  {\n    if(transport && !(transport instanceof Function))\n      throw new SyntaxError(\"Only a function can be after transport\");\n\n    onRequest = transport;\n    transport = options;\n    options   = undefined;\n  };\n\n  if(transport instanceof Function)\n  {\n    if(onRequest != undefined)\n      throw new SyntaxError(\"There can't be parameters after onRequest\");\n\n    onRequest = transport;\n    transport = undefined;\n  };\n\n  if(transport && transport.send instanceof Function)\n    if(onRequest && !(onRequest instanceof Function))\n      throw new SyntaxError(\"Only a function can be after transport\");\n\n  options = options || {};\n\n\n  EventEmitter.call(this);\n\n  if(onRequest)\n    this.on('request', onRequest);\n\n\n  if(defineProperty_IE8)\n    this.peerID = options.peerID\n  else\n    Object.defineProperty(this, 'peerID', {value: options.peerID});\n\n  var max_retries = options.max_retries || 0;\n\n\n  function transportMessage(event)\n  {\n    self.decode(event.data || event);\n  };\n\n  this.getTransport = function()\n  {\n    return transport;\n  }\n  this.setTransport = function(value)\n  {\n    // Remove listener from old transport\n    if(transport)\n    {\n      // W3C transports\n      if(transport.removeEventListener)\n        transport.removeEventListener('message', transportMessage);\n\n      // Node.js Streams API\n      else if(transport.removeListener)\n        transport.removeListener('data', transportMessage);\n    };\n\n    // Set listener on new transport\n    if(value)\n    {\n      // W3C transports\n      if(value.addEventListener)\n        value.addEventListener('message', transportMessage);\n\n      // Node.js Streams API\n      else if(value.addListener)\n        value.addListener('data', transportMessage);\n    };\n\n    transport = unifyTransport(value);\n  }\n\n  if(!defineProperty_IE8)\n    Object.defineProperty(this, 'transport',\n    {\n      get: this.getTransport.bind(this),\n      set: this.setTransport.bind(this)\n    })\n\n  this.setTransport(transport);\n\n\n  var request_timeout      = options.request_timeout      || BASE_TIMEOUT;\n  var ping_request_timeout = options.ping_request_timeout || request_timeout;\n  var response_timeout     = options.response_timeout     || BASE_TIMEOUT;\n  var duplicates_timeout   = options.duplicates_timeout   || BASE_TIMEOUT;\n\n\n  var requestID = 0;\n\n  var requests  = new Mapper();\n  var responses = new Mapper();\n  var processedResponses = new Mapper();\n\n  var message2Key = {};\n\n\n  /**\n   * Store the response to prevent to process duplicate request later\n   */\n  function storeResponse(message, id, dest)\n  {\n    var response =\n    {\n      message: message,\n      /** Timeout to auto-clean old responses */\n      timeout: setTimeout(function()\n      {\n        responses.remove(id, dest);\n      },\n      response_timeout)\n    };\n\n    responses.set(response, id, dest);\n  };\n\n  /**\n   * Store the response to ignore duplicated messages later\n   */\n  function storeProcessedResponse(ack, from)\n  {\n    var timeout = setTimeout(function()\n    {\n      processedResponses.remove(ack, from);\n    },\n    duplicates_timeout);\n\n    processedResponses.set(timeout, ack, from);\n  };\n\n\n  /**\n   * Representation of a RPC request\n   *\n   * @class\n   * @extends RpcNotification\n   *\n   * @constructor\n   *\n   * @param {String} method -method of the notification\n   * @param params - parameters of the notification\n   * @param {Integer} id - identifier of the request\n   * @param [from] - source of the notification\n   */\n  function RpcRequest(method, params, id, from, transport)\n  {\n    RpcNotification.call(this, method, params);\n\n    this.getTransport = function()\n    {\n      return transport;\n    }\n    this.setTransport = function(value)\n    {\n      transport = unifyTransport(value);\n    }\n\n    if(!defineProperty_IE8)\n      Object.defineProperty(this, 'transport',\n      {\n        get: this.getTransport.bind(this),\n        set: this.setTransport.bind(this)\n      })\n\n    var response = responses.get(id, from);\n\n    /**\n     * @constant {Boolean} duplicated\n     */\n    if(!(transport || self.getTransport()))\n    {\n      if(defineProperty_IE8)\n        this.duplicated = Boolean(response)\n      else\n        Object.defineProperty(this, 'duplicated',\n        {\n          value: Boolean(response)\n        });\n    }\n\n    var responseMethod = responseMethods[method];\n\n    this.pack = packer.pack.bind(packer, this, id)\n\n    /**\n     * Generate a response to this request\n     *\n     * @param {Error} [error]\n     * @param {*} [result]\n     *\n     * @returns {string}\n     */\n    this.reply = function(error, result, transport)\n    {\n      // Fix optional parameters\n      if(error instanceof Function || error && error.send instanceof Function)\n      {\n        if(result != undefined)\n          throw new SyntaxError(\"There can't be parameters after callback\");\n\n        transport = error;\n        result = null;\n        error = undefined;\n      }\n\n      else if(result instanceof Function\n      || result && result.send instanceof Function)\n      {\n        if(transport != undefined)\n          throw new SyntaxError(\"There can't be parameters after callback\");\n\n        transport = result;\n        result = null;\n      };\n\n      transport = unifyTransport(transport);\n\n      // Duplicated request, remove old response timeout\n      if(response)\n        clearTimeout(response.timeout);\n\n      if(from != undefined)\n      {\n        if(error)\n          error.dest = from;\n\n        if(result)\n          result.dest = from;\n      };\n\n      var message;\n\n      // New request or overriden one, create new response with provided data\n      if(error || result != undefined)\n      {\n        if(self.peerID != undefined)\n        {\n          if(error)\n            error.from = self.peerID;\n          else\n            result.from = self.peerID;\n        }\n\n        // Protocol indicates that responses has own request methods\n        if(responseMethod)\n        {\n          if(responseMethod.error == undefined && error)\n            message =\n            {\n              error: error\n            };\n\n          else\n          {\n            var method = error\n                       ? responseMethod.error\n                       : responseMethod.response;\n\n            message =\n            {\n              method: method,\n              params: error || result\n            };\n          }\n        }\n        else\n          message =\n          {\n            error:  error,\n            result: result\n          };\n\n        message = packer.pack(message, id);\n      }\n\n      // Duplicate & not-overriden request, re-send old response\n      else if(response)\n        message = response.message;\n\n      // New empty reply, response null value\n      else\n        message = packer.pack({result: null}, id);\n\n      // Store the response to prevent to process a duplicated request later\n      storeResponse(message, id, from);\n\n      // Return the stored response so it can be directly send back\n      transport = transport || this.getTransport() || self.getTransport();\n\n      if(transport)\n        return transport.send(message);\n\n      return message;\n    }\n  };\n  inherits(RpcRequest, RpcNotification);\n\n\n  function cancel(message)\n  {\n    var key = message2Key[message];\n    if(!key) return;\n\n    delete message2Key[message];\n\n    var request = requests.pop(key.id, key.dest);\n    if(!request) return;\n\n    clearTimeout(request.timeout);\n\n    // Start duplicated responses timeout\n    storeProcessedResponse(key.id, key.dest);\n  };\n\n  /**\n   * Allow to cancel a request and don't wait for a response\n   *\n   * If `message` is not given, cancel all the request\n   */\n  this.cancel = function(message)\n  {\n    if(message) return cancel(message);\n\n    for(var message in message2Key)\n      cancel(message);\n  };\n\n\n  this.close = function()\n  {\n    // Prevent to receive new messages\n    var transport = this.getTransport();\n    if(transport && transport.close)\n      transport.close(4003, \"Cancel request\");\n\n    // Request & processed responses\n    this.cancel();\n\n    processedResponses.forEach(clearTimeout);\n\n    // Responses\n    responses.forEach(function(response)\n    {\n      clearTimeout(response.timeout);\n    });\n  };\n\n\n  /**\n   * Generates and encode a JsonRPC 2.0 message\n   *\n   * @param {String} method -method of the notification\n   * @param params - parameters of the notification\n   * @param [dest] - destination of the notification\n   * @param {object} [transport] - transport where to send the message\n   * @param [callback] - function called when a response to this request is\n   *   received. If not defined, a notification will be send instead\n   *\n   * @returns {string} A raw JsonRPC 2.0 request or notification string\n   */\n  this.encode = function(method, params, dest, transport, callback)\n  {\n    // Fix optional parameters\n    if(params instanceof Function)\n    {\n      if(dest != undefined)\n        throw new SyntaxError(\"There can't be parameters after callback\");\n\n      callback  = params;\n      transport = undefined;\n      dest      = undefined;\n      params    = undefined;\n    }\n\n    else if(dest instanceof Function)\n    {\n      if(transport != undefined)\n        throw new SyntaxError(\"There can't be parameters after callback\");\n\n      callback  = dest;\n      transport = undefined;\n      dest      = undefined;\n    }\n\n    else if(transport instanceof Function)\n    {\n      if(callback != undefined)\n        throw new SyntaxError(\"There can't be parameters after callback\");\n\n      callback  = transport;\n      transport = undefined;\n    };\n\n    if(self.peerID != undefined)\n    {\n      params = params || {};\n\n      params.from = self.peerID;\n    };\n\n    if(dest != undefined)\n    {\n      params = params || {};\n\n      params.dest = dest;\n    };\n\n    // Encode message\n    var message =\n    {\n      method: method,\n      params: params\n    };\n\n    if(callback)\n    {\n      var id = requestID++;\n      var retried = 0;\n\n      message = packer.pack(message, id);\n\n      function dispatchCallback(error, result)\n      {\n        self.cancel(message);\n\n        callback(error, result);\n      };\n\n      var request =\n      {\n        message:         message,\n        callback:        dispatchCallback,\n        responseMethods: responseMethods[method] || {}\n      };\n\n      var encode_transport = unifyTransport(transport);\n\n      function sendRequest(transport)\n      {\n        var rt = (method === 'ping' ? ping_request_timeout : request_timeout);\n        request.timeout = setTimeout(timeout, rt*Math.pow(2, retried++));\n        message2Key[message] = {id: id, dest: dest};\n        requests.set(request, id, dest);\n\n        transport = transport || encode_transport || self.getTransport();\n        if(transport)\n          return transport.send(message);\n\n        return message;\n      };\n\n      function retry(transport)\n      {\n        transport = unifyTransport(transport);\n\n        console.warn(retried+' retry for request message:',message);\n\n        var timeout = processedResponses.pop(id, dest);\n        clearTimeout(timeout);\n\n        return sendRequest(transport);\n      };\n\n      function timeout()\n      {\n        if(retried < max_retries)\n          return retry(transport);\n\n        var error = new Error('Request has timed out');\n            error.request = message;\n\n        error.retry = retry;\n\n        dispatchCallback(error)\n      };\n\n      return sendRequest(transport);\n    };\n\n    // Return the packed message\n    message = packer.pack(message);\n\n    transport = transport || this.getTransport();\n    if(transport)\n      return transport.send(message);\n\n    return message;\n  };\n\n  /**\n   * Decode and process a JsonRPC 2.0 message\n   *\n   * @param {string} message - string with the content of the message\n   *\n   * @returns {RpcNotification|RpcRequest|undefined} - the representation of the\n   *   notification or the request. If a response was processed, it will return\n   *   `undefined` to notify that it was processed\n   *\n   * @throws {TypeError} - Message is not defined\n   */\n  this.decode = function(message, transport)\n  {\n    if(!message)\n      throw new TypeError(\"Message is not defined\");\n\n    try\n    {\n      message = packer.unpack(message);\n    }\n    catch(e)\n    {\n      // Ignore invalid messages\n      return console.debug(e, message);\n    };\n\n    var id     = message.id;\n    var ack    = message.ack;\n    var method = message.method;\n    var params = message.params || {};\n\n    var from = params.from;\n    var dest = params.dest;\n\n    // Ignore messages send by us\n    if(self.peerID != undefined && from == self.peerID) return;\n\n    // Notification\n    if(id == undefined && ack == undefined)\n    {\n      var notification = new RpcNotification(method, params);\n\n      if(self.emit('request', notification)) return;\n      return notification;\n    };\n\n\n    function processRequest()\n    {\n      // If we have a transport and it's a duplicated request, reply inmediatly\n      transport = unifyTransport(transport) || self.getTransport();\n      if(transport)\n      {\n        var response = responses.get(id, from);\n        if(response)\n          return transport.send(response.message);\n      };\n\n      var idAck = (id != undefined) ? id : ack;\n      var request = new RpcRequest(method, params, idAck, from, transport);\n\n      if(self.emit('request', request)) return;\n      return request;\n    };\n\n    function processResponse(request, error, result)\n    {\n      request.callback(error, result);\n    };\n\n    function duplicatedResponse(timeout)\n    {\n      console.warn(\"Response already processed\", message);\n\n      // Update duplicated responses timeout\n      clearTimeout(timeout);\n      storeProcessedResponse(ack, from);\n    };\n\n\n    // Request, or response with own method\n    if(method)\n    {\n      // Check if it's a response with own method\n      if(dest == undefined || dest == self.peerID)\n      {\n        var request = requests.get(ack, from);\n        if(request)\n        {\n          var responseMethods = request.responseMethods;\n\n          if(method == responseMethods.error)\n            return processResponse(request, params);\n\n          if(method == responseMethods.response)\n            return processResponse(request, null, params);\n\n          return processRequest();\n        }\n\n        var processed = processedResponses.get(ack, from);\n        if(processed)\n          return duplicatedResponse(processed);\n      }\n\n      // Request\n      return processRequest();\n    };\n\n    var error  = message.error;\n    var result = message.result;\n\n    // Ignore responses not send to us\n    if(error  && error.dest  && error.dest  != self.peerID) return;\n    if(result && result.dest && result.dest != self.peerID) return;\n\n    // Response\n    var request = requests.get(ack, from);\n    if(!request)\n    {\n      var processed = processedResponses.get(ack, from);\n      if(processed)\n        return duplicatedResponse(processed);\n\n      return console.warn(\"No callback was defined for this message\", message);\n    };\n\n    // Process response\n    processResponse(request, error, result);\n  };\n};\ninherits(RpcBuilder, EventEmitter);\n\n\nRpcBuilder.RpcNotification = RpcNotification;\n\n\nmodule.exports = RpcBuilder;\n\nvar clients = require('./clients');\nvar transports = require('./clients/transports');\n\nRpcBuilder.clients = clients;\nRpcBuilder.clients.transports = transports;\nRpcBuilder.packers = packers;\n","/**\n * JsonRPC 2.0 packer\n */\n\n/**\n * Pack a JsonRPC 2.0 message\n *\n * @param {Object} message - object to be packaged. It requires to have all the\n *   fields needed by the JsonRPC 2.0 message that it's going to be generated\n *\n * @return {String} - the stringified JsonRPC 2.0 message\n */\nfunction pack(message, id)\n{\n  var result =\n  {\n    jsonrpc: \"2.0\"\n  };\n\n  // Request\n  if(message.method)\n  {\n    result.method = message.method;\n\n    if(message.params)\n      result.params = message.params;\n\n    // Request is a notification\n    if(id != undefined)\n      result.id = id;\n  }\n\n  // Response\n  else if(id != undefined)\n  {\n    if(message.error)\n    {\n      if(message.result !== undefined)\n        throw new TypeError(\"Both result and error are defined\");\n\n      result.error = message.error;\n    }\n    else if(message.result !== undefined)\n      result.result = message.result;\n    else\n      throw new TypeError(\"No result or error is defined\");\n\n    result.id = id;\n  };\n\n  return JSON.stringify(result);\n};\n\n/**\n * Unpack a JsonRPC 2.0 message\n *\n * @param {String} message - string with the content of the JsonRPC 2.0 message\n *\n * @throws {TypeError} - Invalid JsonRPC version\n *\n * @return {Object} - object filled with the JsonRPC 2.0 message content\n */\nfunction unpack(message)\n{\n  var result = message;\n\n  if(typeof message === 'string' || message instanceof String) {\n    result = JSON.parse(message);\n  }\n\n  // Check if it's a valid message\n\n  var version = result.jsonrpc;\n  if(version !== '2.0')\n    throw new TypeError(\"Invalid JsonRPC version '\" + version + \"': \" + message);\n\n  // Response\n  if(result.method == undefined)\n  {\n    if(result.id == undefined)\n      throw new TypeError(\"Invalid message: \"+message);\n\n    var result_defined = result.result !== undefined;\n    var error_defined  = result.error  !== undefined;\n\n    // Check only result or error is defined, not both or none\n    if(result_defined && error_defined)\n      throw new TypeError(\"Both result and error are defined: \"+message);\n\n    if(!result_defined && !error_defined)\n      throw new TypeError(\"No result or error is defined: \"+message);\n\n    result.ack = result.id;\n    delete result.id;\n  }\n\n  // Return unpacked message\n  return result;\n};\n\n\nexports.pack   = pack;\nexports.unpack = unpack;\n","function pack(message)\n{\n  throw new TypeError(\"Not yet implemented\");\n};\n\nfunction unpack(message)\n{\n  throw new TypeError(\"Not yet implemented\");\n};\n\n\nexports.pack   = pack;\nexports.unpack = unpack;\n","var JsonRPC = require('./JsonRPC');\nvar XmlRPC  = require('./XmlRPC');\n\n\nexports.JsonRPC = JsonRPC;\nexports.XmlRPC  = XmlRPC;\n","export class OpenViduLogger {\n\n\tprivate static instance: OpenViduLogger;\n\tprivate logger: Console = window.console;\n\tprivate LOG_FNS = [this.logger.log, this.logger.debug, this.logger.info, this.logger.warn, this.logger.error];\n\tprivate isProdMode = false;\n\n\tprivate constructor() {}\n\n\tstatic getInstance(): OpenViduLogger {\n\t\tif(!OpenViduLogger.instance){\n\t\t\tOpenViduLogger.instance = new OpenViduLogger();\n\t\t}\n\t\treturn OpenViduLogger.instance;\n\t}\n\n\tlog(...args: any[]){\n\t\tif (!this.isProdMode) {\n\t\t\tthis.LOG_FNS[0].apply(this.logger, arguments);\n\t\t}\n\t}\n\n\tdebug(...args: any[]) {\n\t\tif (!this.isProdMode) {\n\t\t\tthis.LOG_FNS[1].apply(this.logger, arguments);\n\t\t}\n\t}\n\n\tinfo(...args: any[]) {\n\t\tif (!this.isProdMode) {\n\t\t\tthis.LOG_FNS[2].apply(this.logger, arguments);\n\t\t}\n\t}\n\n\twarn(...args: any[]) {\n\t\tif (!this.isProdMode) {\n\t\t\tthis.LOG_FNS[3].apply(this.logger, arguments);\n\t\t}\n\t}\n\n\terror(...args: any[]) {\n\t\tthis.LOG_FNS[4].apply(this.logger, arguments);\n\t}\n\n\tenableProdMode(){\n\t\tthis.isProdMode = true;\n\t}\n}","// Last time updated on June 08, 2018\n\n// Latest file can be found here: https://cdn.webrtc-experiment.com/getScreenId.js\n\n// Muaz Khan         - www.MuazKhan.com\n// MIT License       - www.WebRTC-Experiment.com/licence\n// Documentation     - https://github.com/muaz-khan/getScreenId.\n\n// ______________\n// getScreenId.js\n\n/*\ngetScreenId(function (error, sourceId, screen_constraints) {\n    // error    == null || 'permission-denied' || 'not-installed' || 'installed-disabled' || 'not-chrome'\n    // sourceId == null || 'string' || 'firefox'\n\n    if(microsoftEdge) {\n        navigator.getDisplayMedia(screen_constraints).then(onSuccess, onFailure);\n    }\n    else {\n        navigator.mediaDevices.getUserMedia(screen_constraints).then(onSuccess)catch(onFailure);\n    }\n}, 'pass second parameter only if you want system audio');\n*/\n\nwindow.getScreenId = function (firefoxString, callback, custom_parameter) {\n    if (navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveOrOpenBlob || !!navigator.msSaveBlob)) {\n        // microsoft edge => navigator.getDisplayMedia(screen_constraints).then(onSuccess, onFailure);\n        callback({\n            video: true\n        });\n        return;\n    }\n\n    // for Firefox:\n    // sourceId == 'firefox'\n    // screen_constraints = {...}\n    if (!!navigator.mozGetUserMedia) {\n        callback(null, 'firefox', {\n            video: {\n                mozMediaSource: firefoxString,\n                mediaSource: firefoxString\n            }\n        });\n        return;\n    }\n\n    window.addEventListener('message', onIFrameCallback);\n\n    function onIFrameCallback(event) {\n        if (!event.data) return;\n\n        if (event.data.chromeMediaSourceId) {\n            if (event.data.chromeMediaSourceId === 'PermissionDeniedError') {\n                callback('permission-denied');\n            } else {\n                callback(null, event.data.chromeMediaSourceId, getScreenConstraints(null, event.data.chromeMediaSourceId, event.data.canRequestAudioTrack));\n            }\n\n            // this event listener is no more needed\n            window.removeEventListener('message', onIFrameCallback);\n        }\n\n        if (event.data.chromeExtensionStatus) {\n            callback(event.data.chromeExtensionStatus, null, getScreenConstraints(event.data.chromeExtensionStatus));\n\n            // this event listener is no more needed\n            window.removeEventListener('message', onIFrameCallback);\n        }\n    }\n\n    if (!custom_parameter) {\n        setTimeout(postGetSourceIdMessage, 100);\n    }\n    else {\n        setTimeout(function () {\n            postGetSourceIdMessage(custom_parameter);\n        }, 100);\n    }\n};\n\nfunction getScreenConstraints(error, sourceId, canRequestAudioTrack) {\n    var screen_constraints = {\n        audio: false,\n        video: {\n            mandatory: {\n                chromeMediaSource: error ? 'screen' : 'desktop',\n                maxWidth: window.screen.width > 1920 ? window.screen.width : 1920,\n                maxHeight: window.screen.height > 1080 ? window.screen.height : 1080\n            },\n            optional: []\n        }\n    };\n\n    if (!!canRequestAudioTrack) {\n        screen_constraints.audio = {\n            mandatory: {\n                chromeMediaSource: error ? 'screen' : 'desktop',\n                // echoCancellation: true\n            },\n            optional: []\n        };\n    }\n\n    if (sourceId) {\n        screen_constraints.video.mandatory.chromeMediaSourceId = sourceId;\n\n        if (screen_constraints.audio && screen_constraints.audio.mandatory) {\n            screen_constraints.audio.mandatory.chromeMediaSourceId = sourceId;\n        }\n    }\n\n    return screen_constraints;\n}\n\nfunction postGetSourceIdMessage(custom_parameter) {\n    if (!iframe) {\n        loadIFrame(function () {\n            postGetSourceIdMessage(custom_parameter);\n        });\n        return;\n    }\n\n    if (!iframe.isLoaded) {\n        setTimeout(function () {\n            postGetSourceIdMessage(custom_parameter);\n        }, 100);\n        return;\n    }\n\n    if (!custom_parameter) {\n        iframe.contentWindow.postMessage({\n            captureSourceId: true\n        }, '*');\n    }\n    else if (!!custom_parameter.forEach) {\n        iframe.contentWindow.postMessage({\n            captureCustomSourceId: custom_parameter\n        }, '*');\n    }\n    else {\n        iframe.contentWindow.postMessage({\n            captureSourceIdWithAudio: true\n        }, '*');\n    }\n}\n\nvar iframe;\n\n// this function is used in RTCMultiConnection v3\nwindow.getScreenConstraints = function (callback) {\n    loadIFrame(function () {\n        getScreenId(function (error, sourceId, screen_constraints) {\n            if (!screen_constraints) {\n                screen_constraints = {\n                    video: true\n                };\n            }\n\n            callback(error, screen_constraints.video);\n        });\n    });\n};\n\nfunction loadIFrame(loadCallback) {\n    if (iframe) {\n        loadCallback();\n        return;\n    }\n\n    iframe = document.createElement('iframe');\n    iframe.onload = function () {\n        iframe.isLoaded = true;\n        loadCallback();\n    };\n    iframe.src = 'https://openvidu.github.io/openvidu-screen-sharing-chrome-extension/';\n    iframe.style.display = 'none';\n    (document.body || document.documentElement).appendChild(iframe);\n}\n\nwindow.getChromeExtensionStatus = function (callback) {\n    // for Firefox:\n    if (!!navigator.mozGetUserMedia) {\n        callback('installed-enabled');\n        return;\n    }\n\n    window.addEventListener('message', onIFrameCallback);\n\n    function onIFrameCallback(event) {\n        if (!event.data) return;\n\n        if (event.data.chromeExtensionStatus) {\n            callback(event.data.chromeExtensionStatus);\n\n            // this event listener is no more needed\n            window.removeEventListener('message', onIFrameCallback);\n        }\n    }\n\n    setTimeout(postGetChromeExtensionStatusMessage, 100);\n};\n\nfunction postGetChromeExtensionStatusMessage() {\n    if (!iframe) {\n        loadIFrame(postGetChromeExtensionStatusMessage);\n        return;\n    }\n\n    if (!iframe.isLoaded) {\n        setTimeout(postGetChromeExtensionStatusMessage, 100);\n        return;\n    }\n\n    iframe.contentWindow.postMessage({\n        getChromeExtensionStatus: true\n    }, '*');\n}\n\nexports.getScreenId = window.getScreenId;","// global variables\nvar chromeMediaSource = 'screen';\nvar sourceId;\nvar screenCallback;\n\nif(typeof window !== 'undefined' && typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'){\n    var isFirefox = typeof window.InstallTrigger !== 'undefined';\n    var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n    var isChrome = !!window.chrome && !isOpera;\n\n    window.addEventListener('message', function (event) {\n        if (event.origin != window.location.origin) {\n            return;\n        }\n        onMessageCallback(event.data);\n    });\n}\n\n// and the function that handles received messages\nfunction onMessageCallback(data) {\n    // \"cancel\" button is clicked\n    if (data == 'PermissionDeniedError') {\n        if (screenCallback)\n            return screenCallback('PermissionDeniedError');\n        else\n            throw new Error('PermissionDeniedError');\n    }\n    // extension notified his presence\n    if (data == 'rtcmulticonnection-extension-loaded') {\n        chromeMediaSource = 'desktop';\n    }\n    // extension shared temp sourceId\n    if (data.sourceId && screenCallback) {\n        screenCallback(sourceId = data.sourceId, data.canRequestAudioTrack === true);\n    }\n}\n\n// this method can be used to check if chrome extension is installed & enabled.\nfunction isChromeExtensionAvailable(callback) {\n    if (!callback) return;\n    if (chromeMediaSource == 'desktop') return callback(true);\n\n    // ask extension if it is available\n    window.postMessage('are-you-there', '*');\n    setTimeout(function () {\n        if (chromeMediaSource == 'screen') {\n            callback(false);\n        } else callback(true);\n    }, 2000);\n}\n\n// this function can be used to get \"source-id\" from the extension\nfunction getSourceId(callback) {\n    if (!callback)\n        throw '\"callback\" parameter is mandatory.';\n    if (sourceId)\n        return callback(sourceId);\n    screenCallback = callback;\n    window.postMessage('get-sourceId', '*');\n}\n\n// this function can be used to get \"source-id\" from the extension\nfunction getCustomSourceId(arr, callback) {\n    if (!arr || !arr.forEach) throw '\"arr\" parameter is mandatory and it must be an array.';\n    if (!callback) throw '\"callback\" parameter is mandatory.';\n\n    if (sourceId) return callback(sourceId);\n\n    screenCallback = callback;\n    window.postMessage({\n        'get-custom-sourceId': arr\n    }, '*');\n}\n\n// this function can be used to get \"source-id\" from the extension\nfunction getSourceIdWithAudio(callback) {\n    if (!callback) throw '\"callback\" parameter is mandatory.';\n    if (sourceId) return callback(sourceId);\n\n    screenCallback = callback;\n    window.postMessage('audio-plus-tab', '*');\n}\n\nfunction getChromeExtensionStatus(extensionid, callback) {\n    if (isFirefox)\n        return callback('not-chrome');\n    if (arguments.length != 2) {\n        callback = extensionid;\n        extensionid = 'lfcgfepafnobdloecchnfaclibenjold'; // default extension-id\n    }\n    var image = document.createElement('img');\n    image.src = 'chrome-extension://' + extensionid + '/icon.png';\n    image.onload = function () {\n        chromeMediaSource = 'screen';\n        window.postMessage('are-you-there', '*');\n        setTimeout(function () {\n            if (chromeMediaSource == 'screen') {\n                callback('installed-disabled');\n            } else\n                callback('installed-enabled');\n        }, 2000);\n    };\n    image.onerror = function () {\n        callback('not-installed');\n    };\n}\n\nfunction getScreenConstraintsWithAudio(callback) {\n    getScreenConstraints(callback, true);\n}\n\n// this function explains how to use above methods/objects\nfunction getScreenConstraints(callback, captureSourceIdWithAudio) {\n    sourceId = '';\n    var firefoxScreenConstraints = {\n        mozMediaSource: 'window',\n        mediaSource: 'window'\n    };\n    if (isFirefox)\n        return callback(null, firefoxScreenConstraints);\n    // this statement defines getUserMedia constraints\n    // that will be used to capture content of screen\n    var screen_constraints = {\n        mandatory: {\n            chromeMediaSource: chromeMediaSource,\n            maxWidth: screen.width > 1920 ? screen.width : 1920,\n            maxHeight: screen.height > 1080 ? screen.height : 1080\n        },\n        optional: []\n    };\n    // this statement verifies chrome extension availability\n    // if installed and available then it will invoke extension API\n    // otherwise it will fallback to command-line based screen capturing API\n    if (chromeMediaSource == 'desktop' && !sourceId) {\n        if (captureSourceIdWithAudio) {\n            getSourceIdWithAudio(function (sourceId, canRequestAudioTrack) {\n                screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n\n                if (canRequestAudioTrack) {\n                    screen_constraints.canRequestAudioTrack = true;\n                }\n                callback(sourceId == 'PermissionDeniedError' ? sourceId : null, screen_constraints);\n            });\n        }\n        else {\n            getSourceId(function (sourceId) {\n                screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n                callback(sourceId == 'PermissionDeniedError' ? sourceId : null, screen_constraints);\n            });\n        }\n        return;\n    }\n\n    // this statement sets gets 'sourceId\" and sets \"chromeMediaSourceId\"\n    if (chromeMediaSource == 'desktop') {\n        screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n    }\n\n    // now invoking native getUserMedia API\n    callback(null, screen_constraints);\n}\n\nexports.getScreenConstraints = getScreenConstraints;\nexports.getScreenConstraintsWithAudio = getScreenConstraintsWithAudio;\nexports.isChromeExtensionAvailable = isChromeExtensionAvailable;\nexports.getChromeExtensionStatus = getChromeExtensionStatus;\nexports.getSourceId = getSourceId;","import platform = require(\"platform\");\n\nexport class PlatformUtils {\n\tprotected static instance: PlatformUtils;\n\tconstructor() {}\n\n\tstatic getInstance(): PlatformUtils {\n\t\tif (!this.instance) {\n\t\t\tthis.instance = new PlatformUtils();\n\t\t}\n\t\treturn PlatformUtils.instance;\n\t}\n\n\tpublic isChromeBrowser(): boolean {\n\t\treturn platform.name === \"Chrome\";\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isSafariBrowser(): boolean {\n\t\treturn platform.name === \"Safari\";\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isChromeMobileBrowser(): boolean {\n\t\treturn platform.name === \"Chrome Mobile\";\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isFirefoxBrowser(): boolean {\n\t\treturn platform.name === \"Firefox\";\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isFirefoxMobileBrowser(): boolean {\n\t\treturn platform.name === \"Firefox Mobile\";\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isOperaBrowser(): boolean {\n\t\treturn platform.name === \"Opera\";\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isOperaMobileBrowser(): boolean {\n\t\treturn platform.name === \"Opera Mobile\";\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isEdgeBrowser(): boolean {\n\t\tconst version = platform?.version ? parseFloat(platform.version) : -1;\n\t\treturn platform.name === \"Microsoft Edge\" && version >= 80;\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isEdgeMobileBrowser(): boolean {\n\t\tconst version = platform?.version ? parseFloat(platform.version) : -1;\n\t\treturn platform.name === \"Microsoft Edge\" && platform.os?.family === 'Android' && version > 45;\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isAndroidBrowser(): boolean {\n\t\treturn platform.name === \"Android Browser\";\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isElectron(): boolean {\n\t\treturn platform.name === \"Electron\";\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isSamsungBrowser(): boolean {\n\t\treturn (\n\t\t\tplatform.name === \"Samsung Internet Mobile\" ||\n\t\t\tplatform.name === \"Samsung Internet\"\n\t\t);\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isIPhoneOrIPad(): boolean {\n\t\tconst userAgent = !!platform.ua ? platform.ua : navigator.userAgent;\n\n\t\tconst isTouchable = \"ontouchend\" in document;\n\t\tconst isIPad = /\\b(\\w*Macintosh\\w*)\\b/.test(userAgent) && isTouchable;\n\t\tconst isIPhone =\n\t\t\t/\\b(\\w*iPhone\\w*)\\b/.test(userAgent) &&\n\t\t\t/\\b(\\w*Mobile\\w*)\\b/.test(userAgent) &&\n\t\t\tisTouchable;\n\n\t\treturn isIPad || isIPhone;\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isIOSWithSafari(): boolean {\n\t\tconst userAgent = !!platform.ua ? platform.ua : navigator.userAgent;\n\t\treturn (\n\t\t\t/\\b(\\w*Apple\\w*)\\b/.test(navigator.vendor) &&\n\t\t\t/\\b(\\w*Safari\\w*)\\b/.test(userAgent) &&\n\t\t\t!/\\b(\\w*CriOS\\w*)\\b/.test(userAgent) &&\n\t\t\t!/\\b(\\w*FxiOS\\w*)\\b/.test(userAgent)\n\t\t);\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isIonicIos(): boolean {\n\t\treturn this.isIPhoneOrIPad() && platform.ua!!.indexOf(\"Safari\") === -1;\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isIonicAndroid(): boolean {\n\t\treturn (\n\t\t\tplatform.os!!.family === \"Android\" && platform.name == \"Android Browser\"\n\t\t);\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isMobileDevice(): boolean {\n\t\treturn platform.os!!.family === \"iOS\" || platform.os!!.family === \"Android\";\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic isReactNative(): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic canScreenShare(): boolean {\n\t\tconst version = platform?.version ? parseFloat(platform.version) : -1;\n\t\t// Reject mobile devices\n\t\tif (this.isMobileDevice()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (\n\t\t\tthis.isChromeBrowser() ||\n\t\t\tthis.isFirefoxBrowser() ||\n\t\t\tthis.isOperaBrowser() ||\n\t\t\tthis.isElectron() ||\n\t\t\tthis.isEdgeBrowser() ||\n\t\t\t(this.isSafariBrowser() && version >= 13)\n\t\t);\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic getName(): string {\n\t\treturn platform.name || \"\";\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic getVersion(): string {\n\t\treturn platform.version || \"\";\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic getFamily(): string {\n\t\treturn platform.os!!.family || \"\";\n\t}\n\n\t/**\n\t * @hidden\n\t */\n\tpublic getDescription(): string {\n\t\treturn platform.description || \"\";\n\t}\n}\n","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport freeice = require('freeice');\nimport uuid = require('uuid');\nimport { OpenViduLogger } from '../Logger/OpenViduLogger';\nimport { PlatformUtils } from '../Utils/Platform';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\n\nexport interface WebRtcPeerConfiguration {\n    mediaConstraints: {\n        audio: boolean,\n        video: boolean\n    };\n    simulcast: boolean;\n    onicecandidate: (event) => void;\n    iceServers: RTCIceServer[] | undefined;\n    mediaStream?: MediaStream;\n    mode?: 'sendonly' | 'recvonly' | 'sendrecv';\n    id?: string;\n}\n\nexport class WebRtcPeer {\n\n    pc: RTCPeerConnection;\n    id: string;\n    remoteCandidatesQueue: RTCIceCandidate[] = [];\n    localCandidatesQueue: RTCIceCandidate[] = [];\n\n    iceCandidateList: RTCIceCandidate[] = [];\n\n    private candidategatheringdone = false;\n\n    constructor(protected configuration: WebRtcPeerConfiguration) {\n        platform = PlatformUtils.getInstance();\n        this.configuration.iceServers = (!!this.configuration.iceServers && this.configuration.iceServers.length > 0) ? this.configuration.iceServers : freeice();\n\n        this.pc = new RTCPeerConnection({ iceServers: this.configuration.iceServers });\n        this.id = !!configuration.id ? configuration.id : this.generateUniqueId();\n\n        this.pc.onicecandidate = event => {\n            if (!!event.candidate) {\n                const candidate: RTCIceCandidate = event.candidate;\n                if (candidate) {\n                    this.localCandidatesQueue.push(<RTCIceCandidate>{ candidate: candidate.candidate });\n                    this.candidategatheringdone = false;\n                    this.configuration.onicecandidate(event.candidate);\n                } else if (!this.candidategatheringdone) {\n                    this.candidategatheringdone = true;\n                }\n            }\n        };\n\n        this.pc.onsignalingstatechange = () => {\n            if (this.pc.signalingState === 'stable') {\n                while (this.iceCandidateList.length > 0) {\n                    let candidate = this.iceCandidateList.shift();\n                    this.pc.addIceCandidate(<RTCIceCandidate>candidate);\n                }\n            }\n        };\n\n        this.start();\n    }\n\n    /**\n     * This function creates the RTCPeerConnection object taking into account the\n     * properties received in the constructor. It starts the SDP negotiation\n     * process: generates the SDP offer and invokes the onsdpoffer callback. This\n     * callback is expected to send the SDP offer, in order to obtain an SDP\n     * answer from another peer.\n     */\n    start(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (this.pc.signalingState === 'closed') {\n                reject('The peer connection object is in \"closed\" state. This is most likely due to an invocation of the dispose method before accepting in the dialogue');\n            }\n            if (!!this.configuration.mediaStream) {\n                for (const track of this.configuration.mediaStream.getTracks()) {\n                    this.pc.addTrack(track, this.configuration.mediaStream);\n                }\n                resolve();\n            }\n        });\n    }\n\n    /**\n     * This method frees the resources used by WebRtcPeer\n     */\n    dispose() {\n        logger.debug('Disposing WebRtcPeer');\n        if (this.pc) {\n            if (this.pc.signalingState === 'closed') {\n                return;\n            }\n            this.pc.close();\n            this.remoteCandidatesQueue = [];\n            this.localCandidatesQueue = [];\n        }\n    }\n\n    /**\n     * Function that creates an offer, sets it as local description and returns the offer param\n     * to send to OpenVidu Server (will be the remote description of other peer)\n     */\n    generateOffer(): Promise<string> {\n        return new Promise((resolve, reject) => {\n            let offerAudio, offerVideo = true;\n\n            // Constraints must have both blocks\n            if (!!this.configuration.mediaConstraints) {\n                offerAudio = (typeof this.configuration.mediaConstraints.audio === 'boolean') ?\n                    this.configuration.mediaConstraints.audio : true;\n                offerVideo = (typeof this.configuration.mediaConstraints.video === 'boolean') ?\n                    this.configuration.mediaConstraints.video : true;\n            }\n\n            const constraints: RTCOfferOptions = {\n                offerToReceiveAudio: (this.configuration.mode !== 'sendonly' && offerAudio),\n                offerToReceiveVideo: (this.configuration.mode !== 'sendonly' && offerVideo)\n            };\n\n            logger.debug('RTCPeerConnection constraints: ' + JSON.stringify(constraints));\n\n            if (platform.isSafariBrowser() && !platform.isIonicIos()) {\n                // Safari (excluding Ionic), at least on iOS just seems to support unified plan, whereas in other browsers is not yet ready and considered experimental\n                if (offerAudio) {\n                    this.pc.addTransceiver('audio', {\n                        direction: this.configuration.mode,\n                    });\n                }\n\n                if (offerVideo) {\n                    this.pc.addTransceiver('video', {\n                        direction: this.configuration.mode,\n                    });\n                }\n\n                this.pc\n                    .createOffer()\n                    .then(offer => {\n                        logger.debug('Created SDP offer');\n                        return this.pc.setLocalDescription(offer);\n                    })\n                    .then(() => {\n                        const localDescription = this.pc.localDescription;\n\n                        if (!!localDescription) {\n                            logger.debug('Local description set', localDescription.sdp);\n                            resolve(localDescription.sdp);\n                        } else {\n                            reject('Local description is not defined');\n                        }\n                    })\n                    .catch(error => reject(error));\n\n            } else {\n\n                // Rest of platforms\n                this.pc.createOffer(constraints).then(offer => {\n                    logger.debug('Created SDP offer');\n                    return this.pc.setLocalDescription(offer);\n                })\n                    .then(() => {\n                        const localDescription = this.pc.localDescription;\n                        if (!!localDescription) {\n                            logger.debug('Local description set', localDescription.sdp);\n                            resolve(localDescription.sdp);\n                        } else {\n                            reject('Local description is not defined');\n                        }\n                    })\n                    .catch(error => reject(error));\n            }\n        });\n    }\n\n    /**\n     * Function invoked when a SDP answer is received. Final step in SDP negotiation, the peer\n     * just needs to set the answer as its remote description\n     */\n    processAnswer(sdpAnswer: string, needsTimeoutOnProcessAnswer: boolean): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const answer: RTCSessionDescriptionInit = {\n                type: 'answer',\n                sdp: sdpAnswer\n            };\n            logger.debug('SDP answer received, setting remote description');\n\n            if (this.pc.signalingState === 'closed') {\n                reject('RTCPeerConnection is closed');\n            }\n\n            this.setRemoteDescription(answer, needsTimeoutOnProcessAnswer, resolve, reject);\n\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    setRemoteDescription(answer: RTCSessionDescriptionInit, needsTimeoutOnProcessAnswer: boolean, resolve: (value?: string | PromiseLike<string> | undefined) => void, reject: (reason?: any) => void) {\n        if (platform.isIonicIos()) {\n            // Ionic iOS platform\n            if (needsTimeoutOnProcessAnswer) {\n                // 400 ms have not elapsed yet since first remote stream triggered Stream#initWebRtcPeerReceive\n                setTimeout(() => {\n                    logger.info('setRemoteDescription run after timeout for Ionic iOS device');\n                    this.pc.setRemoteDescription(new RTCSessionDescription(answer)).then(() => resolve()).catch(error => reject(error));\n                }, 250);\n            } else {\n                // 400 ms have elapsed\n                this.pc.setRemoteDescription(new RTCSessionDescription(answer)).then(() => resolve()).catch(error => reject(error));\n            }\n        } else {\n            // Rest of platforms\n            this.pc.setRemoteDescription(answer).then(() => resolve()).catch(error => reject(error));\n        }\n    }\n\n    /**\n     * Callback function invoked when an ICE candidate is received\n     */\n    addIceCandidate(iceCandidate: RTCIceCandidate): Promise<void> {\n        return new Promise((resolve, reject) => {\n            logger.debug('Remote ICE candidate received', iceCandidate);\n            this.remoteCandidatesQueue.push(iceCandidate);\n            switch (this.pc.signalingState) {\n                case 'closed':\n                    reject(new Error('PeerConnection object is closed'));\n                    break;\n                case 'stable':\n                    if (!!this.pc.remoteDescription) {\n                        this.pc.addIceCandidate(iceCandidate).then(() => resolve()).catch(error => reject(error));\n                    } else {\n                        this.iceCandidateList.push(iceCandidate);\n                        resolve();\n                    }\n                    break;\n                default:\n                    this.iceCandidateList.push(iceCandidate);\n                    resolve();\n            }\n        });\n    }\n\n    addIceConnectionStateChangeListener(otherId: string) {\n        this.pc.oniceconnectionstatechange = () => {\n            const iceConnectionState: RTCIceConnectionState = this.pc.iceConnectionState;\n            switch (iceConnectionState) {\n                case 'disconnected':\n                    // Possible network disconnection\n                    logger.warn('IceConnectionState of RTCPeerConnection ' + this.id + ' (' + otherId + ') change to \"disconnected\". Possible network disconnection');\n                    break;\n                case 'failed':\n                    logger.error('IceConnectionState of RTCPeerConnection ' + this.id + ' (' + otherId + ') to \"failed\"');\n                    break;\n                case 'closed':\n                    logger.log('IceConnectionState of RTCPeerConnection ' + this.id + ' (' + otherId + ') change to \"closed\"');\n                    break;\n                case 'new':\n                    logger.log('IceConnectionState of RTCPeerConnection ' + this.id + ' (' + otherId + ') change to \"new\"');\n                    break;\n                case 'checking':\n                    logger.log('IceConnectionState of RTCPeerConnection ' + this.id + ' (' + otherId + ') change to \"checking\"');\n                    break;\n                case 'connected':\n                    logger.log('IceConnectionState of RTCPeerConnection ' + this.id + ' (' + otherId + ') change to \"connected\"');\n                    break;\n                case 'completed':\n                    logger.log('IceConnectionState of RTCPeerConnection ' + this.id + ' (' + otherId + ') change to \"completed\"');\n                    break;\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    generateUniqueId(): string {\n        return uuid.v4();\n    }\n\n}\n\n\nexport class WebRtcPeerRecvonly extends WebRtcPeer {\n    constructor(configuration: WebRtcPeerConfiguration) {\n        configuration.mode = 'recvonly';\n        super(configuration);\n    }\n}\n\nexport class WebRtcPeerSendonly extends WebRtcPeer {\n    constructor(configuration: WebRtcPeerConfiguration) {\n        configuration.mode = 'sendonly';\n        super(configuration);\n    }\n}\n\nexport class WebRtcPeerSendrecv extends WebRtcPeer {\n    constructor(configuration: WebRtcPeerConfiguration) {\n        configuration.mode = 'sendrecv';\n        super(configuration);\n    }\n}","/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n// tslint:disable:no-string-literal\n\nimport { Stream } from '../../OpenVidu/Stream';\nimport { OpenViduLogger } from '../Logger/OpenViduLogger';\nimport { PlatformUtils } from '../Utils/Platform';\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\ninterface WebrtcStatsConfig {\n    interval: number,\n    httpEndpoint: string\n}\n\ninterface JSONStatsResponse {\n    '@timestamp': string,\n    participant_id: string,\n    session_id: string,\n    platform: string,\n    platform_description: string,\n    stream: string,\n    webrtc_stats: IWebrtcStats\n}\n\ninterface IWebrtcStats {\n    inbound: {\n        audio: {\n            bytesReceived: number,\n            packetsReceived: number,\n            packetsLost: number\n        } | {},\n        video: {\n            bytesReceived: number,\n            packetsReceived: number,\n            packetsLost: number,\n            framesDecoded: number,\n            nackCount: number\n        } | {}\n    } | {},\n    outbound: {\n        audio: {\n            bytesSent: number,\n            packetsSent: number,\n        } | {},\n        video: {\n            bytesSent: number,\n            packetsSent: number,\n            framesEncoded: number,\n            nackCount: number\n        } | {}\n    } | {}\n};\n\nexport class WebRtcStats {\n\n    private readonly STATS_ITEM_NAME = 'webrtc-stats-config';\n\n    private webRtcStatsEnabled = false;\n    private webRtcStatsIntervalId: NodeJS.Timer;\n    private statsInterval = 1;\n    private POST_URL: string;\n\n    constructor(private stream: Stream) {\n        platform = PlatformUtils.getInstance();\n    }\n\n    public isEnabled(): boolean {\n        return this.webRtcStatsEnabled;\n    }\n\n    public initWebRtcStats(): void {\n\n        const webrtcObj = localStorage.getItem(this.STATS_ITEM_NAME);\n\n        if (!!webrtcObj) {\n            this.webRtcStatsEnabled = true;\n            const webrtcStatsConfig: WebrtcStatsConfig = JSON.parse(webrtcObj);\n            // webrtc object found in local storage\n            logger.warn('WebRtc stats enabled for stream ' + this.stream.streamId + ' of connection ' + this.stream.connection.connectionId);\n            logger.warn('localStorage item: ' + JSON.stringify(webrtcStatsConfig));\n\n            this.POST_URL = webrtcStatsConfig.httpEndpoint;\n            this.statsInterval = webrtcStatsConfig.interval;  // Interval in seconds\n\n            this.webRtcStatsIntervalId = setInterval(async () => {\n                await this.sendStatsToHttpEndpoint();\n            }, this.statsInterval * 1000);\n\n        }else {\n            logger.debug('WebRtc stats not enabled');\n        }\n    }\n\n    // Used in test-app\n    public getSelectedIceCandidateInfo(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.getStats().then(\n                (stats) => {\n                    if (platform.isChromeBrowser() || platform.isChromeMobileBrowser() || platform.isOperaBrowser() || platform.isOperaMobileBrowser()) {\n                        let localCandidateId, remoteCandidateId, googCandidatePair;\n                        const localCandidates = {};\n                        const remoteCandidates = {};\n                        for (const key in stats) {\n                            const stat = stats[key];\n                            if (stat.type === 'localcandidate') {\n                                localCandidates[stat.id] = stat;\n                            } else if (stat.type === 'remotecandidate') {\n                                remoteCandidates[stat.id] = stat;\n                            } else if (stat.type === 'googCandidatePair' && (stat.googActiveConnection === 'true')) {\n                                googCandidatePair = stat;\n                                localCandidateId = stat.localCandidateId;\n                                remoteCandidateId = stat.remoteCandidateId;\n                            }\n                        }\n                        let finalLocalCandidate = localCandidates[localCandidateId];\n                        if (!!finalLocalCandidate) {\n                            const candList = this.stream.getLocalIceCandidateList();\n                            const cand = candList.filter((c: RTCIceCandidate) => {\n                                return (!!c.candidate &&\n                                    c.candidate.indexOf(finalLocalCandidate.ipAddress) >= 0 &&\n                                    c.candidate.indexOf(finalLocalCandidate.portNumber) >= 0 &&\n                                    c.candidate.indexOf(finalLocalCandidate.priority) >= 0);\n                            });\n                            finalLocalCandidate.raw = !!cand[0] ? cand[0].candidate : 'ERROR: Cannot find local candidate in list of sent ICE candidates';\n                        } else {\n                            finalLocalCandidate = 'ERROR: No active local ICE candidate. Probably ICE-TCP is being used';\n                        }\n\n                        let finalRemoteCandidate = remoteCandidates[remoteCandidateId];\n                        if (!!finalRemoteCandidate) {\n                            const candList = this.stream.getRemoteIceCandidateList();\n                            const cand = candList.filter((c: RTCIceCandidate) => {\n                                return (!!c.candidate &&\n                                    c.candidate.indexOf(finalRemoteCandidate.ipAddress) >= 0 &&\n                                    c.candidate.indexOf(finalRemoteCandidate.portNumber) >= 0 &&\n                                    c.candidate.indexOf(finalRemoteCandidate.priority) >= 0);\n                            });\n                            finalRemoteCandidate.raw = !!cand[0] ? cand[0].candidate : 'ERROR: Cannot find remote candidate in list of received ICE candidates';\n                        } else {\n                            finalRemoteCandidate = 'ERROR: No active remote ICE candidate. Probably ICE-TCP is being used';\n                        }\n\n                        resolve({\n                            googCandidatePair,\n                            localCandidate: finalLocalCandidate,\n                            remoteCandidate: finalRemoteCandidate\n                        });\n                    } else {\n                        reject('Selected ICE candidate info only available for Chrome');\n                    }\n                }).catch((error) => {\n                    reject(error);\n                });\n        });\n    }\n\n    public stopWebRtcStats() {\n        if (this.webRtcStatsEnabled) {\n            clearInterval(this.webRtcStatsIntervalId);\n            logger.warn('WebRtc stats stopped for disposed stream ' + this.stream.streamId + ' of connection ' + this.stream.connection.connectionId);\n        }\n    }\n\n    private async sendStats(url: string, response: JSONStatsResponse): Promise<void> {\n        try {\n            const configuration: RequestInit = {\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify(response),\n                method: 'POST',\n            };\n            await fetch(url, configuration);\n\n        } catch (error) {\n            logger.error(error);\n        }\n    }\n\n    private async sendStatsToHttpEndpoint(): Promise<void> {\n        try {\n            const webrtcStats: IWebrtcStats = await this.getStats();\n            const response = this.generateJSONStatsResponse(webrtcStats);\n            await this.sendStats(this.POST_URL, response);\n        } catch (error) {\n            logger.log(error);\n        }\n    }\n\n    private async getStats(): Promise<IWebrtcStats> {\n\n        return new Promise(async (resolve, reject) => {\n            if (platform.isChromeBrowser() || platform.isChromeMobileBrowser() || platform.isOperaBrowser() || platform.isOperaMobileBrowser()) {\n\n                const pc: any = this.stream.getRTCPeerConnection();\n                pc.getStats((statsReport) => {\n                    const stats = statsReport.result().filter((stat) => stat.type === 'ssrc');\n                    const response = this.initWebRtcStatsResponse();\n\n                    stats.forEach(stat => {\n                        const valueNames: string[] = stat.names();\n                        const mediaType = stat.stat(\"mediaType\");\n                        const isAudio = mediaType === 'audio' && valueNames.includes('audioOutputLevel');\n                        const isVideo = mediaType === 'video' && valueNames.includes('qpSum');\n                        const isIndoundRtp = valueNames.includes('bytesReceived') && (isAudio || isVideo);\n                        const isOutboundRtp = valueNames.includes('bytesSent');\n\n                        if(isIndoundRtp){\n                            response.inbound[mediaType].bytesReceived = Number(stat.stat('bytesReceived'));\n                            response.inbound[mediaType].packetsReceived = Number(stat.stat('packetsReceived'));\n                            response.inbound[mediaType].packetsLost = Number(stat.stat('packetsLost'));\n                            if(mediaType === 'video'){\n                                response.inbound['video'].framesDecoded = Number(stat.stat('framesDecoded'));\n                                response.inbound['video'].nackCount = Number(stat.stat('nackCount'));\n                            }\n\n                        } else if(isOutboundRtp) {\n                            response.outbound[mediaType].bytesSent = Number(stat.stat('bytesSent'));\n                            response.outbound[mediaType].packetsSent = Number(stat.stat('packetsSent'));\n                            if(mediaType === 'video'){\n                                response.outbound['video'].framesEncoded = Number(stat.stat('framesEncoded'));\n                                response.outbound['video'].nackCount = Number(stat.stat('nackCount'));\n                            }\n                        }\n                    });\n                    resolve(response);\n\n                });\n            } else {\n                const statsReport:any = await this.stream.getRTCPeerConnection().getStats(null);\n                const response = this.initWebRtcStatsResponse();\n                statsReport.forEach((stat: any) => {\n\n                    const mediaType = stat.mediaType;\n                    // isRemote property has been deprecated from Firefox 66 https://blog.mozilla.org/webrtc/getstats-isremote-66/\n                    switch (stat.type) {\n                        case \"outbound-rtp\":\n                            response.outbound[mediaType].bytesSent = Number(stat.bytesSent);\n                            response.outbound[mediaType].packetsSent = Number(stat.packetsSent);\n                            if(mediaType === 'video'){\n                                response.outbound[mediaType].framesEncoded = Number(stat.framesEncoded);\n                            }\n                            break;\n                        case \"inbound-rtp\":\n                            response.inbound[mediaType].bytesReceived = Number(stat.bytesReceived);\n                            response.inbound[mediaType].packetsReceived = Number(stat.packetsReceived);\n                            response.inbound[mediaType].packetsLost = Number(stat.packetsLost);\n                            if (mediaType === 'video') {\n                                response.inbound[mediaType].framesDecoded = Number(stat.framesDecoded);\n                                response.inbound[mediaType].nackCount = Number(stat.nackCount);\n                            }\n                            break;\n                    }\n                });\n\n                return resolve(response);\n            }\n\n        });\n\n    }\n\n    private generateJSONStatsResponse(stats: IWebrtcStats): JSONStatsResponse {\n        return {\n            '@timestamp': new Date().toISOString(),\n            participant_id: this.stream.connection.data,\n            session_id: this.stream.session.sessionId,\n            platform: platform.getName(),\n            platform_description: platform.getDescription(),\n            stream: 'webRTC',\n            webrtc_stats: stats\n        };\n    }\n\n    private initWebRtcStatsResponse(): IWebrtcStats {\n\n        return {\n            inbound: {\n                audio: {},\n                video: {}\n            },\n            outbound: {\n                audio: {},\n                video: {}\n            }\n        };\n\n    }\n\n}"]}